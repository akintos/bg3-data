<ls:UIWidget x:Name="PartyCharacterSheet_c"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:System="clr-namespace:System;assembly=mscorlib"
			 mc:Ignorable="d"
             d:DesignHeight="2160" d:DesignWidth="3840"
             xmlns:ls="clr-namespace:ls;assembly=SharedGUI"
             xmlns:noesis="clr-namespace:NoesisGUIExtensions;assembly=Noesis.GUI.Extensions"
             xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
             ls:UIWidget.Focusable="False"
             Template="{DynamicResource StandardFraming}">

    <ls:UIWidget.Resources>
        <DataTemplate x:Key="CharacterSheet">
            <Grid Width="{StaticResource CharacterPanelWidth}" ls:TooltipExtender.Owner="{Binding .}">
                <Grid.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Grid.RenderTransform>
                <Grid.ColumnDefinitions>
                <ColumnDefinition/>
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="90"/>
              </Grid.RowDefinitions>
              
                <!-- Frame -->
              <ContentControl Grid.Row="0" Template="{StaticResource SingleBasicPanel}" HorizontalAlignment="Center" VerticalAlignment="Top">
                <!-- Details -->
                <ContentControl Template="{StaticResource CharacterDetailsTemplate}" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="54,0,0,0"/>
              </ContentControl>
              <!-- XP bar -->
                <Control Grid.Row="1" Template="{StaticResource XPBarTemplate}"  x:Name="BottomProgressBar"/>
                <b:Interaction.Triggers>
                    <b:EventTrigger EventName="Loaded">
                        <b:ControlStoryboardAction Storyboard="{StaticResource AnimReset}"/>
                    </b:EventTrigger>
                    <b:TimerTrigger EventName="Loaded" MillisecondsPerTick="{Binding (ItemsControl.AlternationIndex), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}, Converter={StaticResource MultiplierConverter}, ConverterParameter=100}" TotalTicks="1">
                        <b:ControlStoryboardAction Storyboard="{StaticResource animSlotIn_c}"/>
                    </b:TimerTrigger>
                </b:Interaction.Triggers>
            </Grid>
        </DataTemplate>

    </ls:UIWidget.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="70"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="200"/>
        </Grid.RowDefinitions>
        <b:Interaction.Triggers>
            <b:EventTrigger EventName="Loaded">
                <b:InvokeCommandAction  Command="{Binding DataContext.InsertCharacterSheetCommand, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}"/>
            </b:EventTrigger>
        </b:Interaction.Triggers>

        <StackPanel Grid.Row="0" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
            <Image Source="pack://application:,,,/GustavNoesisGUI;component/Assets/BottomBar/ico_identity_d.png" Stretch="None"/>
            <TextBlock Text="{Binding Source='hf76cbcb4g83ddg49d3gb01cgd00359f84713',Converter={StaticResource TranslatedStringConverter}}"  Foreground="{DynamicResource LS_PrimaryColor}" FontSize="{DynamicResource MediumFontSize}" FontWeight="Bold" VerticalAlignment="Center"/>
        </StackPanel>

        <Grid Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Top">
            <!-- Vacant Slots -->
            <ContentControl HorizontalAlignment="Center" VerticalAlignment="Top" ContentTemplate="{StaticResource PartyVacantSlots}" Content="{Binding}" Margin="0 130 0 0"/>

            <!-- Horizontal list of Characters -->
            <ls:LSListBox x:Name="CharacterList" 
                          ItemsSource="{Binding Data.Players}"
                          ActionPrevEvent="UILeft" ActionNextEvent="UIRight">
                <b:Interaction.Triggers>
                    <b:EventTrigger EventName="LocalFocusChanged">
                        <b:InvokeCommandAction Command="{Binding DataContext.ShowTooltipOnUIElement, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="{Binding Path=LocalFocus, ElementName=CharacterList}"/>
                    </b:EventTrigger>
                </b:Interaction.Triggers>
                <ls:LSListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal"/>
                    </ItemsPanelTemplate>
                </ls:LSListBox.ItemsPanel>
                <ls:LSListBox.ItemTemplate>
                    <DataTemplate>
                        <ls:LSListBox ActionPrevEvent="UILeft" ActionNextEvent="UIRight"
                                      HorizontalAlignment="Left" VerticalAlignment="Top"
                                      ItemTemplate="{StaticResource CharacterSheet}"
                                      ItemContainerStyle="{StaticResource PartyMemberStyle}"
                                      ItemsSource="{Binding AssignedCharacters}"
                                      SelectedItem="{Binding DataContext.CurrentPlayer.SelectedCharacter, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}"
                                      AlternationCount="{Binding AssignedCharacters.Count}"                                           
                                      LocalFocusSelector="{Binding ElementName=Selector,Mode=OneWay}"
                                      BorderBrush="Transparent" Background="Transparent"
                                      MaxWidth="3840"
                                      AutoScrollSelectedIntoView="True">
                            <ListBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Horizontal"/>
                                </ItemsPanelTemplate>
                            </ListBox.ItemsPanel>
                            <b:Interaction.Triggers>
                                <b:EventTrigger EventName="SelectionChanged">
                                    <b:InvokeCommandAction Command="{Binding SelectCharacter}" CommandParameter="{Binding ElementName=CharacterList, Path=SelectedItem}"/>
                                </b:EventTrigger>
                            </b:Interaction.Triggers>
                        </ls:LSListBox>
                    </DataTemplate>
                </ls:LSListBox.ItemTemplate>
            </ls:LSListBox>
            <Control x:Name="Selector" IsHitTestVisible="False" VerticalAlignment="Top" HorizontalAlignment="Left" Template="{StaticResource SelectorTemplate}" Visibility="Hidden"/>
        </Grid>

        <StackPanel Grid.Row="2" VerticalAlignment="Center" HorizontalAlignment="Center" Orientation="Horizontal">
            <ls:LSButton Style="{StaticResource ControllerButton}" VerticalAlignment="Center" 
                         DataContext="{Binding CurrentPlayer.UIData.InputEvents, Converter={StaticResource FindInputEventConverter}, ConverterParameter='UIAccept'}"
                         Content="{Binding Source='h96519a3dg3102g441dg8336g0c0e10f4c388',Converter={StaticResource TranslatedStringConverter}}"
                         Command="{Binding DataContext.ToggleButtonCommand, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" 
                         CommandParameter="{Binding Path=LocalFocus, ElementName=CharacterList}"/>
            
            <ls:LSButton Style="{StaticResource ControllerButton}" VerticalAlignment="Center"
                         DataContext = "{Binding CurrentPlayer.UIData.InputEvents, Converter={StaticResource FindInputEventConverter}, ConverterParameter='UIShowInfo'}"
                         Content="{Binding Source='h557ee2acgaaf4g4b85g9a67g29f53570c4f0',Converter={StaticResource TranslatedStringConverter}}"
                         Command="{Binding DataContext.ToggleTooltipOnUIElement, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" 
                         CommandParameter="{Binding Path=LocalFocus, ElementName=CharacterList}"/>
            
            <ls:LSButton Style="{StaticResource ControllerButton}" VerticalAlignment="Center" 
                         DataContext="{Binding CurrentPlayer.UIData.InputEvents, Converter={StaticResource FindInputEventConverter}, ConverterParameter='UIToggleCharacterOverview'}"
                         Content="{Binding Source='ha4177187gddecg4e4dg8870g01827a52f589',Converter={StaticResource TranslatedStringConverter}}"
                         Command="{Binding DataContext.CustomEvent, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" 
                         CommandParameter="ToggleCharacterOverview"/>
            
            <ls:LSButton Style="{StaticResource ControllerButton}" VerticalAlignment="Center" 
                         DataContext="{Binding CurrentPlayer.UIData.InputEvents, Converter={StaticResource FindInputEventConverter}, ConverterParameter='UICancel'}"
                         Content="{Binding Source='h6fefa28bg2149g4cacga071gd95b236b2d0b',Converter={StaticResource TranslatedStringConverter}}"
                         Command="{Binding DataContext.CustomEvent, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" 
                         CommandParameter="CloseWidget"/>

            <ls:LSButton Style="{StaticResource ControllerButton}" VerticalAlignment="Center" 
                         DataContext="{Binding CurrentPlayer.UIData.InputEvents, Converter={StaticResource FindInputEventConverter}, ConverterParameter='UIUp'}"
                         Content="{Binding Source='h5c405124g4622g4197g9239gb635f371bf0e',Converter={StaticResource TranslatedStringConverter}}" EatInput="False"/>
        </StackPanel>

    </Grid>
</ls:UIWidget>
