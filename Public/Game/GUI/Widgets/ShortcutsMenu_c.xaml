<ls:UIWidget xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:ls="clr-namespace:ls;assembly=SharedGUI"
             xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             mc:Ignorable="d"
             x:Name="shortcutsMenu"
             ls:UIWidget.ContextName="GameMenu"
             d:DesignWidth="3840" d:DesignHeight="2160" d:DataContext="{d:DesignInstance {x:Type ls:DCGameMenu}, IsDesignTimeCreatable=True}">
    
    <ls:UIWidget.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Library/Radials_c.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <Thickness x:Key="SlotPosition1">-172,-172,-172,-148</Thickness>
            <Thickness x:Key="SlotPosition2">-172,-172,-172,-126</Thickness>

            <Storyboard x:Key="ScreenAppear" FillBehavior="Stop">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="BackgroundCover" Storyboard.TargetProperty="Opacity">
                    <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.02" Value="0"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MenuRadial" Storyboard.TargetProperty="Opacity">
                    <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="0"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.02" Value="0"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                </DoubleAnimationUsingKeyFrames>

                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MenuRadial" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                    <LinearDoubleKeyFrame KeyTime="0:0:0" Value="0.9" />
                    <LinearDoubleKeyFrame KeyTime="0:0:0.02" Value="0.9" />
                    <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1.0">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <CubicEase EasingMode="EaseInOut"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>

                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MenuRadial" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                    <LinearDoubleKeyFrame KeyTime="0:0:0" Value="0.9" />
                    <LinearDoubleKeyFrame KeyTime="0:0:0.02" Value="0.9" />
                    <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1.0">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <CubicEase EasingMode="EaseInOut"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>

            </Storyboard>

            <ControlTemplate x:Key="RadialItemIconTemplate">
                <Grid>
                    <Image x:Name="BaseImage" VerticalAlignment="Center" HorizontalAlignment="Center" Source="{DynamicResource BaseImage}" Stretch="None"/>
                    <Image x:Name="Highlight2" VerticalAlignment="Center" HorizontalAlignment="Center" Source="{DynamicResource HLImage}" Stretch="None" Opacity="0"/>
                </Grid>
                <ControlTemplate.Triggers>

                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ls:LSRadialListItem}}}" Value="True"/>
                            <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource AncestorType={x:Type ls:LSRadialListItem}}}" Value="True"/>
                        </MultiDataTrigger.Conditions>

                        <MultiDataTrigger.EnterActions>
                            <BeginStoryboard x:Name="FadeInSelectedAnim">
                                <Storyboard>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Highlight2">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.02" Value="1"/>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </MultiDataTrigger.EnterActions>
                        <MultiDataTrigger.ExitActions>
                            <BeginStoryboard x:Name="FadeOutSelectedAnim">
                                <Storyboard>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Highlight2">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </MultiDataTrigger.ExitActions>
                    </MultiDataTrigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
        </ResourceDictionary>
    </ls:UIWidget.Resources>
    <ls:UIWidget.Template>

        <ControlTemplate>
            <Grid x:Name="BackgroundCover" Background="{StaticResource LS_PanelBackground}">
                <ls:Radial x:Name="MenuRadial" Margin="0,0,0,120" LeftEvent="UIRadialLeft" RightEvent="UIRadialRight" ls:Radial.UpEvent="UIRadialUp" DownEvent="UIRadialDown" HalfElementOffset="True" PlayerId="{Binding CurrentPlayer.PlayerId}" RenderTransformOrigin="0.5,0.5" >
                    <ls:Radial.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform ScaleX="1" ScaleY="1"/>
                        </TransformGroup>
                    </ls:Radial.RenderTransform>
                    <b:Interaction.Triggers>
                        <b:EventTrigger EventName="LocalFocusChanged">
                            <ls:LSPlaySound Sound="UI_HUD_Controller_ShortcutsMenu_Hover" />
                        </b:EventTrigger>
                    </b:Interaction.Triggers>
                    <ls:LSRadialListItem x:Name="ShortCutCharacterSheet" Tag="CharacterSheet">
                        <Control Template="{StaticResource RadialItemIconTemplate}">
                            <Control.Resources>
                                <ImageSource x:Key="BaseImage">pack://application:,,,/GustavNoesisGUI;component/Assets/PanelSelect_c/c_ico_characterSheet_d.png</ImageSource>
                                <ImageSource x:Key="HLImage">pack://application:,,,/GustavNoesisGUI;component/Assets/PanelSelect_c/c_ico_characterSheet_h.png</ImageSource>
                            </Control.Resources>
                        </Control>
                    </ls:LSRadialListItem>
                    <ls:LSRadialListItem x:Name="ShortCutSpellBook" Tag="SpellBook">
                        <Control Template="{StaticResource RadialItemIconTemplate}">
                            <Control.Resources>
                                <ImageSource x:Key="BaseImage">pack://application:,,,/GustavNoesisGUI;component/Assets/PanelSelect_c/c_ico_spellBook_d.png</ImageSource>
                                <ImageSource x:Key="HLImage">pack://application:,,,/GustavNoesisGUI;component/Assets/PanelSelect_c/c_ico_spellBook_h.png</ImageSource>
                            </Control.Resources>
                        </Control>
                    </ls:LSRadialListItem>
                    <ls:LSRadialListItem Tag="TadPoles" IsEnabled="{Binding CurrentPlayer.PartyUnlockedTadpolePowers}">
                        <Grid Visibility="{Binding CurrentPlayer.PartyUnlockedTadpolePowers, Converter={StaticResource BoolToVisibleConverter}}">
                            <TextBlock x:Name="TadpoleCount" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="160,-60,-60,50" Text="{Binding CurrentPlayer.PartyTadpoleCount, StringFormat={}x{0}}"/>
                                <Control Template="{StaticResource RadialItemIconTemplate}" HorizontalAlignment="Center" VerticalAlignment="Center" >
                                <Control.Resources>
                                    <ImageSource x:Key="BaseImage">pack://application:,,,/GustavNoesisGUI;component/Assets/PanelSelect_c/c_ico_illithidPowers_d.png</ImageSource >
                                    <ImageSource x:Key="HLImage">pack://application:,,,/GustavNoesisGUI;component/Assets/PanelSelect_c/c_ico_illithidPowers_h.png</ImageSource>
                                </Control.Resources>
                            </Control>
                        </Grid>
                    </ls:LSRadialListItem>
                    <ls:LSRadialListItem Tag="Journal">
                        <Control Template="{StaticResource RadialItemIconTemplate}">
                            <Control.Resources>
                                <ImageSource x:Key="BaseImage">pack://application:,,,/GustavNoesisGUI;component/Assets/PanelSelect_c/c_ico_journal_d.png</ImageSource>
                                <ImageSource x:Key="HLImage">pack://application:,,,/GustavNoesisGUI;component/Assets/PanelSelect_c/c_ico_journal_h.png</ImageSource>
                            </Control.Resources>
                        </Control>
                    </ls:LSRadialListItem>
                    <ls:LSRadialListItem Tag="CombatLog">
                        <Control Template="{StaticResource RadialItemIconTemplate}">
                            <Control.Resources>
                                <ImageSource x:Key="BaseImage">pack://application:,,,/GustavNoesisGUI;component/Assets/PanelSelect_c/c_ico_inventory_d.png</ImageSource>
                                <ImageSource x:Key="HLImage">pack://application:,,,/GustavNoesisGUI;component/Assets/PanelSelect_c/c_ico_inventory_h.png</ImageSource>
                            </Control.Resources>
                        </Control>
                    </ls:LSRadialListItem>
                    <ls:LSRadialListItem x:Name="LongRestItem" Tag="LongRest">
                        <Control Template="{StaticResource RadialItemIconTemplate}">
                            <Control.Resources>
                                <ImageSource x:Key="BaseImage">pack://application:,,,/GustavNoesisGUI;component/Assets/PanelSelect_c/c_ico_longRest_d.png</ImageSource>
                                <ImageSource x:Key="HLImage">pack://application:,,,/GustavNoesisGUI;component/Assets/PanelSelect_c/c_ico_longRest_h.png</ImageSource>
                            </Control.Resources>
                        </Control>
                    </ls:LSRadialListItem>
                    <ls:LSRadialListItem x:Name="CampItem" Tag="Camp" IsEnabled="False">
                        <Control Template="{StaticResource RadialItemIconTemplate}">
                            <Control.Resources>
                                <ImageSource x:Key="BaseImage">pack://application:,,,/GustavNoesisGUI;component/Assets/PanelSelect_c/c_ico_goToCamp_d.png</ImageSource>
                                <ImageSource x:Key="HLImage">pack://application:,,,/GustavNoesisGUI;component/Assets/PanelSelect_c/c_ico_goToCamp_h.png</ImageSource>
                            </Control.Resources>
                        </Control>
                    </ls:LSRadialListItem>
                    <ls:LSRadialListItem x:Name="ShortRestItem" Tag="ShortRest" IsEnabled="{Binding CurrentPlayer.SelectedCharacter.Stats.ShortRestPointsResource.Value, Converter={StaticResource GreaterThanConverter}, ConverterParameter='0'}">
                        <Grid>
                            <Grid x:Name="DotsPanel" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0,0,0,-20">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="60"/>
                                    <ColumnDefinition Width="60"/>
                                </Grid.ColumnDefinitions>
                                <Image x:Name="SR1" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/PanelSelect_c/c_ico_shortRest_available.png" Grid.Column="0" Width="48"/>
                                <Image x:Name="SR2" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/PanelSelect_c/c_ico_shortRest_available.png" Grid.Column="1" Width="48"/>
                            </Grid>
                            <Control Template="{StaticResource RadialItemIconTemplate}">
                                <Control.Resources>
                                    <ImageSource x:Key="BaseImage">pack://application:,,,/GustavNoesisGUI;component/Assets/PanelSelect_c/c_ico_shortRest_d.png</ImageSource>
                                    <ImageSource x:Key="HLImage">pack://application:,,,/GustavNoesisGUI;component/Assets/PanelSelect_c/c_ico_shortRest_h.png</ImageSource>
                                </Control.Resources>
                            </Control>
                        </Grid>
                    </ls:LSRadialListItem>
                    <ls:LSRadialListItem x:Name="FTBItem" Tag="FTB">
                        <Control Template="{StaticResource RadialItemIconTemplate}">
                            <Control.Resources>
                                <ImageSource x:Key="BaseImage">pack://application:,,,/GustavNoesisGUI;component/Assets/PanelSelect_c/c_ico_ftb_d.png</ImageSource>
                                <ImageSource x:Key="HLImage">pack://application:,,,/GustavNoesisGUI;component/Assets/PanelSelect_c/c_ico_ftb_h.png</ImageSource>
                            </Control.Resources>
                        </Control>
                    </ls:LSRadialListItem>
                    <ls:LSRadialListItem Tag="Map">
                        <Control Template="{StaticResource RadialItemIconTemplate}">
                            <Control.Resources>
                                <ImageSource x:Key="BaseImage">pack://application:,,,/GustavNoesisGUI;component/Assets/PanelSelect_c/c_ico_map_d.png</ImageSource>
                                <ImageSource x:Key="HLImage">pack://application:,,,/GustavNoesisGUI;component/Assets/PanelSelect_c/c_ico_map_h.png</ImageSource>
                            </Control.Resources>
                        </Control>
                    </ls:LSRadialListItem>
                    <ls:LSRadialListItem x:Name="WaypointsItem" Tag="Waypoints" IsEnabled="False">
                        <Control Template="{StaticResource RadialItemIconTemplate}">
                            <Control.Resources>
                                <ImageSource x:Key="BaseImage">pack://application:,,,/GustavNoesisGUI;component/Assets/PanelSelect_c/c_ico_quickTravel_d.png</ImageSource>
                                <ImageSource x:Key="HLImage">pack://application:,,,/GustavNoesisGUI;component/Assets/PanelSelect_c/c_ico_quickTravel_h.png</ImageSource>
                            </Control.Resources>
                        </Control>
                    </ls:LSRadialListItem>
                    <ls:LSRadialListItem Tag="Alchemy">
                        <Control Template="{StaticResource RadialItemIconTemplate}">
                            <Control.Resources>
                                <ImageSource x:Key="BaseImage">pack://application:,,,/GustavNoesisGUI;component/Assets/PanelSelect_c/c_ico_alchemy_d.png</ImageSource>
                                <ImageSource x:Key="HLImage">pack://application:,,,/GustavNoesisGUI;component/Assets/PanelSelect_c/c_ico_alchemy_h.png</ImageSource>
                            </Control.Resources>
                        </Control>
                    </ls:LSRadialListItem>
                    <ls:Radial.ItemContainerStyle>
                        <Style TargetType="ls:LSRadialListItem">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ls:LSRadialListItem">
                                        <ControlTemplate.Resources>
                                            <ImageSource x:Key="RadialSlotBg">pack://application:,,,/GustavNoesisGUI;component/Assets/PanelSelect_c/c_shortCutMenu_slotAlt_d.png</ImageSource>
                                            <ImageSource x:Key="RadialSlotActiveBg">pack://application:,,,/GustavNoesisGUI;component/Assets/PanelSelect_c/c_shortCutMenu_slot_Active.png</ImageSource>
                                            <ImageSource x:Key="RadialSlotHighlightBg">pack://application:,,,/GustavNoesisGUI;component/Assets/PanelSelect_c/c_shortCutMenu_slot_Highlight.png</ImageSource>
                                        </ControlTemplate.Resources>
                                        <Grid ls:LSRadialListItem.RotateType="Rotate" RenderTransformOrigin="0.5 1">

                                            <Grid x:Name="slotRoot" VerticalAlignment="Bottom" HorizontalAlignment="Center" Margin="0,0,0,410">
                                                <Image x:Name="SlotBg" Stretch="None" Source="{StaticResource RadialSlotBg}" RenderTransformOrigin="0.5 0.5" Opacity="1">
                                                    <Image.RenderTransform>
                                                        <RotateTransform Angle="-90"/>
                                                    </Image.RenderTransform>
                                                </Image>
                                                <Image x:Name="Selected" Stretch="None" Margin="{StaticResource SlotPosition1}" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/PanelSelect_c/c_shortCutMenu_slot_h.png" Opacity="0" RenderTransformOrigin="0.5 0.5">
                                                    <Image.RenderTransform>
                                                        <TransformGroup>
                                                            <RotateTransform Angle="-90"/>
                                                            <ScaleTransform ScaleX="1.04"/>
                                                            <ScaleTransform ScaleY="1.04"/>
                                                        </TransformGroup>
                                                    </Image.RenderTransform>
                                                </Image>
                                                <Image x:Name="Selected2" Stretch="None" Margin="{StaticResource SlotPosition1}" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/PanelSelect_c/c_shortCutMenu_slot_h.png" Opacity="0" RenderTransformOrigin="0.5 0.5">
                                                    <Image.RenderTransform>
                                                        <TransformGroup>
                                                            <RotateTransform Angle="-90"/>
                                                            <ScaleTransform ScaleX="1.04"/>
                                                            <ScaleTransform ScaleY="1.04"/>
                                                        </TransformGroup>
                                                    </Image.RenderTransform>
                                                    <Image.Effect>
                                                        <DropShadowEffect BlurRadius="24" ShadowDepth="10" Opacity="1" Color="{StaticResource tint00}"/>
                                                    </Image.Effect>
                                                </Image>
                                                <Grid x:Name="slotRootAnimation" Margin="0,0,0,0" RenderTransformOrigin="1 1" VerticalAlignment="Center" HorizontalAlignment="Center">
                                                    <Grid Margin="0, 140, 0, 0" ls:LSRadialListItem.RotateType="InvertRotate" RenderTransformOrigin="0.5 0.5">
                                                        <ContentPresenter x:Name="ContentRadial" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                    </Grid>
                                                </Grid>
                                            </Grid>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsSelected" Value="True"/>
                                                    <Condition Property="IsEnabled" Value="True"/>
                                                </MultiTrigger.Conditions>
                                                <Setter TargetName="Selected" Property="Opacity" Value="1"/>
                                                <Setter TargetName="Selected2" Property="Opacity" Value="1"/>
                                                <Setter TargetName="Selected" Property="Margin" Value="{StaticResource SlotPosition2}"/>
                                                <Setter TargetName="Selected2" Property="Margin" Value="{StaticResource SlotPosition2}"/>
                                                <Setter TargetName="slotRootAnimation" Property="Margin" Value="0,-20,0,0"/>
                                                <MultiTrigger.EnterActions>
                                                    <BeginStoryboard x:Name="FadeInSelectedAnim">
                                                        <Storyboard FillBehavior="Stop">
                                                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)"  Storyboard.TargetName="slotRootAnimation">
                                                                <EasingThicknessKeyFrame KeyTime="0" Value="0,0,0,0"/>
                                                                <EasingThicknessKeyFrame KeyTime="0:0:0.2" Value="0,-20,0,0"/>
                                                            </ThicknessAnimationUsingKeyFrames>
                                                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)"  Storyboard.TargetName="Selected">
                                                                <EasingThicknessKeyFrame KeyTime="0" Value="{StaticResource SlotPosition1}"/>
                                                                <EasingThicknessKeyFrame KeyTime="0:0:0.2" Value="{StaticResource SlotPosition2}"/>
                                                            </ThicknessAnimationUsingKeyFrames>
                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Selected">
                                                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
                                                            </DoubleAnimationUsingKeyFrames>
                                                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)"  Storyboard.TargetName="Selected2">
                                                                <EasingThicknessKeyFrame KeyTime="0" Value="{StaticResource SlotPosition1}"/>
                                                                <EasingThicknessKeyFrame KeyTime="0:0:0.2" Value="{StaticResource SlotPosition2}"/>
                                                            </ThicknessAnimationUsingKeyFrames>
                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Selected2">
                                                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
                                                            </DoubleAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </MultiTrigger.EnterActions>
                                                <MultiTrigger.ExitActions>
                                                    <BeginStoryboard x:Name="FadeOutSelectedAnim">
                                                        <Storyboard FillBehavior="Stop">
                                                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)"  Storyboard.TargetName="slotRootAnimation">
                                                                <EasingThicknessKeyFrame KeyTime="0" Value="0,-20,0,0"/>
                                                                <EasingThicknessKeyFrame KeyTime="0:0:0.2" Value="0,0,0,0"/>
                                                            </ThicknessAnimationUsingKeyFrames>
                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Selected">
                                                                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0"/>
                                                            </DoubleAnimationUsingKeyFrames>
                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Selected2">
                                                                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0"/>
                                                            </DoubleAnimationUsingKeyFrames>
                                                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)"  Storyboard.TargetName="Selected">
                                                                <EasingThicknessKeyFrame KeyTime="0" Value="{StaticResource SlotPosition2}"/>
                                                                <EasingThicknessKeyFrame KeyTime="0:0:0.2" Value="{StaticResource SlotPosition1}"/>
                                                            </ThicknessAnimationUsingKeyFrames>
                                                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)"  Storyboard.TargetName="Selected2">
                                                                <EasingThicknessKeyFrame KeyTime="0" Value="{StaticResource SlotPosition2}"/>
                                                                <EasingThicknessKeyFrame KeyTime="0:0:0.2" Value="{StaticResource SlotPosition1}"/>
                                                            </ThicknessAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </MultiTrigger.ExitActions>
                                            </MultiTrigger>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter TargetName="slotRoot" Property="Opacity" Value="0.5"/>
                                                <Setter TargetName="SlotBg" Property="Opacity" Value="0"/>
                                            </Trigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding Tag, RelativeSource={RelativeSource Mode=Self}}" Value="FTB"/>
                                                    <Condition Binding="{Binding DataContext.CurrentPlayer.SelectedCharacter.CharacterMode, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Value="InFTB"/>
                                                </MultiDataTrigger.Conditions>
                                                <Setter TargetName="SlotBg" Property="Source" Value="{StaticResource RadialSlotActiveBg}"/>
                                            </MultiDataTrigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ls:Radial.ItemContainerStyle>
                </ls:Radial>

                <Border Width="900" Height="900" x:Name="LevelupPrompt" Visibility="Collapsed" VerticalAlignment="Center" HorizontalAlignment="Center">
                    <Border.Background>
                        <RadialGradientBrush>
                            <GradientStop Offset="0" Color="#99C3962C"/>
                            <GradientStop Offset="0.3" Color="#99C3962C"/>
                            <GradientStop Offset="1" Color="#00FFCC00" />
                        </RadialGradientBrush>
                    </Border.Background>
                    <Grid VerticalAlignment="Center" HorizontalAlignment="Center">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <Image Source="pack://application:,,,/GustavNoesisGUI;component/Assets/PanelSelect_c/c_ico_levelUp_d.png" Grid.Row="0" Stretch="Uniform" Height="260" Margin="0 0 0 -20"/>

                    <TextBlock Text="{Binding Source='h19863f5ag397cg4718g91b4g0ab262e3c473', Converter={StaticResource TranslatedStringConverter}}" Grid.Row="1" 
                               FontSize="{StaticResource ScaledMassiveFontSize}" Foreground="{StaticResource LS_specialTxtColor}"/>


                    <ls:LSButton x:Name="LevelupButton" Grid.Row="2" Margin="0,-20,0,20"
                             BoundEvent="UIAccept" ContentTemplate="{StaticResource ControllerButtonHintImageOnly}" 
                             Content="{Binding CurrentPlayer.UIData.InputEvents, ConverterParameter=UIAccept, Converter={StaticResource FindInputEventConverter}}" 
                             Command="{Binding StartLevelUp}" 
                             CommandParameter="{Binding CurrentPlayer.SelectedCharacter}" />
                </Grid>
                </Border>

                <Control x:Name="Gold" Style="{StaticResource PartyGoldStyle}" />

                <StackPanel Orientation="Horizontal"  VerticalAlignment="Top" HorizontalAlignment="Right" Margin="0,174,96,0">
                    <TextBlock Text="{Binding Source='hea6d302egf0f6g48a5gb063gd2a165d1beb9', Converter={StaticResource TranslatedStringConverter}}" Foreground="{StaticResource LS_accent100TxtColor}" VerticalAlignment="Center" FontSize="{StaticResource MediumFontSize}" Margin="0,0,0,8"/>
                    <Image x:Name="IP1" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/PanelSelect_c/c_ico_inspirationShortCut_d.png" Width="96"  Margin="20,0,-20,0"/>
                    <Image x:Name="IP2" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/PanelSelect_c/c_ico_inspirationShortCut_d.png" Width="96" Margin="0,0,-20,0"/>
                    <Image x:Name="IP3" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/PanelSelect_c/c_ico_inspirationShortCut_d.png" Width="96" Margin="0,0,-20,0"/>
                    <Image x:Name="IP4" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/PanelSelect_c/c_ico_inspirationShortCut_d.png" Width="96" Margin="0,0,-20,0"/>
                </StackPanel>

                <StackPanel HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,940,0,0">
                    <TextBlock x:Name="ActionTitle" TextAlignment="Center" Margin="0,0,0,40" 
                               FontSize="{StaticResource ScaledBigFontSize}" 
                               Foreground="{StaticResource LS_extraspecialTxtColor}"
                               LineHeight="{StaticResource IntermediateFontSizeLineHeight}"
                               LineStackingStrategy="BlockLineHeight"/>

                    <TextBlock x:Name="Description" TextAlignment="Center" MaxWidth="600"
                               FontFamily="{StaticResource DefaultFont}" 
                               FontSize="{StaticResource ScaledMediumFontSize}"
                               Foreground="{StaticResource LS_baseTxtColor}"
                               TextWrapping="Wrap"/>
                </StackPanel>

                <StackPanel x:Name="SaveLoadErrors" VerticalAlignment="Bottom" HorizontalAlignment="Center" Margin="0,0,0,170">
                    <StackPanel.Tag>
                        <MultiBinding Converter="{StaticResource EqualConverter}">
                            <Binding Path="CurrentPlayer.UIData.CanLoadState"/>
                            <Binding Path="CurrentPlayer.UIData.CanSaveState"/>
                        </MultiBinding>
                    </StackPanel.Tag>
                    <TextBlock x:Name="LoadError" Foreground="{StaticResource LS_alertTxtColor}" Visibility="Collapsed"/>
                    <TextBlock x:Name="SaveError" Foreground="{StaticResource LS_alertTxtColor}" Visibility="Collapsed"/>
                </StackPanel>

                <StackPanel x:Name="ButtonHintContainer" Style="{StaticResource ButtonHint.Container.Center}">
                    <ls:LSInputBinding x:Name="CloseMenuBinding" Command="{Binding CustomEvent}" CommandParameter="CloseGameMenu" EatInput="False" BoundEvent="UIAccept"
                                       IsEnabled="{Binding SelectedItem.IsEnabled, ElementName=MenuRadial}"/>

                    <ls:LSInputBinding x:Name="CloseMenuBindingTrigger" Command="{Binding CustomEvent}" CommandParameter="CloseGameMenu" EatInput="False" BoundEvent="PanelSelect"
                                       IsEnabled="{Binding SelectedItem.IsEnabled, ElementName=MenuRadial}"/>

                    <ls:LSButton x:Name="MenuButton" VerticalAlignment="Center" HorizontalAlignment="Center" BoundEvent="UIAccept" Tag="{Binding Source='h04f38549g65b8g4b72g834eg87ee8863fdc5', Converter={StaticResource TranslatedStringConverter}}" 
                             ContentTemplate="{StaticResource ControllerButtonHint}" Content="{Binding CurrentPlayer.UIData.InputEvents, ConverterParameter=UIAccept, Converter={StaticResource FindInputEventConverter}}"
                             IsEnabled="{Binding SelectedItem.IsEnabled, ElementName=MenuRadial}"/>

                    <ls:LSButton x:Name="QuickSave" BoundEvent="UIMessageBoxY" Command="{Binding QuickSaveCommand}" 
                                 Tag="{Binding Source='h07880ddcgf66eg4c24g9fd5g6ad2c8cf67c3', Converter={StaticResource TranslatedStringConverter}}" 
                                 ContentTemplate="{StaticResource ControllerButtonHint}" 
                                 Content="{Binding CurrentPlayer.UIData.InputEvents, ConverterParameter=UIMessageBoxY, Converter={StaticResource FindInputEventConverter}}" Visibility="Collapsed">
                        <b:Interaction.Triggers>
                            <b:EventTrigger EventName="LSButtonPressed">
                                <b:InvokeCommandAction Command="{Binding DataContext.CustomEvent, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="CloseWidget"/>
                            </b:EventTrigger>
                        </b:Interaction.Triggers>
                    </ls:LSButton>

                    <ls:LSButton x:Name="QuickLoad" Style="{StaticResource ControllerHoldButtonStyle}" 
                                 DataContext="{Binding CurrentPlayer.UIData.InputEvents, Converter={StaticResource FindInputEventConverter}, ConverterParameter='UIMessageBoxX'}" 
                                 Visibility="Collapsed" Command="{Binding DataContext.QuickLoadCommand, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" 
                                 Tag="{Binding Source='hcbe72274gae5eg4893g95f5g958f37baa0c9', Converter={StaticResource TranslatedStringConverter}}" HorizontalAlignment="Center" VerticalAlignment="Center"/>

                    <ls:LSButton x:Name="PingButton" VerticalAlignment="Center" BoundEvent="JumpToFromTab" Tag="{Binding Source='hfe7d4028g2faag4431g974ag7cbf0c3ef163', Converter={StaticResource TranslatedStringConverter}}" 
                                 ContentTemplate="{StaticResource ControllerButtonHint}" Content="{Binding CurrentPlayer.UIData.InputEvents, ConverterParameter=JumpToFromTab, Converter={StaticResource FindInputEventConverter}}"
                                 Visibility="Collapsed" Command="{Binding RequestPingState}">
                        <b:Interaction.Triggers>
                            <b:EventTrigger EventName="LSButtonPressed">
                                <b:InvokeCommandAction Command="{Binding DataContext.CustomEvent, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="CloseWidget"/>
                            </b:EventTrigger>
                        </b:Interaction.Triggers>
                    </ls:LSButton>

                    <ls:LSButton x:Name="CancelButton" BoundEvent="UICancel" Command="{Binding CustomEvent}" CommandParameter="CloseGameMenu" Tag="{Binding Source='h411fb88eg5261g437aga291g2fb260e633c6', Converter={StaticResource TranslatedStringConverter}}" 
                                 ContentTemplate="{StaticResource ControllerButtonHint}" Content="{Binding CurrentPlayer.UIData.InputEvents, ConverterParameter=UICancel, Converter={StaticResource FindInputEventConverter}}"/>
                </StackPanel>
            </Grid>

            <ControlTemplate.Triggers>
                <Trigger SourceName="MenuRadial" Property="SelectedIndex" Value="-1">
					<Setter TargetName="CloseMenuBinding" Property="IsEnabled" Value="False"/>
                    <Setter TargetName="MenuButton" Property="IsEnabled" Value="False"/>
                </Trigger>
                <DataTrigger Binding="{Binding IsMainPlayer}" Value="True">
                    <Setter TargetName="QuickSave" Property="Visibility" Value="Visible"/>
                    <Setter TargetName="QuickLoad" Property="Visibility" Value="Visible"/>
                </DataTrigger>

                <!-- Inspiration points Indicators -->
                <DataTrigger Binding="{Binding CurrentPlayer.SelectedCharacter.Stats.InspirationPointsResource.Value, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True">
                    <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/PanelSelect_c/c_ico_inspirationShortCut_h.png" TargetName="IP1"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding CurrentPlayer.SelectedCharacter.Stats.InspirationPointsResource.Value, Converter={StaticResource GreaterThanConverter}, ConverterParameter=1}" Value="True">
                    <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/PanelSelect_c/c_ico_inspirationShortCut_h.png" TargetName="IP2"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding CurrentPlayer.SelectedCharacter.Stats.InspirationPointsResource.Value, Converter={StaticResource GreaterThanConverter}, ConverterParameter=2}" Value="True">
                    <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/PanelSelect_c/c_ico_inspirationShortCut_h.png" TargetName="IP3"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding CurrentPlayer.SelectedCharacter.Stats.InspirationPointsResource.Value, Converter={StaticResource GreaterThanConverter}, ConverterParameter=3}" Value="True">
                    <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/PanelSelect_c/c_ico_inspirationShortCut_h.png" TargetName="IP4"/>
                </DataTrigger>
                <!-- Short Rest Indicators -->
                <DataTrigger Binding="{Binding CurrentPlayer.SelectedCharacter.Stats.ShortRestPointsResource.Value}" Value="0">
                    <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/PanelSelect_c/c_ico_shortRest_spent.png" TargetName="SR1"/>
                    <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/PanelSelect_c/c_ico_shortRest_spent.png" TargetName="SR2"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding CurrentPlayer.SelectedCharacter.Stats.ShortRestPointsResource.Value}" Value="1">
                    <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/PanelSelect_c/c_ico_shortRest_spent.png" TargetName="SR2"/>
                </DataTrigger>

                <!-- No Action Selected-->
                <DataTrigger Binding="{Binding SelectedItem, ElementName=MenuRadial}" Value="{x:Null}">
					<Setter TargetName="CloseMenuBinding" Property="IsEnabled" Value="False"/>
                    <Setter TargetName="MenuButton" Property="IsEnabled" Value="False"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding SelectedItem.Tag, ElementName=MenuRadial}" Value="{x:Null}">
					<Setter TargetName="CloseMenuBinding" Property="IsEnabled" Value="False"/>
                    <Setter TargetName="MenuButton" Property="IsEnabled" Value="False"/>
                </DataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding SelectedItem, ElementName=MenuRadial}" Value="{x:Null}"/>
                        <Condition Binding="{Binding CurrentPlayer.SelectedCharacter.Stats.Level.LevelUpAvailable}" Value="True"/>
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter TargetName="LevelupPrompt" Property="Visibility" Value="Visible"/>
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>

                <!-- Radial Menu Actions-->
                <DataTrigger Binding="{Binding SelectedItem.Tag, ElementName=MenuRadial}" Value="CharacterSheet">
                    <Setter TargetName="MenuButton" Property="Command" Value="{Binding CustomEvent}"/>
                    <Setter TargetName="MenuButton" Property="CommandParameter" Value="OpenInventoryPanel"/>
                    <Setter TargetName="ActionTitle" Property="Text" Value="{Binding Source='hf76cbcb4g83ddg49d3gb01cgd00359f84713', Converter={StaticResource TranslatedStringConverter}}"/>
                    <Setter TargetName="Description" Property="Text" Value="{Binding Source='h032341b5gfee9g4b5agb8dfg78b0214e7f1f', Converter={StaticResource TranslatedStringConverter}}"/>
                </DataTrigger>

                <DataTrigger Binding="{Binding SelectedItem.Tag, ElementName=MenuRadial}" Value="SpellBook">
                    <Setter TargetName="MenuButton" Property="Command" Value="{Binding CustomEvent}"/>
                    <Setter TargetName="MenuButton" Property="CommandParameter" Value="OpenSpellBook"/>
                    <Setter TargetName="ActionTitle" Property="Text" Value="{Binding Source='h15329947gc691g4323gac0fge3fbcecb92d9', Converter={StaticResource TranslatedStringConverter}}"/>
                    <Setter TargetName="Description" Property="Text" Value="{Binding Source='h74d60cc4g092ag476agb857g28c6d7f6e455', Converter={StaticResource TranslatedStringConverter}}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding SelectedItem.Tag, ElementName=MenuRadial}" Value="TadPoles">
                    <Setter TargetName="MenuButton" Property="Command" Value="{Binding CustomEvent}"/>
                    <Setter TargetName="MenuButton" Property="CommandParameter" Value="OpenTadpolePowers"/>
                    <Setter TargetName="ActionTitle" Property="Text" Value="{Binding Source='h7a19c42bg552dg402bgb667g74e9631417d1', Converter={StaticResource TranslatedStringConverter}}"/>
                    <Setter TargetName="Description" Property="Text" Value="{Binding Source='h14ef4e08g6b15g43cbg9564g154cd87d235c', Converter={StaticResource TranslatedStringConverter}}"/>
                </DataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding SelectedItem.Tag, ElementName=MenuRadial}" Value="TadPoles"/>
                        <Condition Binding="{Binding CurrentPlayer.PartyUnlockedTadpolePowers}" Value="False"/>
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <!--<Setter TargetName="ActionTitle" Property="Text" Value="{Binding Source='h8dd25e5bg6e9dg4729gb7feg082cccd1ec4a', Converter={StaticResource TranslatedStringConverter}}"/>-->
                        <Setter TargetName="ActionTitle" Property="Visibility" Value="Collapsed"/>
                        <Setter TargetName="Description" Property="Visibility" Value="Collapsed"/>
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>
                <DataTrigger Binding="{Binding SelectedItem.Tag, ElementName=MenuRadial}" Value="Journal">
                    <Setter TargetName="MenuButton" Property="Command" Value="{Binding CustomEvent}"/>
                    <Setter TargetName="MenuButton" Property="CommandParameter" Value="OpenJournalQuests"/>
                    <Setter TargetName="MenuButton" Property="OverwriteClickSound" Value="UI_HUD_Controller_Journal_Open"/>
                    <Setter TargetName="ActionTitle" Property="Text" Value="{Binding Source='hb4bac393g5295g4e80g8dacge61e914d2313', Converter={StaticResource TranslatedStringConverter}}"/>
                    <Setter TargetName="Description" Property="Text" Value="{Binding Source='h268493caga498g49aeg8057gbfb4b2aaa193', Converter={StaticResource TranslatedStringConverter}}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding SelectedItem.Tag, ElementName=MenuRadial}" Value="Alchemy">
                    <Setter TargetName="MenuButton" Property="Command" Value="{Binding CustomEvent}"/>
                    <Setter TargetName="MenuButton" Property="CommandParameter" Value="OpenAlchemyPanel"/>
                    <Setter TargetName="ActionTitle" Property="Text" Value="{Binding Source='h61f2ae78g6fdag424dg8317g529da326f53c', Converter={StaticResource TranslatedStringConverter}}"/>
                    <Setter TargetName="Description" Property="Text" Value="{Binding Source='hc490422fg0034g42d3ga147g870388ec0ac0', Converter={StaticResource TranslatedStringConverter}}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding SelectedItem.Tag, ElementName=MenuRadial}" Value="LongRest">
                    <Setter TargetName="MenuButton" Property="Command" Value="{Binding CampTravel}"/>
                    <Setter TargetName="ActionTitle" Property="Text" Value="{Binding Source='h54a9edbag9cf2g4f2egb188g1431d56c3159', Converter={StaticResource TranslatedStringConverter}}"/>
                    <Setter TargetName="Description" Property="Text" Value="{Binding Source='h5bab6273g9c24g4194ga177gad32c39eaaa1', Converter={StaticResource TranslatedStringConverter}}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding CurrentPlayer.EndTheDayState}" Value="Disabled">
                    <Setter TargetName="LongRestItem" Property="IsEnabled" Value="False"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding CurrentPlayer.EndTheDayState}" Value="Unavailable">
                    <Setter TargetName="LongRestItem" Property="IsEnabled" Value="False"/>
                </DataTrigger>

                <DataTrigger Binding="{Binding SelectedItem.Tag, ElementName=MenuRadial}" Value="ShortRest">
                    <Setter TargetName="MenuButton" Property="Command" Value="{Binding ShortRest}"/>
                    <Setter TargetName="MenuButton" Property="SoundID" Value="UI_HUD_ShortRest"/>
                    <Setter TargetName="CloseMenuBinding" Property="IsEnabled" Value="{Binding CurrentPlayer.SelectedCharacter.Stats.ShortRestPointsResource.Value, Converter={StaticResource GreaterThanConverter}, ConverterParameter='0'}"/>
                    <Setter TargetName="ActionTitle" Property="Text" Value="{Binding Source='h1b6123cege971g4469gbb07g7b5fbf925563', Converter={StaticResource TranslatedStringConverter}}"/>
                    <Setter TargetName="Description" Property="Text" Value="{Binding Source='haf7ce424ge661g4bbdgbda3g60a1e3fddccb', Converter={StaticResource TranslatedStringConverter}}"/>
                </DataTrigger>
                
                <DataTrigger Binding="{Binding SelectedItem.Tag, ElementName=MenuRadial}" Value="Camp">
                    <Setter TargetName="MenuButton" Property="Command" Value="{Binding GoToCamp}"/>
                    <Setter TargetName="MenuButton" Property="SoundID" Value="UI_HUD_Party_Campsite_Confirm"/>
                    <Setter TargetName="ActionTitle" Property="Text" Value="{Binding Source='hc7281314gd545g490fgbfc8g1be95db0df3b', Converter={StaticResource TranslatedStringConverter}}"/>
                    <Setter TargetName="Description" Property="Text" Value="{Binding Source='h4d8321bdg8abfg4ab4g8077g9e691472f7ad', Converter={StaticResource TranslatedStringConverter}}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding CurrentPlayer.TravelError}" Value="None">
                    <Setter TargetName="CampItem" Property="IsEnabled" Value="True"/>
                    <Setter TargetName="WaypointsItem" Property="IsEnabled" Value="True"/>
                </DataTrigger>


                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding SelectedItem.Tag, ElementName=MenuRadial}" Value="Camp"/>
                        <Condition Binding="{Binding CurrentPlayer.SelectedCharacter.IsInCamp}" Value="True"/>
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter TargetName="ActionTitle" Property="Text" Value="{Binding Source='h2f70e122gdef6g4846g94e6ga12347e4ec83', Converter={StaticResource TranslatedStringConverter}}"/>
                        <Setter TargetName="Description" Property="Text" Value="{Binding Source='h865f0babg0e8ag40d8g8105gf3aed981a394', Converter={StaticResource TranslatedStringConverter}}"/>
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>

                <DataTrigger Binding="{Binding SelectedItem.Tag, ElementName=MenuRadial}" Value="Waypoints">
                    <Setter TargetName="MenuButton" Property="Command" Value="{Binding CustomEvent}"/>
                    <Setter TargetName="MenuButton" Property="CommandParameter" Value="ToggleWaypoints"/>
                    <Setter TargetName="ActionTitle" Property="Text" Value="{Binding Source='h4dd789bfg24f5g40f6gadccg5a6e39287311', Converter={StaticResource TranslatedStringConverter}}"/>
                    <Setter TargetName="Description" Property="Text" Value="{Binding Source='h0f1425e9g68fdg4cbag8103g59bc99c00442', Converter={StaticResource TranslatedStringConverter}}"/>
                </DataTrigger>


                <DataTrigger Binding="{Binding Data.LongRest.IsActive}" Value="True">
                    <Setter TargetName="LongRestItem" Property="IsEnabled" Value="False"/>
                    <Setter TargetName="CampItem" Property="IsEnabled" Value="False"/>
                    <Setter TargetName="ShortRestItem" Property="IsEnabled" Value="False"/>
                </DataTrigger>

                <DataTrigger Binding="{Binding Data.Players.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter=1}" Value="True">
                    <Setter TargetName="PingButton" Property="Visibility" Value="Visible"/>
                </DataTrigger>

                <DataTrigger Binding="{Binding SelectedItem.Tag, ElementName=MenuRadial}" Value="Map">
                    <Setter TargetName="MenuButton" Property="Command" Value="{Binding CustomEvent}"/>
                    <Setter TargetName="MenuButton" Property="CommandParameter" Value="ShowJournalMap"/>
                    <Setter TargetName="ActionTitle" Property="Text" Value="{Binding Source='h7c93a57bga2c1g42f2gaf44g494414ff2f56', Converter={StaticResource TranslatedStringConverter}}"/>
                    <Setter TargetName="Description" Property="Text" Value="{Binding Source='h63d91585g542dg452bga15bg81bee7abbe0a', Converter={StaticResource TranslatedStringConverter}}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding SelectedItem.Tag, ElementName=MenuRadial}" Value="FTB">
                    <Setter TargetName="MenuButton" Property="Command" Value="{Binding ToggleTurnBasedMode}"/>
                    <Setter TargetName="ActionTitle" Property="Text" Value="{Binding Source='h4be39006g604dg47cbg98c4g6cb5238b645d', Converter={StaticResource TranslatedStringConverter}}"/>
                    <Setter TargetName="Description" Property="Text" Value="{Binding Source='hcd48d62ag5a64g4737ga242g3c00ff6db198', Converter={StaticResource TranslatedStringConverter}}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding SelectedItem.Tag, ElementName=MenuRadial}" Value="CombatLog">
                    <Setter TargetName="MenuButton" Property="Command" Value="{Binding CustomEvent}"/>
                    <Setter TargetName="MenuButton" Property="CommandParameter" Value="OpenJournalCombatLog"/>
                    <Setter TargetName="ActionTitle" Property="Text" Value="{Binding Source='hf8bb283fg341bg41d6g8b83gd5e3f7a0a2a1', Converter={StaticResource TranslatedStringConverter}}"/>
                    <Setter TargetName="Description" Property="Text" Value="{Binding Source='h00c46127g7793g4484gbce2g7d3643730436', Converter={StaticResource TranslatedStringConverter}}"/>
                </DataTrigger>

                <!-- Disable actions and prevent menu closing in combat -->
                <DataTrigger Binding="{Binding CurrentPlayer.SelectedCharacter.CharacterMode}" Value="InCombat">
                    <Setter TargetName="FTBItem" Property="IsEnabled" Value="False"/>
                    <Setter TargetName="CampItem" Property="IsEnabled" Value="False"/>
                    <Setter TargetName="LongRestItem" Property="IsEnabled" Value="False"/>
                    <Setter TargetName="ShortRestItem" Property="IsEnabled" Value="False"/>
                </DataTrigger>

				<MultiDataTrigger>
					<MultiDataTrigger.Conditions>
						<Condition Binding="{Binding CurrentPlayer.SelectedCharacter.CharacterMode}" Value="InCombat"/>
						<Condition Binding="{Binding SelectedItem.Tag, ElementName=MenuRadial}" Value="FTB"/>
					</MultiDataTrigger.Conditions>
					<Setter TargetName="CloseMenuBinding" Property="IsEnabled" Value="False" />
				</MultiDataTrigger>
				<MultiDataTrigger>
					<MultiDataTrigger.Conditions>
						<Condition Binding="{Binding CurrentPlayer.SelectedCharacter.CharacterMode}" Value="InCombat"/>
						<Condition Binding="{Binding SelectedItem.Tag, ElementName=MenuRadial}" Value="Camp"/>
					</MultiDataTrigger.Conditions>
					<Setter TargetName="CloseMenuBinding" Property="IsEnabled" Value="False" />
				</MultiDataTrigger>
				<MultiDataTrigger>
					<MultiDataTrigger.Conditions>
						<Condition Binding="{Binding CurrentPlayer.SelectedCharacter.CharacterMode}" Value="InCombat"/>
						<Condition Binding="{Binding SelectedItem.Tag, ElementName=MenuRadial}" Value="ShortRest"/>
					</MultiDataTrigger.Conditions>
					<Setter TargetName="CloseMenuBinding" Property="IsEnabled" Value="False" />
				</MultiDataTrigger>
				<MultiDataTrigger>
					<MultiDataTrigger.Conditions>
						<Condition Binding="{Binding CurrentPlayer.SelectedCharacter.CharacterMode}" Value="InCombat"/>
						<Condition Binding="{Binding SelectedItem.Tag, ElementName=MenuRadial}" Value="LongRest"/>
					</MultiDataTrigger.Conditions>
					<Setter TargetName="CloseMenuBinding" Property="IsEnabled" Value="False" />
				</MultiDataTrigger>

                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding CurrentPlayer.SelectedCharacter.CharacterMode}" Value="InCombat"/>
                        <Condition Binding="{Binding SelectedItem, ElementName=MenuRadial}" Value="{x:Null}"/>
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="LevelupPrompt" Property="Visibility" Value="Collapsed" />
                </MultiDataTrigger>

                <!-- Splitscreen -->
                <DataTrigger Binding="{Binding Layout}" Value="Right">
                    <Setter TargetName="ButtonHintContainer" Property="Style" Value="{StaticResource ButtonHint.Container.Left}"/>
                </DataTrigger>

                <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                    <BeginStoryboard x:Name="AppearStoryboard" Storyboard="{StaticResource ScreenAppear}" />
                </EventTrigger>

                <!-- Save button states -->
                <DataTrigger Binding="{Binding CurrentPlayer.UIData.CanSaveState}" Value="BlockedNoServer">
                    <Setter TargetName="QuickSave" Property="IsEnabled" Value="False"/>
                    <Setter TargetName="SaveError" Property="Visibility" Value="{Binding IsMainPlayer, Converter={StaticResource BoolToVisibleConverter}}"/>
                    <Setter TargetName="SaveError" Property="Text">
                        <Setter.Value>
                            <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                <Binding Source="h9d4099fag65cag423ag98ccgd750286a9fa5"/>
                                <Binding Source="h5861653eg72aeg460dgae25g0db44d7bbca8" Converter="{StaticResource TranslatedStringConverter}"/>
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding CurrentPlayer.UIData.CanSaveState}" Value="BlockedCurrentlySaving">
                    <Setter TargetName="QuickSave" Property="IsEnabled" Value="False"/>
                    <Setter TargetName="SaveError" Property="Visibility" Value="{Binding IsMainPlayer, Converter={StaticResource BoolToVisibleConverter}}"/>
                    <Setter TargetName="SaveError" Property="Text">
                        <Setter.Value>
                            <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                <Binding Source="h9d4099fag65cag423ag98ccgd750286a9fa5"/>
                                <Binding Source="h185b5d6ag4f03g43c9g9b8eg059cffa98e29" Converter="{StaticResource TranslatedStringConverter}"/>
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding CurrentPlayer.UIData.CanSaveState}" Value="BlockedCurrentlyLoading">
                    <Setter TargetName="QuickSave" Property="IsEnabled" Value="False"/>
                    <Setter TargetName="SaveError" Property="Visibility" Value="{Binding IsMainPlayer, Converter={StaticResource BoolToVisibleConverter}}"/>
                    <Setter TargetName="SaveError" Property="Text">
                        <Setter.Value>
                            <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                <Binding Source="h9d4099fag65cag423ag98ccgd750286a9fa5"/>
                                <Binding Source="h13c1f09egc317g442egbde4g960247a366ce" Converter="{StaticResource TranslatedStringConverter}"/>
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding CurrentPlayer.UIData.CanSaveState}" Value="BlockedCurrentlySyncing">
                    <Setter TargetName="QuickSave" Property="IsEnabled" Value="False"/>
                    <Setter TargetName="SaveError" Property="Visibility" Value="{Binding IsMainPlayer, Converter={StaticResource BoolToVisibleConverter}}"/>
                    <Setter TargetName="SaveError" Property="Text">
                        <Setter.Value>
                            <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                <Binding Source="h9d4099fag65cag423ag98ccgd750286a9fa5"/>
                                <Binding Source="h4545105dge9a1g4ac7ga1bbgd5434f4ef1d1" Converter="{StaticResource TranslatedStringConverter}"/>
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding CurrentPlayer.UIData.CanSaveState}" Value="BlockedInCharacterCreation">
                    <Setter TargetName="QuickSave" Property="IsEnabled" Value="False"/>
                    <Setter TargetName="SaveError" Property="Visibility" Value="{Binding IsMainPlayer, Converter={StaticResource BoolToVisibleConverter}}"/>
                    <Setter TargetName="SaveError" Property="Text">
                        <Setter.Value>
                            <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                <Binding Source="h9d4099fag65cag423ag98ccgd750286a9fa5"/>
                                <Binding Source="h19513473g6d78g4df8g8bd0g9f129ddb289a" Converter="{StaticResource TranslatedStringConverter}"/>
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding CurrentPlayer.UIData.CanSaveState}" Value="BlockedInDialog">
                    <Setter TargetName="QuickSave" Property="IsEnabled" Value="False"/>
                    <Setter TargetName="SaveError" Property="Visibility" Value="{Binding IsMainPlayer, Converter={StaticResource BoolToVisibleConverter}}"/>
                    <Setter TargetName="SaveError" Property="Text">
                        <Setter.Value>
                            <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                <Binding Source="h9d4099fag65cag423ag98ccgd750286a9fa5"/>
                                <Binding Source="h304a028dg335cg4703g95a5g4f8d38d53ac3" Converter="{StaticResource TranslatedStringConverter}"/>
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding CurrentPlayer.UIData.CanSaveState}" Value="BlockedBySpell">
                    <Setter TargetName="QuickSave" Property="IsEnabled" Value="False"/>
                    <Setter TargetName="SaveError" Property="Visibility" Value="{Binding IsMainPlayer, Converter={StaticResource BoolToVisibleConverter}}"/>
                    <Setter TargetName="SaveError" Property="Text">
                        <Setter.Value>
                            <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                <Binding Source="h9d4099fag65cag423ag98ccgd750286a9fa5"/>
                                <Binding Source="h1b572aa5g4d6dg4532g9eb6g9ed3dc5534a6" Converter="{StaticResource TranslatedStringConverter}"/>
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding CurrentPlayer.UIData.CanSaveState}" Value="BlockedInterruptInProgress">
                    <Setter TargetName="QuickSave" Property="IsEnabled" Value="False"/>
                    <Setter TargetName="SaveError" Property="Visibility" Value="{Binding IsMainPlayer, Converter={StaticResource BoolToVisibleConverter}}"/>
                    <Setter TargetName="SaveError" Property="Text">
                        <Setter.Value>
                            <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                <Binding Source="h9d4099fag65cag423ag98ccgd750286a9fa5"/>
                                <Binding Source="h9813a0cdg6338g4bc7g8ee6g3393c06487d0" Converter="{StaticResource TranslatedStringConverter}"/>
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding CurrentPlayer.UIData.CanSaveState}" Value="BlockedOutOfSpace">
                    <Setter TargetName="QuickSave" Property="IsEnabled" Value="False"/>
                    <Setter TargetName="SaveError" Property="Visibility" Value="{Binding IsMainPlayer, Converter={StaticResource BoolToVisibleConverter}}"/>
                    <Setter TargetName="SaveError" Property="Text">
                        <Setter.Value>
                            <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                <Binding Source="h9d4099fag65cag423ag98ccgd750286a9fa5"/>
                                <Binding Source="hbf412f23g54d6g4ec7g8ee9g6287f396cc66" Converter="{StaticResource TranslatedStringConverter}"/>
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding CurrentPlayer.UIData.CanSaveState}" Value="BlockedUnknown">
                    <Setter TargetName="QuickSave" Property="IsEnabled" Value="False"/>
                </DataTrigger>

                <!-- Load button states -->
                <DataTrigger Binding="{Binding CurrentPlayer.UIData.CanLoadState}" Value="BlockedNoServer">
                    <Setter TargetName="QuickLoad" Property="IsEnabled" Value="False"/>
                    <Setter TargetName="LoadError" Property="Visibility" Value="{Binding IsMainPlayer, Converter={StaticResource BoolToVisibleConverter}}"/>
                    <Setter TargetName="LoadError" Property="Text">
                        <Setter.Value>
                            <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                <Binding Source="hccf15964gbc93g4d91g955ag3cbc3c7f0682"/>
                                <Binding Source="h5861653eg72aeg460dgae25g0db44d7bbca8" Converter="{StaticResource TranslatedStringConverter}"/>
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding CurrentPlayer.UIData.CanLoadState}" Value="BlockedCurrentlySaving">
                    <Setter TargetName="QuickLoad" Property="IsEnabled" Value="False"/>
                    <Setter TargetName="LoadError" Property="Visibility" Value="{Binding IsMainPlayer, Converter={StaticResource BoolToVisibleConverter}}"/>
                    <Setter TargetName="LoadError" Property="Text">
                        <Setter.Value>
                            <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                <Binding Source="hccf15964gbc93g4d91g955ag3cbc3c7f0682"/>
                                <Binding Source="h185b5d6ag4f03g43c9g9b8eg059cffa98e29" Converter="{StaticResource TranslatedStringConverter}"/>
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding CurrentPlayer.UIData.CanLoadState}" Value="BlockedCurrentlyLoading">
                    <Setter TargetName="QuickLoad" Property="IsEnabled" Value="False"/>
                    <Setter TargetName="LoadError" Property="Visibility" Value="{Binding IsMainPlayer, Converter={StaticResource BoolToVisibleConverter}}"/>
                    <Setter TargetName="LoadError" Property="Text">
                        <Setter.Value>
                            <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                <Binding Source="hccf15964gbc93g4d91g955ag3cbc3c7f0682"/>
                                <Binding Source="h13c1f09egc317g442egbde4g960247a366ce" Converter="{StaticResource TranslatedStringConverter}"/>
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding CurrentPlayer.UIData.CanLoadState}" Value="BlockedCurrentlySyncing">
                    <Setter TargetName="QuickLoad" Property="IsEnabled" Value="False"/>
                    <Setter TargetName="LoadError" Property="Visibility" Value="{Binding IsMainPlayer, Converter={StaticResource BoolToVisibleConverter}}"/>
                    <Setter TargetName="LoadError" Property="Text">
                        <Setter.Value>
                            <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                <Binding Source="hccf15964gbc93g4d91g955ag3cbc3c7f0682"/>
                                <Binding Source="h4545105dge9a1g4ac7ga1bbgd5434f4ef1d1" Converter="{StaticResource TranslatedStringConverter}"/>
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding CurrentPlayer.UIData.CanLoadState}" Value="BlockedInDialog">
                    <Setter TargetName="QuickLoad" Property="IsEnabled" Value="False"/>
                    <Setter TargetName="LoadError" Property="Visibility" Value="{Binding IsMainPlayer, Converter={StaticResource BoolToVisibleConverter}}"/>
                    <Setter TargetName="LoadError" Property="Text">
                        <Setter.Value>
                            <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                <Binding Source="hccf15964gbc93g4d91g955ag3cbc3c7f0682"/>
                                <Binding Source="h304a028dg335cg4703g95a5g4f8d38d53ac3" Converter="{StaticResource TranslatedStringConverter}"/>
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding CurrentPlayer.UIData.CanLoadState}" Value="BlockedUnknown">
                    <Setter TargetName="QuickLoad" Property="IsEnabled" Value="False"/>
                </DataTrigger>

                <!-- Save and Load texts when they are the same -->
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Tag, ElementName=SaveLoadErrors}"  Value="True"/>
                        <Condition Binding="{Binding CurrentPlayer.UIData.CanLoadState}" Value="BlockedNoServer"/>
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="SaveError" Property="Visibility" Value="Collapsed"/>
                    <Setter TargetName="LoadError" Property="Text">
                        <Setter.Value>
                            <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                <Binding Source="hf0b9e10dgc790g4ff4g8304g4b33b979a487"/>
                                <Binding Source="h5861653eg72aeg460dgae25g0db44d7bbca8" Converter="{StaticResource TranslatedStringConverter}"/>
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Tag, ElementName=SaveLoadErrors}"  Value="True"/>
                        <Condition Binding="{Binding CurrentPlayer.UIData.CanLoadState}" Value="BlockedCurrentlySaving"/>
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="SaveError" Property="Visibility" Value="Collapsed"/>
                    <Setter TargetName="LoadError" Property="Text">
                        <Setter.Value>
                            <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                <Binding Source="hf0b9e10dgc790g4ff4g8304g4b33b979a487"/>
                                <Binding Source="h185b5d6ag4f03g43c9g9b8eg059cffa98e29" Converter="{StaticResource TranslatedStringConverter}"/>
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Tag, ElementName=SaveLoadErrors}"  Value="True"/>
                        <Condition Binding="{Binding CurrentPlayer.UIData.CanLoadState}" Value="BlockedCurrentlyLoading"/>
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="SaveError" Property="Visibility" Value="Collapsed"/>
                    <Setter TargetName="LoadError" Property="Text">
                        <Setter.Value>
                            <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                <Binding Source="hf0b9e10dgc790g4ff4g8304g4b33b979a487"/>
                                <Binding Source="h13c1f09egc317g442egbde4g960247a366ce" Converter="{StaticResource TranslatedStringConverter}"/>
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Tag, ElementName=SaveLoadErrors}"  Value="True"/>
                        <Condition Binding="{Binding CurrentPlayer.UIData.CanLoadState}" Value="BlockedCurrentlySyncing"/>
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="SaveError" Property="Visibility" Value="Collapsed"/>
                    <Setter TargetName="LoadError" Property="Text">
                        <Setter.Value>
                            <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                <Binding Source="hf0b9e10dgc790g4ff4g8304g4b33b979a487"/>
                                <Binding Source="h4545105dge9a1g4ac7ga1bbgd5434f4ef1d1" Converter="{StaticResource TranslatedStringConverter}"/>
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Tag, ElementName=SaveLoadErrors}"  Value="True"/>
                        <Condition Binding="{Binding CurrentPlayer.UIData.CanLoadState}" Value="BlockedInDialog"/>
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="SaveError" Property="Visibility" Value="Collapsed"/>
                    <Setter TargetName="LoadError" Property="Text">
                        <Setter.Value>
                            <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                <Binding Source="hf0b9e10dgc790g4ff4g8304g4b33b979a487"/>
                                <Binding Source="h304a028dg335cg4703g95a5g4f8d38d53ac3" Converter="{StaticResource TranslatedStringConverter}"/>
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                </MultiDataTrigger>

                <!--Hide if client in MP-->
                <DataTrigger Binding="{Binding IsHost}" Value="False">
                    <Setter TargetName="LoadError" Property="Visibility" Value="Collapsed"/>
                    <Setter TargetName="SaveError" Property="Visibility" Value="Collapsed"/>
                    <Setter TargetName="QuickSave" Property="Visibility" Value="Collapsed"/>
                    <Setter TargetName="QuickLoad" Property="Visibility" Value="Collapsed"/>
                </DataTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </ls:UIWidget.Template>
    <b:Interaction.Triggers>
        <b:EventTrigger EventName="Loaded">
            <ls:LSPlaySound Sound="UI_HUD_EscapeMenu_Open"/>
        </b:EventTrigger>
        <b:EventTrigger EventName="Unloaded">
            <ls:LSPlaySound Sound="UI_HUD_EscapeMenu_Close"/>
        </b:EventTrigger>
    </b:Interaction.Triggers>
</ls:UIWidget>