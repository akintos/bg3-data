<ls:UIWidget x:Name="Henchmen"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ls="clr-namespace:ls;assembly=SharedGUI"
    xmlns:System="clr-namespace:System;assembly=mscorlib"
    xmlns:noesis="clr-namespace:NoesisGUIExtensions;assembly=Noesis.GUI.Extensions"
    xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    mc:Ignorable="d"
    d:DesignHeight="2160" d:DesignWidth="3840"
    ls:UIWidget.ContextName="CharacterCreation"
    FocusDown="UIDown" FocusLeft="UILeft" FocusRight="UIRight" FocusUp="UIUp" ls:MoveFocus.FocusMovementMode="Closest" CanCacheFocusSurroundingElements="False">
    <ls:UIWidget.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Library/CCLib_c.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <ControlTemplate x:Key="HenchmenBottomButtonsTemplate">
                <StackPanel Orientation="Horizontal">
                    <ls:LSButton x:Name="showSummary" Visibility="{Binding ElementName=summary, Path=Visibility, Converter={StaticResource InvertVisibilityConverter}}"
                                 ContentTemplate="{StaticResource ControllerButtonHint}" Content="{Binding CurrentPlayer.UIData.InputEvents, ConverterParameter=UISort, Converter={StaticResource FindInputEventConverter}}"
                                 BoundEvent="UISort" Tag="{Binding Source=h890f4cddg2bdcg4bb2gb73eg43fe16b11b08,Converter={StaticResource TranslatedStringConverter}}" EatInput="False" TapTime="{StaticResource DefaultButtonTapTime}">
                        <b:Interaction.Triggers>
                            <b:EventTrigger EventName="Click">
                                <b:ChangePropertyAction TargetName="summary" PropertyName="Visibility" Value="Visible"/>
                            </b:EventTrigger>
                        </b:Interaction.Triggers>
                    </ls:LSButton>
                    <ls:LSButton x:Name="hideSummary" Visibility="{Binding ElementName=summary, Path=Visibility}" ContentTemplate="{StaticResource ControllerButtonHint}"
                                 Content="{Binding CurrentPlayer.UIData.InputEvents, ConverterParameter=UISort, Converter={StaticResource FindInputEventConverter}}"
                                 BoundEvent="UISort" Tag="{Binding Source=h70ec62ddg0cfcg4512ga0c6gbc591945b75b,Converter={StaticResource TranslatedStringConverter}}" EatInput="False" TapTime="{StaticResource DefaultButtonTapTime}">
                        <b:Interaction.Triggers>
                            <b:EventTrigger EventName="Click">
                                <b:ChangePropertyAction TargetName="summary" PropertyName="Visibility" Value="Collapsed"/>
                            </b:EventTrigger>
                        </b:Interaction.Triggers>
                    </ls:LSButton>

                    <ls:LSButton x:Name="backButton" Command="{Binding DataContext.CancelHenchmenCreating, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="{Binding ElementName=gameplayTabs}"
                                 ContentTemplate="{StaticResource ControllerButtonHint}" Content="{Binding CurrentPlayer.UIData.InputEvents, ConverterParameter=UICancel, Converter={StaticResource FindInputEventConverter}}"
                                 BoundEvent="UICancel" Tag="{Binding Source=h77fec760g866dg4e47g8e81g467c9c05e447,Converter={StaticResource TranslatedStringConverter}}" Margin="50,0,0,0"/>
                </StackPanel>
            </ControlTemplate>

            <ControlTemplate x:Key="confirmButtonTemplate" TargetType="Button">
                <ls:LSNineSliceImage x:Name="bg" ImageSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC_c/c_cc_primaryButtonBG.png" Slices="84,84,84,84" MinWidth="168" MinHeight="172">
                    <StackPanel x:Name="contents" Orientation="Horizontal" VerticalAlignment="Center">
                        <Control x:Name="img" DataContext="{Binding CurrentPlayer.UIData.InputEvents, Converter={StaticResource FindInputEventConverter}, ConverterParameter='UIDelete'}"
                                 Template="{StaticResource ControllerButton.ImageSwitcher}" Width="{DynamicResource ScaledControllerHintSize}" Height="{DynamicResource ScaledControllerHintSize}"
                                 Focusable="False" VerticalAlignment="Center" Margin="26,0,-10,0"/>

                        <TextBlock x:Name="text" ls:TextBlockFormatter.SourceText="{Binding Source='h06b74424gf3bdg4b6cgbe63g84b32198e162', Converter={StaticResource TranslatedStringConverter}}" FontSize="{StaticResource ScaledMediumFontSize}"
                                   VerticalAlignment="Center" Margin="0,0,60,0"/>
                    </StackPanel>
                </ls:LSNineSliceImage>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter TargetName="bg" Property="ImageSource" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/CC_c/c_cc_primaryButtonBG_disabled.png"/>
                        <Setter TargetName="contents" Property="Opacity" Value="{StaticResource DisabledOpacity}"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <Style x:Key="confirmButtonStyle" TargetType="ls:LSButton">
                <Setter Property="Template" Value="{StaticResource confirmButtonTemplate}"/>
                <Setter Property="BoundEvent" Value="UIDelete"/>
                <Setter Property="Command" Value="{Binding DataContext.FinishHenchmenCreating, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}"/>
            </Style>
        </ResourceDictionary>
    </ls:UIWidget.Resources>

    <b:Interaction.Triggers>
        <b:EventTrigger EventName="Loaded">
            <b:InvokeCommandAction Command="{Binding EnableTooltipOnUIElement}"/>
            <ls:SetMoveFocusAction TargetName="Henchmen" FocusElement="{Binding ElementName=HenchmenCarousel}"/>
        </b:EventTrigger>
        <b:EventTrigger EventName="GotKeyboardFocus">
            <b:InvokeCommandAction Command="{Binding ShowTooltipOnUIElement}" CommandParameter="{Binding Path=FocusedElement, ElementName=Henchmen}"/>
        </b:EventTrigger>
    </b:Interaction.Triggers>

    <b:Interaction.Behaviors>
        <ls:CollectionFilterBehavior x:Name="PresetOriginsCollection" ItemsSource="{Binding SelectableOrigins}" Predicate="{Binding IsNotCustomOriginPredicate}"/>
    </b:Interaction.Behaviors>

    <Grid ls:TooltipExtender.Owner="{Binding DummyCharacter}">
        
        <Control Template="{StaticResource setOverviewCamera}"/>
        
        <Grid x:Name="SelectionPage">
            <Grid.Resources>
                <System:Single x:Key="rightRotationRate">1.5</System:Single>
                <System:Single x:Key="leftRotationRate">-1.5</System:Single>
                <System:Single x:Key="stopRotationRate">0.0</System:Single>
            </Grid.Resources>
            <Rectangle x:Name="leftSideShading" HorizontalAlignment="Left" Width="{StaticResource leftSidePanelBackgroundWidth}" Fill="{StaticResource LeftSideShadingBrush}" OpacityMask="{StaticResource OpacityMaskShadingBrush}"/>

            <StackPanel x:Name="HenchmenControls" HorizontalAlignment="Left">
                <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source=hdd1cb010g6baag43e5g92a0ga68099423f90, Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource PanelHeaderText}"
                           Margin="0,100"/>
                
                <ListBox x:Name="HenchmenCarousel" Template="{StaticResource IconCarouselTemplate}" ItemsSource="{Binding FilteredItems, ElementName=PresetOriginsCollection}"
                         SelectedItem="{Binding SelectedOrigin}" Margin="0,20,0,0">
                    <ListBox.Resources>
                        <ControlTemplate x:Key="IconsTemplate">
                            <Grid>
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                    <Rectangle Fill="{Binding SelectedItem.Prev.Prev.Portrait, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}" Width="132" Height="196">
                                        <Rectangle.OpacityMask>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                                <GradientStop Offset="0" Color="Transparent" />
                                                <GradientStop Offset="1" Color="White" />
                                            </LinearGradientBrush>
                                        </Rectangle.OpacityMask>
                                    </Rectangle>

                                    <Rectangle Fill="{Binding SelectedItem.Prev.Portrait, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}" Width="132" Height="196" Margin="20,0,20,0"/>

                                    <Grid Margin="50,0,50,0">
                                        <Rectangle x:Name="selected" Fill="{Binding SelectedItem.Portrait, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}" Width="202" Height="300"/>
                                        <Image x:Name="lock" Visibility="Collapsed" Source="{StaticResource IconLock}" Stretch="None" HorizontalAlignment="RIght" VerticalAlignment="Bottom" Margin="0,0,20,20"/>
                                    </Grid>

                                    <Rectangle Fill="{Binding SelectedItem.Next.Portrait, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}" Width="132" Height="196" Margin="20,0,20,0"/>

                                    <Rectangle Fill="{Binding SelectedItem.Next.Next.Portrait, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}" Width="132" Height="196" Margin="20,0,20,0">
                                        <Rectangle.OpacityMask>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                                <GradientStop Offset="0" Color="White" />
                                                <GradientStop Offset="1" Color="Transparent" />
                                            </LinearGradientBrush>
                                        </Rectangle.OpacityMask>
                                    </Rectangle>
                                </StackPanel>
                                <TextBlock x:Name="disableReason" Visibility="Collapsed" ls:TextBlockFormatter.SourceText="{Binding Path=SelectedItem.DisableReason, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}"
                                           FontSize="{StaticResource ScaledDefaultFontSize}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <DataTrigger Binding="{Binding SelectedItem.IsSelectable, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}" Value="False">
                                    <Setter TargetName="lock" Property="Visibility" Value="Visible"/>
                                    <Setter TargetName="disableReason" Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </ListBox.Resources>
                </ListBox>

                <ScrollViewer Style="{StaticResource gameplayPanelScrollViewerStyle}">
                    <StackPanel Style="{StaticResource gameplayScrolledStackPanelStyle}">
                        <TextBlock ls:TextBlockFormatter.SourceText="{Binding DummyCharacter.Stats.OriginDescription}" Style="{StaticResource PanelDescriptionText}" Margin="0,30,0,0"/>
                    </StackPanel>
                </ScrollViewer>
            </StackPanel>

            <ls:LSButton Style="{StaticResource confirmButtonStyle}" IsEnabled="{Binding IsCharacterComplete}" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="50,0,0,100"/>

        </Grid>

        <Grid x:Name="summary" HorizontalAlignment="Right">
            <Rectangle x:Name="summaryBackground" HorizontalAlignment="Right" Width="{StaticResource summaryPanelBackgroundWidth}" RenderTransformOrigin="1,0.5" Fill="{StaticResource RightSideShadingBrush}" OpacityMask="{StaticResource OpacityMaskShadingBrush}">
                <Rectangle.RenderTransform>
                    <ScaleTransform/>
                </Rectangle.RenderTransform>
            </Rectangle>

            <Grid x:Name="summaryAnimPanel" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,30,34,0">
                <Grid.RenderTransform>
                    <TranslateTransform X="0"/>
                </Grid.RenderTransform>

                <Control x:Name="summaryPanel" IsEnabled="False" ls:MoveFocus.IsMoveFocusScope="True" Template="{StaticResource summaryPanelTemplate}"  HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,130,16,0"/>

                <ls:LSInputBinding x:Name="backFromFocusedSummary" IsEnabled="{Binding IsEnabled, ElementName=summaryPanel}" BoundEvent="UICancel">
                    <b:Interaction.Triggers>
                        <b:EventTrigger EventName="LSInputBindingReleased" >
                            <b:ChangePropertyAction TargetName="HenchmenCarousel" PropertyName="IsEnabled" Value="True"/>
                            <b:ChangePropertyAction TargetName="BottomButtons" PropertyName="IsEnabled" Value="True"/>
                            <b:ChangePropertyAction TargetName="summaryPanel" PropertyName="IsEnabled" Value="False"/>
                            <b:ChangePropertyAction TargetName="focusSummaryPanelButton" PropertyName="Visibility" Value="Visible"/>
                            <b:ChangePropertyAction TargetName="focusGameplayPanelButton" PropertyName="Visibility" Value="Hidden"/>
                            <ls:SetMoveFocusAction TargetName="Henchmen" FocusElement="{Binding ElementName=HenchmenCarousel}"/>
                            <b:ControlStoryboardAction ControlStoryboardOption="Play" Storyboard="{StaticResource unfocusSummaryPanelStoryboard}"/>
                        </b:EventTrigger>
                    </b:Interaction.Triggers>
                </ls:LSInputBinding>

                <ls:LSButton x:Name="focusGameplayPanelButton" Visibility="Hidden" Content="" Style="{StaticResource ControllerButtonWBG}" 
                             DataContext = "{Binding CurrentPlayer.UIData.InputEvents, Converter={StaticResource FindInputEventConverter}, ConverterParameter='UITabNext'}" HorizontalAlignment="Right" VerticalAlignment="Top">
                    <b:Interaction.Triggers>
                        <b:EventTrigger EventName="Click" >
                            <b:ChangePropertyAction TargetName="HenchmenCarousel" PropertyName="IsEnabled" Value="True"/>
                            <b:ChangePropertyAction TargetName="BottomButtons" PropertyName="IsEnabled" Value="True"/>
                            <b:ChangePropertyAction TargetName="summaryPanel" PropertyName="IsEnabled" Value="False"/>
                            <b:ChangePropertyAction TargetName="focusSummaryPanelButton" PropertyName="Visibility" Value="Visible"/>
                            <b:ChangePropertyAction TargetName="focusGameplayPanelButton" PropertyName="Visibility" Value="Hidden"/>
                            <ls:SetMoveFocusAction TargetName="Henchmen" FocusElement="{Binding ElementName=HenchmenCarousel}"/>
                            <b:ControlStoryboardAction ControlStoryboardOption="Play" Storyboard="{StaticResource unfocusSummaryPanelStoryboard}"/>
                        </b:EventTrigger>
                    </b:Interaction.Triggers>
                </ls:LSButton>

                <ls:LSButton x:Name="focusSummaryPanelButton" Content="" Style="{StaticResource ControllerButtonWBG}" 
                             DataContext = "{Binding CurrentPlayer.UIData.InputEvents, Converter={StaticResource FindInputEventConverter}, ConverterParameter='UITabNext'}" HorizontalAlignment="Right" VerticalAlignment="Top">
                    <b:Interaction.Triggers>
                        <b:EventTrigger EventName="Click" >
                            <b:ChangePropertyAction TargetName="HenchmenCarousel" PropertyName="IsEnabled" Value="False"/>
                            <b:ChangePropertyAction TargetName="BottomButtons" PropertyName="IsEnabled" Value="False"/>
                            <b:ChangePropertyAction TargetName="summaryPanel" PropertyName="IsEnabled" Value="True"/>
                            <b:ChangePropertyAction TargetName="focusSummaryPanelButton" PropertyName="Visibility" Value="Hidden"/>
                            <b:ChangePropertyAction TargetName="focusGameplayPanelButton" PropertyName="Visibility" Value="Visible"/>
                            <ls:SetMoveFocusAction TargetName="Henchmen" FocusElement="{Binding ElementName=summaryPanel}"/>
                            <b:ControlStoryboardAction ControlStoryboardOption="Play" Storyboard="{StaticResource focusSummaryPanelStoryboard}"/>
                        </b:EventTrigger>
                    </b:Interaction.Triggers>
                </ls:LSButton>
            </Grid>
        </Grid>

        <Control x:Name="BottomButtons" Template="{StaticResource HenchmenBottomButtonsTemplate}" VerticalAlignment="Bottom" HorizontalAlignment="Right" Margin="0,0,30,30"/>
    </Grid>
</ls:UIWidget>