<ls:UIWidget x:Name="LoadGame_c"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:ls="clr-namespace:ls;assembly=SharedGUI"
             xmlns:noesis="clr-namespace:NoesisGUIExtensions;assembly=Noesis.GUI.Extensions"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             mc:Ignorable="d"
             ContextName="Savegames" 
             d:DataContext="{d:DesignInstance {x:Type ls:DCSavegames}, IsDesignTimeCreatable=True}"
             d:DesignWidth="3840" d:DesignHeight="2160"
             FocusDown="UIDown" FocusUp="UIUp"
             ls:MoveFocus.FocusMovementMode="MainAxis"
             CanCacheFocusSurroundingElements="True"
             KeyboardNavigation.DirectionalNavigation="Continue">

    <ls:UIWidget.Template>
        <ControlTemplate>
            <ControlTemplate.Resources>
                <ResourceDictionary>
                    <ResourceDictionary.MergedDictionaries>
                        <ResourceDictionary Source="../Library/SaveLoad_c.xaml"/>
                    </ResourceDictionary.MergedDictionaries>

                    <ControlTemplate x:Key="NoSavePresenter">
                        <ControlTemplate.Resources>
                            <BitmapImage x:Key="BG3Logo" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/MainMenu/menu_logo_2.png"/>
                        </ControlTemplate.Resources>
                        <StackPanel Orientation="Vertical" Width="{StaticResource PresenterWidth}">
                            <Grid MinHeight="180">
                                <TextBlock Text="{Binding Source='h9f653fceg70d2g47ddg89b8g8289747c4896', Converter={StaticResource TranslatedStringConverter}}" HorizontalAlignment="Center" FontSize="{StaticResource ScaledBigFontSize}" Style="{StaticResource SaveLoad.Title}" VerticalAlignment="Center" TextWrapping="Wrap" TextAlignment="Center"/>
                            </Grid>

                            <Grid x:Name="ScreenshotContainer">
                                <Image Source="{StaticResource ScreenshotHolder}" Stretch="None"/>
                                <Image Source="{StaticResource BG3Logo}" Stretch="None" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            </Grid>

                        </StackPanel>
                    </ControlTemplate>
                </ResourceDictionary>
            </ControlTemplate.Resources>

            <Grid Background="{StaticResource LS_PopUpBackgroundColor}">
                <b:Interaction.Triggers>
                    <b:EventTrigger EventName="FocusChanged">
                        <ls:LSPlaySound Sound="UI_Shared_Hover" />
                        <b:InvokeCommandAction Command="{Binding SelectSavefileCommand}" CommandParameter="{Binding FocusedElement.DataContext, ElementName=LoadGame_c}"/>
                        <b:InvokeCommandAction Command="{Binding SelectPlaythroughCommand}" CommandParameter="{Binding FocusedElement.DataContext, ElementName=LoadGame_c}"/>
                    </b:EventTrigger>

                    <b:EventTrigger EventName="Loaded">
                        <ls:SetMoveFocusAction TargetName="LoadGame_c" FocusElement="{Binding ElementName=SavegamesList}"/>
                    </b:EventTrigger>
                </b:Interaction.Triggers>

                <Image Source="{StaticResource OptionsBackground}" Stretch="UniformToFill"/>

                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                    <StackPanel x:Name="SavegamesListHolder" VerticalAlignment="Top" HorizontalAlignment="Center" Width="1860" Margin="{StaticResource SavefileMargin}">
                        <b:Interaction.Behaviors>
                            <ls:CollectionSortBehavior x:Name="SortBehavior" ItemsSource="{Binding ExistingPlaythroughs}" Comparer="{Binding SaveComparer}" />
                        </b:Interaction.Behaviors>

                        <TextBlock Text="{Binding Source='h591bfe6bg8120g4708gb6f1gb814d019a85f', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource SaveLoad.Title}" Margin="0,0,0,80"/>

                        <ItemsControl x:Name="SavegamesList" 
                                      Style="{StaticResource SaveGamesListStyle}"
                                      ItemsSource="{Binding SortedItems, ElementName=SortBehavior}" 
                                      AlternationCount="{Binding SortedItems.Count, ElementName=SortBehavior}">
                            <ItemsControl.Template>
                                <ControlTemplate TargetType="ItemsControl">
                                    <ls:LSScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Visible" Template="{StaticResource StretchingScrollViewerTemplate}">
                                        <ItemsPresenter/>
                                    </ls:LSScrollViewer>
                                </ControlTemplate>
                            </ItemsControl.Template>
                        </ItemsControl>
                    </StackPanel>

                    <Control x:Name="PresenterControl" Template="{StaticResource SavePresenterTemplate}" VerticalAlignment="Top" Margin="{StaticResource PresenterMargin}"/>
                </StackPanel>

                <StackPanel x:Name="ButtonPrompts" Style="{StaticResource ButtonHint.Container.Center}">
                    <!-- Load button -->
                    <ls:LSButton x:Name="LoadBtn"
                                 VerticalAlignment="Center" 
                                 ContentTemplate="{StaticResource ControllerButtonHint}" 
                                 Content="{Binding CurrentPlayer.UIData.InputEvents, Converter={StaticResource FindInputEventConverter}, ConverterParameter='UIAccept'}"
                                 Tag="{Binding Source='h77aacd82g3505g4a61g9794gca31245f7794',Converter={StaticResource TranslatedStringConverter}}" 
                                 BoundEvent="UIAccept"
                                 Command="{Binding DoLoad}"
                                 SoundID="UI_Shared_Accept">
                        <b:Interaction.Triggers>
                            <b:EventTrigger EventName="LSButtonPressed">
                                <b:Interaction.Behaviors>
                                    <b:ConditionBehavior>
                                        <b:ConditionalExpression>
                                            <b:ComparisonCondition LeftOperand="{Binding SelectedPlaythrough}" Operator="NotEqual" RightOperand="{x:Null}"/>
                                        </b:ConditionalExpression>
                                    </b:ConditionBehavior>
                                </b:Interaction.Behaviors>
                                <b:ChangePropertyAction TargetObject="{Binding FocusedElement, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" PropertyName="IsChecked" Value="{Binding FocusedElement.IsChecked, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}, Converter={StaticResource InvertBoolConverter}}"/>
                            </b:EventTrigger>
                        </b:Interaction.Triggers>
                    </ls:LSButton>

                    <!-- Delete button -->
                    <ls:LSButton x:Name="DelBtn"
                                 VerticalAlignment="Center"
                                 ContentTemplate="{StaticResource ControllerButtonHint}"  
                                 Content="{Binding CurrentPlayer.UIData.InputEvents, Converter={StaticResource FindInputEventConverter}, ConverterParameter='UIMessageBoxX'}"
                                 BoundEvent="UIMessageBoxX"
                                 Tag="{Binding Source='h4b0153e2g855bg45fag9e49g9c4ae03a648c',Converter={StaticResource TranslatedStringConverter}}"
                                 Command="{Binding OpenMessageBox}"
                                 CommandParameter="{DynamicResource MessageBoxSaveDelete}"
                                 TapTime="{StaticResource DefaultButtonTapTime}"
                                 IsEnabled="{Binding SelectedSave, Converter={StaticResource NullToBoolFalseConverter}}"
                                 EatInput="False"/>

                    <ls:LSButton x:Name="DelCampaignBtn"
                                 VerticalAlignment="Center"
                                 Style="{StaticResource ControllerHoldButtonStyle}"
                                 DataContext="{Binding CurrentPlayer.UIData.InputEvents, Converter={StaticResource FindInputEventConverter}, ConverterParameter='UIMessageBoxX'}"
                                 Tag="{Binding Source='ha58e0d43g4b0ag433ag939eg1c140baa7732',Converter={StaticResource TranslatedStringConverter}}"
                                 Command="{Binding DataContext.OpenMessageBox, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}"
                                 CommandParameter="{DynamicResource MessageBoxSaveDeleteCampaign}"
                                 Visibility="Collapsed"
                                 HoldDelay="{StaticResource DefaultButtonTapTime}"
                                 IsEnabled="False"/>

                    <!-- Cancel button -->
                    <ls:LSButton x:Name="BackBtn"
                                 VerticalAlignment="Center" 
                                 ContentTemplate="{StaticResource ControllerButtonHint}" 
                                 Content="{Binding CurrentPlayer.UIData.InputEvents, Converter={StaticResource FindInputEventConverter}, ConverterParameter='UICancel'}" 
                                 Tag="{Binding Source='h9d3b37a6gf7e3g40a8g87d3g21b1d1732512',Converter={StaticResource TranslatedStringConverter}}"
                                 BoundEvent="UICancel"
                                 SoundID="UI_Shared_Cancel"
                                 Command="{Binding CustomEvent}" 
                                 CommandParameter="LoadGameClose"/>
                </StackPanel>
            </Grid>

            <ControlTemplate.Triggers>
                <DataTrigger Binding="{Binding SelectedSave, Converter={StaticResource NullToBoolTrueConverter}}" Value="True">
                    <Setter TargetName="PresenterControl" Property="Template" Value="{StaticResource NoSavePresenter}"/>
                </DataTrigger>
                
                <DataTrigger Binding="{Binding SelectedPlaythrough, Converter={StaticResource NullToBoolFalseConverter}}" Value="True">
                    <Setter TargetName="PresenterControl" Property="Template" Value="{StaticResource CampaignPresenterTemplate}"/>
                    <Setter TargetName="LoadBtn" Property="Command" Value="{x:Null}"/>
                    <Setter TargetName="LoadBtn" Property="Tag" Value="{Binding Source='hdb087266gb0a6g464dg8893g83fda5d01358',Converter={StaticResource TranslatedStringConverter}}"/>
                    <Setter TargetName="LoadBtn" Property="SoundID" Value=""/>
                    <Setter TargetName="LoadBtn" Property="IsEnabled" Value="True"/>
                    <Setter TargetName="DelBtn" Property="IsEnabled" Value="True"/>
                    <Setter TargetName="DelBtn" Property="Tag" Value="{Binding Source='hd338417fg3591g475bga45cg85abc82bfa55',Converter={StaticResource TranslatedStringConverter}}"/>
                    <Setter TargetName="DelBtn" Property="CommandParameter" Value="{DynamicResource MessageBoxSaveDeleteCampaignButLatest}"/>
                    <Setter TargetName="DelCampaignBtn" Property="IsEnabled" Value="True"/>
                    <Setter TargetName="DelCampaignBtn" Property="Visibility" Value="Visible"/>
                </DataTrigger>

                <!-- Button prompts triggers -->
                <DataTrigger Binding="{Binding SelectedSave.Validity}" Value="TooOld">
                    <Setter TargetName="LoadBtn" Property="IsEnabled" Value="False"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding SelectedSave.Validity}" Value="TooNew">
                    <Setter TargetName="LoadBtn" Property="IsEnabled" Value="False"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding SelectedSave.Validity}" Value="DataNotReady">
                    <Setter TargetName="LoadBtn" Property="IsEnabled" Value="False"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding SelectedSave.CrossStatus}" Value="ToDownload">
                    <Setter TargetName="LoadBtn" Property="IsEnabled" Value="False"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding SelectedSave.CrossStatus}" Value="Downloading">
                    <Setter TargetName="LoadBtn" Property="IsEnabled" Value="False"/>
                </DataTrigger>

                <MultiDataTrigger >
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding SelectedPlaythrough, Converter={StaticResource NullToBoolTrueConverter}}" Value="True"/>
                        <Condition Binding="{Binding SelectedSave, Converter={StaticResource NullToBoolTrueConverter}}" Value="True"/>
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="LoadBtn" Property="IsEnabled" Value="False"/>
                </MultiDataTrigger>
                
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </ls:UIWidget.Template>
</ls:UIWidget>
    