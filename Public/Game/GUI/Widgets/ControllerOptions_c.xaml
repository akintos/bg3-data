<ls:UIWidget x:Name="Options_c"
             ls:UIWidget.ContextName="ControllerOptions"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:ls="clr-namespace:ls;assembly=SharedGUI"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             mc:Ignorable="d"
             d:DesignHeight="2160" d:DesignWidth="3840"
             ls:UIWidget.Focusable="False"
             FocusDown="UIDown" FocusUp="UIUp"
             ls:MoveFocus.FocusMovementMode="MainAxisTunnel"
             CanCacheFocusSurroundingElements="False"
             d:DataContext="{d:DesignInstance ls:DCControllerOptions}">

    <ls:UIWidget.Resources>
        <ResourceDictionary Source="../Library/OptionTemplates_c.xaml"/>
    </ls:UIWidget.Resources>


    <ls:UIWidget.Template>
        <ControlTemplate>
            <Grid Background="{StaticResource LS_PanelBackground}">
                <Grid.Resources>
                    <Style x:Key="ListBoxStyle" TargetType="ls:LSListBox" BasedOn="{StaticResource {x:Type ls:LSListBox}}">
                        <Setter Property="Width" Value="1100"/>
                        <Setter Property="Height" Value="1300"/>
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="BorderBrush" Value="Transparent"/>
                        <Setter Property="IsEnabled" Value="{Binding}"/>
                        <Setter Property="ActionPrevEvent" Value="UIUp"/>
                        <Setter Property="ActionNextEvent" Value="UIDown"/>
                        <Setter Property="Template" Value="{StaticResource MinimalItemsControlTemplate}"/>
                        <Setter Property="ItemContainerStyle">
                            <Setter.Value>
                                <Style TargetType="ls:LSListBoxItem" >
                                    <Setter Property="HorizontalAlignment" Value="{Binding HorizontalAlignment, RelativeSource={RelativeSource AncestorType={x:Type ls:LSListBox}}}"/>
                                    <Setter Property="Margin" Value="0,8,0,16"/>
                                    <Setter Property="MinHeight" Value="120"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="ls:LSListBoxItem">
                                                <TextBlock x:Name="text" 
                                                   ls:TextBlockFormatter.SourceText="{Binding Functionality}" 
                                                   MaxWidth="1000"
                                                   FontSize="{StaticResource ScaledMediumFontSize}" 
                                                   Foreground="{StaticResource LS_specialTxtColor}"
                                                   VerticalAlignment="Center"
                                                   TextWrapping="Wrap"
                                                   HorizontalAlignment="{TemplateBinding HorizontalAlignment}"/>

                                                <ControlTemplate.Triggers>
                                                    <DataTrigger Binding="{Binding HorizontalAlignment, ElementName=text}" Value="Right">
                                                        <Setter TargetName="text" Property="TextAlignment" Value="Right"/>
                                                    </DataTrigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="BorderBrush" Value="Transparent"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="BorderBrush" Value="Transparent"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Resources>

                <Image Source="{StaticResource OptionsBackground}" Stretch="Fill"/>

                <Control DataContext="{Binding DataContext, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Template="{StaticResource OptionTopButtons}" IsEnabled="{Binding InputBindingVisible, Converter={StaticResource InvertBoolConverter}}"/>

                <Grid HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,40">

                    <Image x:Name="ControllerImage" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/Options_c/controller_xboxOne.png" VerticalAlignment="Center" HorizontalAlignment="Center" Stretch="None"/>

                    <Grid HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,140,0,0">
                        <ls:LSListBox x:Name="ControllerBindingList"
                                  IsEnabled="{Binding InputBindingVisible}"
                                  Background="Transparent" BorderBrush="Transparent" 
                                  HorizontalAlignment="Left" VerticalAlignment="Top"
                                  Template="{StaticResource MinimalItemsControlTemplate}"
                                  LocalFocusSelector="{Binding ElementName=Selector,Mode=OneWay}"
                                  ActionPrevEvent="UILeft" ActionNextEvent="UIRight">
                            <ls:LSListBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Horizontal"/>
                                </ItemsPanelTemplate>
                            </ls:LSListBox.ItemsPanel>

                            <ls:LSListBox x:Name="LeftBindings" Style="{StaticResource ListBoxStyle}" HorizontalAlignment="Right" SelectedIndex="0"
                                                          ActionPrevEvent="UIUp" ActionNextEvent="UIDown" Margin="0,20,0,0">
                                <ls:LSListBoxItem DataContext="{Binding ButtonBack}"  />
                                <ls:LSListBoxItem DataContext="{Binding LeftTrigger}" />
                                <ls:LSListBoxItem DataContext="{Binding LeftBumper}"  />
                                <ls:LSListBoxItem DataContext="{Binding LeftStick}"   />
                                <ls:LSListBoxItem DataContext="{Binding DPadUp}" Margin="0,36,0,16"     />
                                <ls:LSListBoxItem DataContext="{Binding DPadLeft}"    />
                                <ls:LSListBoxItem DataContext="{Binding DPadDown}"    />
                                <ls:LSListBoxItem DataContext="{Binding DPadRight}"   />
                            </ls:LSListBox>

                            <ls:LSListBox x:Name="LeftBindingsPS5" Style="{StaticResource ListBoxStyle}" HorizontalAlignment="Right" SelectedIndex="0" Visibility="Collapsed"
                                  ActionPrevEvent="UIUp" ActionNextEvent="UIDown" Margin="0,20,0,0">
                                <ls:LSListBoxItem DataContext="{Binding ButtonBack}"  />
                                <ls:LSListBoxItem DataContext="{Binding LeftTrigger}" />
                                <ls:LSListBoxItem DataContext="{Binding LeftBumper}"  />
                                <ls:LSListBoxItem DataContext="{Binding DPadUp}"      />
                                <ls:LSListBoxItem DataContext="{Binding DPadLeft}"    />
                                <ls:LSListBoxItem DataContext="{Binding DPadDown}"    />
                                <ls:LSListBoxItem DataContext="{Binding DPadRight}"   />
                                <ls:LSListBoxItem DataContext="{Binding LeftStick}"   />
                            </ls:LSListBox>

                            <!-- The empty space representing the controller image -->
                            <Grid Width="1580"/>

                            <ls:LSListBox Style="{StaticResource ListBoxStyle}" ActionPrevEvent="UIUp" ActionNextEvent="UIDown" Margin="0,20,0,0">
                                <ls:LSListBoxItem DataContext="{Binding ButtonStart}"  />
                                <ls:LSListBoxItem DataContext="{Binding RightTrigger}" />
                                <ls:LSListBoxItem DataContext="{Binding RightBumper}"  />
                                <ls:LSListBoxItem DataContext="{Binding ButtonY}"      />
                                <ls:LSListBoxItem DataContext="{Binding ButtonB}"      />
                                <ls:LSListBoxItem DataContext="{Binding ButtonA}"      />
                                <ls:LSListBoxItem DataContext="{Binding ButtonX}"      />
                                <ls:LSListBoxItem DataContext="{Binding RightStick}"   />
                            </ls:LSListBox>
                        </ls:LSListBox>

                        <Control x:Name="Selector" IsHitTestVisible="False" VerticalAlignment="Top" HorizontalAlignment="Left"
                                    Template="{StaticResource SelectorTemplate}" Visibility="{Binding InputBindingVisible, Converter={StaticResource BoolToVisibleConverter}}"/>
                    </Grid>
                </Grid>

                <ToggleButton x:Name="ToggleRebinding" IsChecked="{Binding InputBindingVisible, Mode=TwoWay}" Visibility="Hidden"/>

                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Bottom">
                    <ls:LSButton ContentTemplate="{StaticResource ControllerButtonHint}" 
                         Content = "{Binding CurrentPlayer.UIData.InputEvents, Converter={StaticResource FindInputEventConverter}, ConverterParameter='UICancel'}"
                         BoundEvent="UICancel"
                         Margin="20,0" 
                         Tag="{Binding Source='h6fefa28bg2149g4cacga071gd95b236b2d0b',Converter={StaticResource TranslatedStringConverter}}" 
                         Command="{Binding CustomEvent}"
                         SoundID="UI_Shared_Cancel"
                         CommandParameter="CloseWidget"/>

                    <!-- Removing edit bindings for sony 1st submission -->
                    <!--<StackPanel Orientation="Horizontal" Margin="16,0" Visibility="{Binding DataContext.InputBindingVisible, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}, Converter={StaticResource BoolToVisibleConverter}}">
                <TextBlock Text="{Binding Source='h05b1b507g66c2g4c1ega59bg709c57ea9203',Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource ButtonHintTextStyle}"/>
                <ls:LSButton Style="{DynamicResource ControllerButton}"
                         DataContext="{Binding CurrentPlayer.UIData.InputEvents, Converter={StaticResource FindInputEventConverter}, ConverterParameter='UIAccept'}"
                         Content=""
                         SoundID="UI_HUD_Options_Accept"
                         Command="{Binding DataContext.OpenControllerRebinding, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}"
                         CommandParameter="{Binding ElementName=ControllerBindingList, Path=LocalFocus.DataContext}"
                         IsEnabled="{Binding DataContext.InputBindingVisible, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}"/>
            </StackPanel>-->

                    <!--<StackPanel Orientation="Horizontal" Margin="16,0">
                <TextBlock>
                    <TextBlock.Style>
                        <Style TargetType="TextBlock" BasedOn="{StaticResource ButtonHintTextStyle}">
                            <Setter Property="Text" Value="{Binding Source='h74db77aegf418g469fga090g881712cd20fe', Converter={StaticResource TranslatedStringConverter}}"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding DataContext.InputBindingVisible, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Value="True">
                                    <Setter Property="Text" Value="{Binding Source='h54c17e1bg9bc5g4fbag87a9g0d5324ddcf97', Converter={StaticResource TranslatedStringConverter}}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
                <ls:LSButton DataContext = "{Binding CurrentPlayer.UIData.InputEvents, Converter={StaticResource FindInputEventConverter}, ConverterParameter='UIDelete'}" 
                             Command="{Binding DataContext.ToggleButtonCommand, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}"
                             CommandParameter="{Binding ElementName=ToggleRebinding}"
                             Style="{StaticResource ControllerButton}"
                             Content=""
                             SoundID="UI_HUD_Options_Close"/>
            </StackPanel>

            <StackPanel x:Name="DefaultButtonHolder" Orientation="Horizontal" VerticalAlignment="Center" Margin="16,0">
                <TextBlock Text="{Binding Source='h0dcd297egde63g4e44g820dg07c21a2346d3',Converter={StaticResource TranslatedStringConverter}}" 
                           Foreground="{DynamicResource LS_baseTxtColor}" VerticalAlignment="Center"/>

                <TextBlock Text="{Binding Source='hba9c74bbg1f89g4f68gbafbg1bcf7442cfae',Converter={StaticResource TranslatedStringConverter}, StringFormat='({0})'}" 
                           Foreground="{DynamicResource LS_InputTypeColor}" VerticalAlignment="Center" Margin="10,0,-10,0"/>

                <Grid HorizontalAlignment="Right" x:Name="HoldDefaultButtonHolder">
                    <Grid.Resources>
                        <Storyboard x:Key="HoldDefaultAnim">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(ls:LSPie.Value)" Storyboard.TargetName="HoldDefaultPie" BeginTime="0:0:0.3">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:1" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </Grid.Resources>

                    <ls:LSButton x:Name="HoldDefaultButton" EatInput="False" Style="{DynamicResource ControllerButton}" TapTime="{StaticResource DefaultButtonTapTime}" 
                                 DataContext="{Binding CurrentPlayer.UIData.InputEvents, Converter={StaticResource FindInputEventConverter}, ConverterParameter='UICreate'}"
                                 Content=""
                                 SoundID="UI_HUD_Options_Default">
                        <b:Interaction.Triggers>
                            <b:EventTrigger EventName="LSButtonPressed">
                                <b:ControlStoryboardAction Storyboard="{StaticResource HoldDefaultAnim}"/>
                            </b:EventTrigger>
                            <b:EventTrigger EventName="LSButtonReleased">
                                <b:ControlStoryboardAction Storyboard="{StaticResource HoldDefaultAnim}" ControlStoryboardOption="Stop"/>
                            </b:EventTrigger>
                            <b:StoryboardCompletedTrigger Storyboard="{StaticResource HoldDefaultAnim}">
                                <b:InvokeCommandAction Command="{Binding DataContext.ResetOptionsToDefault.ActionCommand, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}"/>
                                <b:ControlStoryboardAction Storyboard="{StaticResource HoldDefaultAnim}" ControlStoryboardOption="Stop"/>
                            </b:StoryboardCompletedTrigger>
                        </b:Interaction.Triggers>
                    </ls:LSButton>

                    <ls:LSPie x:Name="HoldDefaultPie" Value="0" SweepDirection="Clockwise" HorizontalAlignment="Right" Margin="0,0,30,0"
                              Visibility="{Binding ElementName=HoldDefaultButton, Path=IsPressed, Converter={StaticResource BoolToVisibleConverter}}">
                        <Image Source="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/c_tabSelector.png" Width="100" Height="100"/>
                    </ls:LSPie>
                </Grid>
            </StackPanel>

            <StackPanel Orientation="Horizontal" Margin="16,0">
                <TextBlock Text="{Binding Source='hce6efd68gaa45g4da2gaf87g58a6d03bb3f7',Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource ButtonHintTextStyle}"/>
                <ls:LSButton DataContext="{Binding CurrentPlayer.UIData.InputEvents, Converter={StaticResource FindInputEventConverter}, ConverterParameter='UICancel'}"
                             Content=""
                             SoundID="UI_HUD_Options_Close">
                    <ls:LSButton.Style>
                        <Style TargetType="ls:LSButton" BasedOn="{StaticResource ControllerButton}">
                            <Setter Property="Command" Value="{Binding DataContext.CancelCommand, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}"/>
                            <Setter Property="CommandParameter" Value=""/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding DataContext.InputBindingVisible, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Value="True">
                                    <Setter Property="Command" Value="{Binding DataContext.ToggleButtonCommand, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}"/>
                                    <Setter Property="CommandParameter" Value="{Binding ElementName=ToggleRebinding}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ls:LSButton.Style>
                </ls:LSButton>
            </StackPanel>-->
                </StackPanel>
            </Grid>

            <ControlTemplate.Triggers>
                <DataTrigger Binding="{Binding Data.ControllerType}" Value="PS5">
                    <Setter TargetName="ControllerImage" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Options_c/controller_ps5.png" />
                    <Setter TargetName="ControllerImage" Property="Margin" Value="0,80,0,0"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Data.ControllerType}" Value="Nintendo">
                    <Setter TargetName="ControllerImage" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Options_c/controller_switch.png" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Data.ControllerType}" Value="PS5">
                    <Setter TargetName="LeftBindings" Property="Visibility" Value="Collapsed" />
                    <Setter TargetName="LeftBindingsPS5" Property="Visibility" Value="Visible" />
                </DataTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </ls:UIWidget.Template>

</ls:UIWidget>