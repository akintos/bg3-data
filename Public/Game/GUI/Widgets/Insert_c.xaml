<ls:UIWidget x:Name="Insert_c"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:ls="clr-namespace:ls;assembly=SharedGUI"
             xmlns:noesis="clr-namespace:NoesisGUIExtensions;assembly=Noesis.GUI.Extensions"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
             
             xmlns:System="clr-namespace:System;assembly=mscorlib"
             xmlns:ed="http://schemas.microsoft.com/expression/2010/drawing"
             mc:Ignorable="d"
             d:DesignHeight="2160" d:DesignWidth="3840"
             ls:UIWidget.UseCustomDC="True"
             ls:UIWidget.ContextName="Insert">

    <ls:UIWidget.Template>
        <ControlTemplate>
            <ControlTemplate.Resources>
                <!--overriding these to keep the old sizes since this ui doesn't support cell scaling yet-->
                <System:Double x:Key="ScaledNewItemIconSize">94</System:Double>
                <System:Double x:Key="ScaledNewItemIconSizeHighlight">96</System:Double>
                <System:Double x:Key="ScaledNewSlotSize">104</System:Double>
            </ControlTemplate.Resources>
            <Grid Background="{StaticResource LS_PanelBackground}" >
                <b:Interaction.Triggers>
                    <!-- Sound feedbacks-->
                    <b:DataTrigger Binding="{Binding CurrentState}" Value="Success">
                        <ls:LSPlaySound Sound="UI_HUD_Insert_Success"/>
                    </b:DataTrigger>

                    <b:DataTrigger Binding="{Binding CurrentState}" Value="Fail">
                        <b:Interaction.Behaviors>
                            <b:ConditionBehavior>
                                <b:ConditionalExpression>
                                    <b:ComparisonCondition LeftOperand="{Binding FailReason}" Operator="Equal" RightOperand="Invalid"/>
                                </b:ConditionalExpression>
                            </b:ConditionBehavior>
                        </b:Interaction.Behaviors>
                        <ls:LSPlaySound Sound="UI_HUD_Insert_Failure"/>
                    </b:DataTrigger>

                    <b:DataTrigger Binding="{Binding CurrentState}" Value="Fail">
                        <b:Interaction.Behaviors>
                            <b:ConditionBehavior>
                                <b:ConditionalExpression>
                                    <b:ComparisonCondition LeftOperand="{Binding FailReason}" Operator="NotEqual" RightOperand="Invalid"/>
                                </b:ConditionalExpression>
                            </b:ConditionBehavior>
                        </b:Interaction.Behaviors>
                        <ls:LSPlaySound Sound="UI_HUD_Insert_Error"/>
                    </b:DataTrigger>

                    <b:EventTrigger EventName="Loaded">
                        <ls:LSPlaySound Sound="UI_HUD_Insert_Open"/>
                    </b:EventTrigger>

                    <b:EventTrigger EventName="Unloaded">
                        <ls:LSPlaySound Sound="UI_HUD_Insert_Close"/>
                    </b:EventTrigger>

                    <b:EventTrigger EventName="WidgetClosing" >
                        <b:Interaction.Behaviors>
                            <b:ConditionBehavior >
                                <b:ConditionalExpression>
                                    <b:ComparisonCondition LeftOperand="{Binding DataContext.InventoryPanelWasAlreadyExtracted,ElementName=Insert}" Operator="Equal" RightOperand="False"/>
                                </b:ConditionalExpression>
                            </b:ConditionBehavior>
                        </b:Interaction.Behaviors>
                        <b:InvokeCommandAction Command="{Binding DataContext.CustomEvent,ElementName=Insert}" CommandParameter="CloseInventoryPanel" />
                    </b:EventTrigger>
                </b:Interaction.Triggers>

                <Grid HorizontalAlignment="Center" Panel.ZIndex="1" Margin="0,120,0,0" ls:TooltipExtender.Owner="{Binding CurrentPlayer.SelectedCharacter}">
                    <Grid Panel.ZIndex="1" Background="Transparent" Margin="0,78,0,0">
                        <Image Source="pack://application:,,,/GustavNoesisGUI;component/Assets/Combine_c/c_combinePanel.png" Stretch="None" VerticalAlignment="Top" HorizontalAlignment="Center" Margin="0,100,0,0"/>

                        <!-- Insert slots part -->
                        <Grid Height="600" VerticalAlignment="Top">
                            <TextBlock Text="{Binding BaseItem.Name}" FontSize="{DynamicResource HugeFontSize}" Foreground="{DynamicResource LS_tint100}" HorizontalAlignment="Center" VerticalAlignment="Top"/>

                            <StackPanel VerticalAlignment="Top" Margin="0,80,0,0">
                                <Grid x:Name="BaseItemHolder" HorizontalAlignment="Center" VerticalAlignment="Top">
                                    <Image x:Name="TabBG" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/c_itemHolderAlt.png" Stretch="None" VerticalAlignment="Bottom"/>
                                    <ls:LSEntityObject VerticalAlignment="Bottom" HorizontalAlignment="Center" Margin="0,0,0,40" Width="{StaticResource ContItemIconSize}" Height="{StaticResource ContItemIconSize}" EntityRef="{Binding BaseItem.EntityHandle}" Context="Insert" Background="{Binding BaseItem.Icon}"/>
                                </Grid>

                                <ls:LSNineSliceImage x:Name="SlotBG" Width="460" Height="272" Slices="50" ImageSource="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/c_insert_frame.png" HorizontalAlignment="Center" VerticalAlignment="Top">

                                    <ls:LSListBox x:Name="SlotsList" ItemsSource="{Binding Ingredients}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="-70,0" AlternationCount="{Binding Ingredients.Count}" ActionNextEvent="UIRight" ActionPrevEvent="UILeft">
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <StackPanel Orientation="Horizontal"/>
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>

                                        <ls:LSListBox.ItemContainerStyle >
                                            <Style TargetType="ls:LSListBoxItem" BasedOn="{StaticResource {x:Type ListBoxItem}}">
                                                <Setter Property="ContentTemplate">
                                                    <Setter.Value>
                                                        <DataTemplate>
                                                            <Grid Background="Transparent">
                                                                <Image Source="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/c_itemHolderAlt.png" Stretch="None"/>
                                                                <ls:LSEntityObject EntityRef="{Binding EntityHandle}" Context="Inventory" Background="{Binding Icon}" IsHitTestVisible="False" Width="{StaticResource ContItemIconSize}" Height="{StaticResource ContItemIconSize}"
                                                               Tag="{Binding (ItemsControl.AlternationIndex), RelativeSource={RelativeSource AncestorType={x:Type ls:LSListBoxItem}}}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                                <Image x:Name="slotSelector" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/c_gridFrame_selected.png" Stretch="None" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="{Binding Tag, ElementName=slotSelector, Converter={StaticResource BoolToVisibleConverter}}">
                                                                    <Image.Tag>
                                                                        <MultiBinding Converter="{StaticResource EqualConverter}">
                                                                            <Binding Path="DataContext.SelectedIndex" RelativeSource="{RelativeSource AncestorType={x:Type ls:UIWidget}}"/>
                                                                            <Binding Path="(ItemsControl.AlternationIndex)" RelativeSource="{RelativeSource AncestorType={x:Type ls:LSListBoxItem}}"/>
                                                                        </MultiBinding>
                                                                    </Image.Tag>
                                                                </Image>
                                                            </Grid>

                                                            <DataTemplate.Triggers>
                                                                <DataTrigger Binding="{Binding DataContext.CurrentState, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Value="Success">
                                                                    <Setter Property="Opacity" Value="0.65"/>
                                                                    <Setter Property="IsEnabled" Value="False"/>
                                                                </DataTrigger>
                                                            </DataTemplate.Triggers>

                                                        </DataTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </ls:LSListBox.ItemContainerStyle>

                                        <b:Interaction.Triggers>
                                            <b:EventTrigger EventName="LocalFocusChanged">
                                                <b:InvokeCommandAction Command="{Binding DataContext.ShowTooltipOnUIElement, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="{Binding Path=LocalFocus, ElementName=Inventory}"/>
                                            </b:EventTrigger>
                                        </b:Interaction.Triggers>
                                    </ls:LSListBox>
                                </ls:LSNineSliceImage>

                                <TextBlock x:Name="FeedbackText" FontSize="{DynamicResource IntermediateFontSize}" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0,10,0,0" Foreground="{StaticResource LS_baseTxtColor}" ls:TextBlockFormatter.SourceText="{Binding Source='hb09a5276g3e7dg478dga32dg37c44b0b34ff', Converter={StaticResource TranslatedStringConverter}}"/>
                            </StackPanel>
                        </Grid>

                        <!--The arrow in the middle-->
                        <Image Source="pack://application:,,,/GustavNoesisGUI;component/Assets/ActiveRoll/addArrow.png" Stretch="None" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,606,6,0"/>

                        <!-- Player inventory part -->
                        <Grid Height="1084" Width="1800" VerticalAlignment="Top" Margin="0,640,0,0">
                            <StackPanel Orientation="Vertical" Margin="0,80,0,0">
                                <TextBlock x:Name="characterName" Foreground="{StaticResource LS_tint100}" FontSize="{StaticResource MediumFontSize}" HorizontalAlignment="Center">
                                    <TextBlock.Text>
                                        <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                            <Binding Source="h7a65a00ag12fcg4f9ega5d5g1f596d0af5b5"/>
                                            <Binding Path="CurrentPlayer.SelectedCharacter.Name"/>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                                <TextBlock Text="{Binding LocalFocus.DataContext.Object.Name, ElementName=Inventory}" Foreground="{StaticResource LS_specialTxtColor}" FontSize="{StaticResource LargeFontSize}" HorizontalAlignment="Center" Margin="0,6,0,28"/>

                                <Grid VerticalAlignment="Top" HorizontalAlignment="Center">
                                    <ls:LSListBox x:Name="Inventory" ItemsSource="{Binding CharacterInventory.Slots}"  Width="806" Height="608"
                                          SelectedIndex="0" LocalFocusSelector="{Binding ElementName=Selector,Mode=OneWay}">
                                        <b:Interaction.Triggers>
                                            <b:EventTrigger EventName="LocalFocusChanged">
                                                <b:InvokeCommandAction Command="{Binding DataContext.ShowTooltipOnUIElement, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="{Binding Path=LocalFocus, ElementName=Inventory}"/>
                                            </b:EventTrigger>
                                        </b:Interaction.Triggers>

                                        <ls:LSListBox.ItemContainerStyle>
                                            <Style TargetType="ls:LSListBoxItem" BasedOn="{StaticResource InvContainerListBoxItemStyle}">
                                                <Setter Property="ContextMenu">
                                                    <Setter.Value>
                                                        <ls:ContextMenu Style="{StaticResource BaseLSContextMenu}">
                                                            <ls:ContextMenuItem x:Name="AddRemove" Command="{Binding DataContext.ToggleItemCommand, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="{Binding Object}">
                                                                <ls:ContextMenuItem.Style>
                                                                    <Style TargetType="ls:ContextMenuItem" BasedOn="{StaticResource BaseLSContextMenuItem}">
                                                                        <Setter Property="Header" Value="{Binding Source='h7d5baf41g4783g4677g8f91g2144a7c3c6a0', Converter={StaticResource TranslatedStringConverter}}"/>
                                                                        <Style.Triggers>
                                                                            <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                                                                <Setter Property="Header" Value="{Binding Source='h66f5f06ag1874g4161g950dg86f429b26401', Converter={StaticResource TranslatedStringConverter}}"/>
                                                                            </DataTrigger>
                                                                            <DataTrigger Binding="{Binding DataContext.CurrentState, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Value="Working">
                                                                                <Setter Property="IsEnabled" Value="False"/>
                                                                            </DataTrigger>
                                                                            <DataTrigger Binding="{Binding DataContext.CurrentState, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Value="Success">
                                                                                <Setter Property="IsEnabled" Value="False"/>
                                                                            </DataTrigger>
                                                                            <MultiDataTrigger>
                                                                                <MultiDataTrigger.Conditions>
                                                                                    <Condition Binding="{Binding IsSelected}" Value="False"/>
                                                                                    <Condition Binding="{Binding DataContext.SelectedIndex, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Value="-1"/>
                                                                                </MultiDataTrigger.Conditions>
                                                                                <Setter Property="IsEnabled" Value="False"/>
                                                                            </MultiDataTrigger>
                                                                        </Style.Triggers>
                                                                    </Style>
                                                                </ls:ContextMenuItem.Style>
                                                            </ls:ContextMenuItem>
                                                            <ls:ContextMenuItem Header="{Binding Source='hc173e425geb02g4f20ga119g2cf1bd75643b', Converter={StaticResource TranslatedStringConverter}}" Command="{Binding DataContext.ExamineCommand, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="{Binding Object.EntityHandle}" />

                                                        </ls:ContextMenu>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </ls:LSListBox.ItemContainerStyle>

                                        <ls:LSListBox.ItemTemplate>
                                            <DataTemplate>
                                                <Grid Width="{DynamicResource ContItemIconSize}" Height="{DynamicResource ContItemIconSize}" DataContext="{Binding Object}" ToolTipService.Placement="Right">
                                                    <Grid.ToolTip>
                                                        <ls:LSTooltip Content="{Binding DataContext.Object, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                                    </Grid.ToolTip>
                                                    <ls:LSEntityObject EntityRef="{Binding EntityHandle}" Context="Inventory" Background="Transparent">
                                                        <ContentPresenter Content="{Binding}" ContentTemplate="{StaticResource Template.GameObject}" IsHitTestVisible="False"/>
                                                    </ls:LSEntityObject>
                                                    <Image Source="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/c_gridFrame_selected.png" Stretch="None" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="{Binding IsSelected, Converter={StaticResource BoolToVisibleConverter}}" />
                                                </Grid>
                                            </DataTemplate>
                                        </ls:LSListBox.ItemTemplate>

                                        <ls:LSListBox.Template>
                                            <ControlTemplate>
                                                <ScrollViewer VerticalScrollBarVisibility="Visible" Padding="36,0,0,0" HorizontalAlignment="Center" Template="{DynamicResource ScrollViewerTemplate}" HorizontalScrollBarVisibility="Disabled">
                                                    <ScrollViewer.Resources>
                                                        <Style TargetType="ScrollBar" BasedOn="{StaticResource GoldScrollBar}"/>
                                                    </ScrollViewer.Resources>
                                                    <ItemsPresenter  />
                                                </ScrollViewer>
                                            </ControlTemplate>
                                        </ls:LSListBox.Template>

                                        <ls:LSListBox.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <ls:LSGrid x:Name="ContainerGrid" Columns="6" Rows="5"  ContainerData="{Binding CurrentPlayer.UIData.CurrentContainer.Inventory}"
                                                   noesis:Element.PPAAMode="Disabled" SnapsToDevicePixels="True"  CellWidth="{DynamicResource ContInvSlotSize}"
                                                   CellHeight="{DynamicResource ContInvSlotSize}" Background="{StaticResource ContInventoryCell2x2Brush}"
                                                   VerticalSpacing="{DynamicResource ContInvSpacing}" DisableScrolling="False"  HorizontalSpacing="{DynamicResource ContInvSpacing}"
                                                   ActionUpEvent="UIUp" ActionDownEvent="UIDown" ActionRightEvent="UIRight" ActionLeftEvent="UILeft">
                                                </ls:LSGrid>
                                            </ItemsPanelTemplate>
                                        </ls:LSListBox.ItemsPanel>
                                    </ls:LSListBox>
                                    <Control x:Name="Selector" IsHitTestVisible="False" VerticalAlignment="Top" HorizontalAlignment="Left" Template="{StaticResource SelectorTemplate}" Panel.ZIndex="1000" />
                                </Grid>

                            </StackPanel>
                        </Grid>
                    </Grid>
                </Grid>

                <Grid x:Name="HoldActionContainer" VerticalAlignment="Bottom" Margin="0,0,0,160" HorizontalAlignment="Center" Panel.ZIndex="2" IsEnabled="False">
                    <StackPanel x:Name="HoldToInsert" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Top" Opacity="{StaticResource ControllerButton.DisabledOpacity}">
                        <TextBlock Text="{Binding Source='h15bd3b8fg31e9g4316gb17fg6bff80e8d050',Converter={StaticResource TranslatedStringConverter}}" Foreground="{StaticResource LS_ButtonHintFontColor}" VerticalAlignment="Center" />
                        <TextBlock Text="{Binding Source='hba9c74bbg1f89g4f68gbafbg1bcf7442cfae',Converter={StaticResource TranslatedStringConverter} , StringFormat='{} ({0})'}" Foreground="{StaticResource LS_InputTypeColor}" VerticalAlignment="Center"/>
                    </StackPanel>

                    <ls:LSButton x:Name="btnInsert" Style="{StaticResource ControllerHoldButtonStyle}" EatInput="False" EatEventInUI="True" DataContext="{Binding CurrentPlayer.UIData.InputEvents, Converter={StaticResource FindInputEventConverter}, ConverterParameter='UIAccept'}" Command="{Binding DataContext.StartActionCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ls:UIWidget}}}" Margin="0,54,0,0" HorizontalAlignment="Center" VerticalAlignment="Bottom"/>
                </Grid>

                <StackPanel Orientation="Horizontal" x:Name="ButtonHints" IsEnabled="True" Style="{StaticResource ButtonHint.Container.Center}">
                    <ls:LSButton x:Name="AddRemoveBtn" BoundEvent="UIAccept" 
                                        ContentTemplate="{StaticResource ControllerButtonHint}" 
                                        Content="{Binding CurrentPlayer.UIData.InputEvents, ConverterParameter=UIAccept, Converter={StaticResource FindInputEventConverter}}" 
                                        Tag="{Binding Source='h7d5baf41g4783g4677g8f91g2144a7c3c6a0', Converter={StaticResource TranslatedStringConverter}}"
                                        Command="{Binding ToggleItemCommand}" 
                                        CommandParameter="{Binding LocalFocus.DataContext.Object, ElementName=Inventory}" 
                                        TapTime="{StaticResource DefaultButtonTapTime}" EatInput="False" />

                    <ls:LSButton x:Name="ContextMenuBtn" BoundEvent="ContextMenu" 
                                        ContentTemplate="{StaticResource ControllerButtonHint}" 
                                        Content="{Binding CurrentPlayer.UIData.InputEvents, ConverterParameter=ContextMenu, Converter={StaticResource FindInputEventConverter}}" 
                                        Tag="{Binding Source='heb4b592bgc665g4e17ga685g07e2eb5e25db', Converter={StaticResource TranslatedStringConverter}}"
                                        Command="{Binding ShowContextMenu}"
                                        CommandParameter="{Binding LocalFocus, ElementName=Inventory}" 
                                        IsEnabled="{Binding LocalFocus, ElementName=Inventory,Converter={StaticResource NullToBoolFalseConverter}}"/>

                    <ls:LSButton x:Name="TooltipBtn" BoundEvent="UIShowInfo" 
                                        ContentTemplate="{StaticResource ControllerButtonHint}" 
                                        Content="{Binding CurrentPlayer.UIData.InputEvents, ConverterParameter=UIShowInfo, Converter={StaticResource FindInputEventConverter}}" 
                                        Tag="{Binding Source='hdb3826d2gfc2bg4cc3gb654gf80410859c3f',Converter={StaticResource TranslatedStringConverter}}" 
                                        Command="{Binding ToggleTooltipOnUIElement}" 
                                        CommandParameter="{Binding Path=LocalFocus, ElementName=Inventory}"
                                        IsEnabled="{Binding ElementName=Inventory, Path=LocalFocus, Converter={StaticResource NullToBoolFalseConverter}}"/>

                    <ls:LSButton x:Name="SortBtn" BoundEvent="UISort" 
                                        ContentTemplate="{StaticResource ControllerButtonHint}" 
                                        Content="{Binding CurrentPlayer.UIData.InputEvents, ConverterParameter=UISort, Converter={StaticResource FindInputEventConverter}}" 
                                        Tag="{Binding Source='hce314911gcae3g4345gbc5ag201bc976a594',Converter={StaticResource TranslatedStringConverter}}"
                                        Command="{Binding DataContext.OpenSortInventory, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" EatInput="False" TapTime="{StaticResource DefaultButtonTapTime}"/>

                    <ls:LSButton x:Name="CancelBtn" BoundEvent="UICancel" 
                                        ContentTemplate="{StaticResource ControllerButtonHint}" 
                                        Content="{Binding CurrentPlayer.UIData.InputEvents, ConverterParameter=UICancel, Converter={StaticResource FindInputEventConverter}}"
                                        Tag="{Binding Source='hff1685e4g3845g4846g99bfg219ae73ce55d', Converter={StaticResource TranslatedStringConverter}}"
                                        Command="{Binding CustomEvent}" 
                                        CommandParameter="CloseWidget"
                                        SoundID="UI_Shared_Cancel" />

                    <ls:LSInputBinding x:Name="PinTooltipBinding" Style="{StaticResource PinTooltipBindingStyle}"/>
                </StackPanel>
            </Grid>

            <ControlTemplate.Triggers>
                <DataTrigger Binding="{Binding LocalFocus, ElementName=Inventory}" Value="{x:Null}">
                    <Setter TargetName="AddRemoveBtn" Property="IsEnabled" Value="False"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding LocalFocus.DataContext.Object.IsSelected, ElementName=Inventory}" Value="True">
                    <Setter TargetName="AddRemoveBtn" Property="Tag" Value="{Binding Source='h66f5f06ag1874g4161g950dg86f429b26401', Converter={StaticResource TranslatedStringConverter}}"/>
                </DataTrigger>

                <!-- No more adding when all slots are filled -->
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding LocalFocus.DataContext.Object.IsSelected, ElementName=Inventory}" Value="False"/>
                        <Condition Binding="{Binding SelectedIndex}" Value="-1"/>
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="AddRemoveBtn" Property="IsEnabled" Value="False"/>
                </MultiDataTrigger>

                <DataTrigger Binding="{Binding Ingredients.Count}" Value="4">
                    <Setter TargetName="SlotBG" Property="Width" Value="640"/>
                </DataTrigger>

                <DataTrigger Binding="{Binding CurrentState}" Value="Working">
                    <Setter TargetName="AddRemoveBtn" Property="IsEnabled" Value="False"/>
                    <Setter TargetName="CancelBtn" Property="IsEnabled" Value="False"/>
                    <Setter TargetName="FeedbackText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h3ce43cb2gfecdg4a73g88feg68817006cd8d', Converter={StaticResource TranslatedStringConverter}}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding CurrentState}" Value="Success">
                    <Setter TargetName="AddRemoveBtn" Property="IsEnabled" Value="False"/>
                    <Setter TargetName="Inventory" Property="IsEnabled" Value="False"/>
                    <Setter TargetName="FeedbackText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hc0ee053eg9dfbg4144g984egb2f994a8cc30', Converter={StaticResource TranslatedStringConverter}}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding CurrentState}" Value="Ready">
                    <Setter TargetName="HoldActionContainer" Property="IsEnabled" Value="True"/>
                    <Setter TargetName="HoldToInsert" Property="Opacity" Value="1"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding CurrentState}" Value="Fail">
                    <Setter TargetName="SlotBG" Property="ImageSource" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/c_insert_frameFail.png"/>
                </DataTrigger>
                
                <DataTrigger Binding="{Binding FailReason}" Value="Invalid">
                    <Setter TargetName="FeedbackText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h790fbb56gd88fg43d0g9dc9g82c8aad20930', Converter={StaticResource TranslatedStringConverter}}"/>
                    <Setter TargetName="FeedbackText" Property="Foreground" Value="{StaticResource LS_alertTxtColor}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding FailReason}" Value="TooFar">
                    <Setter TargetName="FeedbackText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h1371c0f2g99ccg47a3g8012g9c240aec2b50', Converter={StaticResource TranslatedStringConverter}}"/>
                    <Setter TargetName="FeedbackText" Property="Foreground" Value="{StaticResource LS_alertTxtColor}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding FailReason}" Value="NotAllFilled">
                    <Setter TargetName="FeedbackText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h2a223e63g1953g4a41gb631gfe287b044889', Converter={StaticResource TranslatedStringConverter}}"/>
                    <Setter TargetName="FeedbackText" Property="Foreground" Value="{StaticResource LS_alertTxtColor}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding FailReason}" Value="Duplicate">
                    <Setter TargetName="FeedbackText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h85a8d808g354ag4709g8dbfg39437b3403e7', Converter={StaticResource TranslatedStringConverter}}"/>
                    <Setter TargetName="FeedbackText" Property="Foreground" Value="{StaticResource LS_alertTxtColor}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding FailReason}" Value="BaseNotFound">
                    <Setter TargetName="FeedbackText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h84799792gde2eg4c66g8a6bgc6ae05feaa02', Converter={StaticResource TranslatedStringConverter}}"/>
                    <Setter TargetName="FeedbackText" Property="Foreground" Value="{StaticResource LS_alertTxtColor}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding FailReason}" Value="IngredientNotFound">
                    <Setter TargetName="FeedbackText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h90ce0538g95a1g4d73gb5c5g54a4dae1c4e9', Converter={StaticResource TranslatedStringConverter}}"/>
                    <Setter TargetName="FeedbackText" Property="Foreground" Value="{StaticResource LS_alertTxtColor}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding FailReason}" Value="Interrupted">
                    <Setter TargetName="FeedbackText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='he3d62e55g4ed3g49fagb679ge4d9ef4a50b8', Converter={StaticResource TranslatedStringConverter}}"/>
                    <Setter TargetName="FeedbackText" Property="Foreground" Value="{StaticResource LS_alertTxtColor}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding FailReason}" Value="NotEmptySlot">
                    <Setter TargetName="FeedbackText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='he1c084aag96c0g4716gb47cge9f7e6e5b69d', Converter={StaticResource TranslatedStringConverter}}"/>
                    <Setter TargetName="FeedbackText" Property="Foreground" Value="{StaticResource LS_alertTxtColor}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding FailReason}" Value="IngredientAlreadyAdded">
                    <Setter TargetName="FeedbackText" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h5a6c11e8gf30eg4543g8cb4ge288199d523d', Converter={StaticResource TranslatedStringConverter}}"/>
                    <Setter TargetName="FeedbackText" Property="Foreground" Value="{StaticResource LS_alertTxtColor}"/>
                </DataTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </ls:UIWidget.Template>

</ls:UIWidget>