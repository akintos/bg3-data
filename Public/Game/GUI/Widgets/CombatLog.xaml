<ls:UIWidget
             x:Name="CombatLog"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:ls="clr-namespace:ls;assembly=SharedGUI"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:noesis="clr-namespace:NoesisGUIExtensions;assembly=Noesis.GUI.Extensions"
             xmlns:System="clr-namespace:System;assembly=mscorlib"
             Template="{StaticResource Hud.Root}"
             mc:Ignorable="d"
             ls:UIWidget.ContextName="CombatLog" d:DataContext="{d:DesignInstance {x:Type ls:DCCombatLog}, IsDesignTimeCreatable=True}"
             d:DesignHeight="2160" d:DesignWidth="3840">

    <ls:UIWidget.Resources>
        <ResourceDictionary>
            <Style x:Key="CombatFeed.Entry.Text" TargetType="TextBlock" BasedOn="{StaticResource CombatLog.Entry.Text}">
                <Setter Property="FontSize" Value="{StaticResource ScaledDefaultFontSize}" />
                <Setter Property="LineStackingStrategy" Value="BlockLineHeight" />
                <Setter Property="LineHeight" Value="{StaticResource ScaledDefaultFontSizeLineHeight}" />
                <Setter Property="Opacity" Value="1"/>
                <Setter Property="Width" Value="880" />
                <Setter Property="HorizontalAlignment" Value="Left" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="TextWrapping" Value="Wrap"/>
                <Setter Property="TextAlignment" Value="Left" />
                <Setter Property="noesis:Text.Stroke" Value="{StaticResource LS_TextOutlineColor}" />
                <Setter Property="noesis:Text.StrokeThickness" Value="4" />
                <Setter Property="TextBlock.Effect">
                    <Setter.Value>
                        <DropShadowEffect Direction="270" Color="{StaticResource LS_PrimaryColorDropShadowColor}" ShadowDepth="0" BlurRadius="4.0"/>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding DataContext.Layout, ElementName=CombatLog}" Value="Left">
                        <Setter Property="TextAlignment" Value="Right"/>
                        <Setter Property="HorizontalAlignment" Value="Left"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
           
            <ControlTemplate x:Key="CombatLog.ScrollViewer" TargetType="{x:Type ScrollViewer}">
                <DockPanel HorizontalAlignment="Stretch" Background="{TemplateBinding Background}">
                    <!-- scrollbar -->
                    <Border x:Name="PART_VerticalScrollBarHolder" DockPanel.Dock="Right"  Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}">
                        <ScrollBar x:Name="PART_VerticalScrollBar" Value="{TemplateBinding VerticalOffset}" Maximum="{TemplateBinding ScrollableHeight}" ViewportSize="{TemplateBinding ViewportHeight}" Margin="0,8,0,8" Style="{StaticResource GoldScrollBar}" />
                    </Border>

                    <!-- content -->
                    <Border Margin="0" HorizontalAlignment="Stretch">
                        <ScrollContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" CanContentScroll="{TemplateBinding CanContentScroll}" Margin="{TemplateBinding Padding}"/>
                    </Border>
                </DockPanel>
                <ControlTemplate.Triggers>
                  <DataTrigger  Value="True">
                    <DataTrigger.Binding>
                      <MultiBinding Converter="{StaticResource GreaterOrEqualThanMultiConverter}">
                        <Binding RelativeSource="{RelativeSource Self}" Path="ScrollableHeight" />
                        <Binding RelativeSource="{RelativeSource Self}" Path="ViewportHeight" Converter="{StaticResource MultiplierConverter}" ConverterParameter="5"/>
                      </MultiBinding>
                    </DataTrigger.Binding>
                    <Setter TargetName="PART_VerticalScrollBar" Property="ViewportSize" Value="NaN"/>
                  </DataTrigger>
                    <Trigger SourceName="PART_VerticalScrollBarHolder" Property="Visibility" Value="Visible">
                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_VerticalScrollBar" Storyboard.TargetProperty="(UIElement.Opacity)" >
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>
                        <Trigger.ExitActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_VerticalScrollBar" Storyboard.TargetProperty="(UIElement.Opacity)" >
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="0" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.ExitActions>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
        </ResourceDictionary>
    </ls:UIWidget.Resources>

    <Grid ls:TooltipExtender.Owner="{Binding CurrentPlayer.SelectedCharacter}">

<!-- COMBAT LOG BUTTON -->
        <Grid VerticalAlignment="Bottom" HorizontalAlignment="Right" Margin="0,0,-2,184" Panel.ZIndex="10">

            <Image x:Name="bg" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/CombatLog/combatlog_gizmo_bg.png" Stretch="None"/>

            <ls:LSButton x:Name="ToggleCombatLogButton" Command="{Binding ToggleCombatLogCommand}" VerticalAlignment="Center">
                <ls:LSButton.Template>
                    <ControlTemplate TargetType="ls:LSButton">
                        <Grid Height="114" Width="80" Background="Transparent">
                            <Image x:Name="btn" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/Buttons/btn_hudNav_d.png" Stretch="None"/>
                            <Image x:Name="img" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/CombatLog/ico_combatlog_d.png" Stretch="None"/>
                            <Grid.ToolTip>
                                <ls:LSTooltip Placement="Left" Content="{Binding Source='hf8bb283fg341bg41d6g8b83gd5e3f7a0a2a1',Converter={StaticResource TranslatedStringConverter}}"/>
                            </Grid.ToolTip>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="btn" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Buttons/btn_hudNav_h.png"/>
                                <Setter TargetName="img" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/CombatLog/ico_combatlog_h.png"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="btn" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Buttons/btn_hudNav_p.png"/>
                                <Setter TargetName="img" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/CombatLog/ico_combatlog_p.png"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </ls:LSButton.Template>
            </ls:LSButton>
        </Grid>

<!-- COMBAT LOG -->
        <Grid x:Name="parentGrid" SnapsToDevicePixels="True" VerticalAlignment="Bottom" HorizontalAlignment="Right" Margin="0,0,34,338" Visibility="{Binding CombatLogCollapsed, Converter={StaticResource BoolToCollapsedConverter}}" Panel.ZIndex="12">
            <b:Interaction.Triggers>
                    <b:DataTrigger Binding="{Binding CombatLogCollapsed}" Value="False">
                        <!-- Tutorial UI Event - Combat Log Expanded-->
                        <b:InvokeCommandAction Command="{Binding DataContext.TutorialEvent, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="158714b2-749d-4b92-96b8-3590922dcc2c"/>
                    </b:DataTrigger>
             </b:Interaction.Triggers>
            <StackPanel>
                <Image x:Name="TopBorder" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/CombatLog/combatlog_top_rail.png" Stretch="None" VerticalAlignment="Top" IsHitTestVisible="False" Panel.ZIndex="1"/>
                <ListBox x:Name="ExpanderHolder" Height="200" Margin="12,-16,8,-16" ItemsSource="{Binding Data.CombatLog.EntryGroups}" VirtualizingPanel.VirtualizationMode="Recycling" VirtualizingPanel.ScrollUnit="Pixel" Background="{StaticResource CombatLog.BackgroundColor}" ScrollViewer.HorizontalScrollBarVisibility="Hidden" ScrollViewer.VerticalScrollBarVisibility="Auto" Padding="30,10,10,10" >
                    <ListBox.Template>
                        <ControlTemplate TargetType="ListBox">
                            <ControlTemplate.Resources>
                                <KeyTime x:Key="CmbtLogExpandTime">0:0:0.4</KeyTime>
                            </ControlTemplate.Resources>
                            <Grid x:Name="LogContainer">
                                <ls:LSScrollViewer x:Name="Scrollviewer" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" Focusable="False" Template="{StaticResource CombatLog.ScrollViewer}" ls:AutoScrollProperties.VerticalAutoScroll="{Binding IsChecked, ElementName=btnScrollToLatest}">
                                    <ls:LSScrollViewer.Tag>
                                        <!--True if scrolled to the bottom. Using the multibinding directly in a DataTrigger doesn't work--> 
                                        <MultiBinding Converter="{StaticResource EqualConverter}">
                                            <Binding Path="ScrollableHeight" ElementName="Scrollviewer"/>
                                            <Binding Path="VerticalOffset" ElementName="Scrollviewer"/>
                                        </MultiBinding>
                                    </ls:LSScrollViewer.Tag>
                                    <ItemsPresenter />
                                </ls:LSScrollViewer>

                                <ls:LSToggleButton x:Name="btnScrollToLatest" Visibility="Hidden" IsChecked="True" VerticalAlignment="Bottom" HorizontalAlignment="Right" Margin="0,0,20,0" Panel.ZIndex="1">
                                    <ls:LSToggleButton.Resources>
                                        <BitmapImage x:Key="FilterButtonBackground" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/BottomBar/btn_pil_d.png" />
                                        <ImageSource x:Key="IconUncheckedNormal">pack://application:,,,/GustavNoesisGUI;component/Assets/Buttons/ico_superScroll_d.png</ImageSource>
                                        <ImageSource x:Key="IconUncheckedHighlight">pack://application:,,,/GustavNoesisGUI;component/Assets/Buttons/ico_superScroll_h.png</ImageSource>
                                        <ImageSource x:Key="IconUncheckedPressed">pack://application:,,,/GustavNoesisGUI;component/Assets/Buttons/ico_superScroll_p.png</ImageSource>
                                        <ImageSource x:Key="IconUncheckedDisabled">pack://application:,,,/GustavNoesisGUI;component/Assets/Buttons/ico_superScroll_d.png</ImageSource>
                                    </ls:LSToggleButton.Resources>
                                    <ls:LSToggleButton.Effect>
                                        <DropShadowEffect Direction="270" Color="{StaticResource LS_PrimaryColorDropShadowColor}" ShadowDepth="4" BlurRadius="12.0"/>
                                    </ls:LSToggleButton.Effect>
                                    <ls:LSToggleButton.Template>
                                        <ControlTemplate TargetType="{x:Type ls:LSToggleButton}">
                                            <ls:LSNineSliceImage x:Name="bg" ImageSource="{StaticResource FilterButtonBackground}" Slices="36" Padding="10" MinWidth="{Binding MaxWidth, RelativeSource={RelativeSource AncestorType={x:Type ContentPresenter}}}">
                                                <Grid Margin="10,0" Height="60">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto"/>
                                                        <ColumnDefinition Width="40"/>
                                                    </Grid.ColumnDefinitions>
                                                    <TextBlock x:Name="Text" Grid.Column="0" Text="{Binding Source='h6987400dg0477g4d9aga765g2b96f9ac6c0e', Converter={StaticResource TranslatedStringConverter}}" Foreground="{StaticResource LS_specialTxtColor}" FontSize="{StaticResource ScaledSmallFontSize}" VerticalAlignment="Center" HorizontalAlignment="Stretch" TextAlignment="Right" Margin="12,0,-6,0"/>
                                                    <Image Height="40" x:Name="Icon" Grid.Column="1" Source="{StaticResource IconUncheckedNormal}" Stretch="Uniform" VerticalAlignment="Center" Width="40" Margin="-14" HorizontalAlignment="Center"/>
                                                </Grid>
                                            </ls:LSNineSliceImage>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="ImageSource" TargetName="bg" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/BottomBar/btn_pil_h.png"/>
                                                    <Setter Property="Source" TargetName="Icon" Value="{StaticResource IconUncheckedHighlight}"/>
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="True">
                                                    <Setter Property="ImageSource" TargetName="bg" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/BottomBar/btn_pil_p.png"/>
                                                    <Setter Property="Source" TargetName="Icon" Value="{StaticResource IconUncheckedPressed}"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </ls:LSToggleButton.Template>
                                    <b:Interaction.Triggers>
                                         <!--On load simulate a click to start the scrollviewer at the bottom-->
                                        <b:EventTrigger EventName="Loaded">
                                            <ls:KeyPressAction KeyDown="True"/>
                                            <ls:KeyPressAction KeyDown="False"/>
                                        </b:EventTrigger>
                                    </b:Interaction.Triggers>
                                </ls:LSToggleButton>

                            </Grid>
                            <ControlTemplate.Triggers>
                                <DataTrigger Binding="{Binding CurrentPlayer.UIData.PinnedTooltips[0].OwnerDCWidget, Converter={StaticResource TypeConverter}}" Value="gui::DCCombatLog">
                                    <Setter TargetName="btnScrollToLatest" Property="IsChecked" Value="False"/>
                                </DataTrigger>

                                <DataTrigger Binding="{Binding Tag, ElementName=Scrollviewer}" Value="False">
                                    <Setter TargetName="btnScrollToLatest" Property="IsChecked" Value="False"/>
                                    <Setter TargetName="btnScrollToLatest" Property="Visibility" Value="Visible"/>
                                </DataTrigger>

                                <DataTrigger Binding="{Binding IsMouseOver, ElementName=LogContainer}" Value="True">
                                    <Setter TargetName="btnScrollToLatest" Property="IsChecked" Value="False"/>
                                </DataTrigger>

                                <DataTrigger Binding="{Binding CurrentPlayer.UIData.CombatLogSize}" Value="Small">
                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard >
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ExpanderHolder" Storyboard.TargetProperty="Height" >
                                                    <EasingDoubleKeyFrame KeyTime="{StaticResource CmbtLogExpandTime}" Value="200">
                                                        <EasingDoubleKeyFrame.EasingFunction>
                                                            <CubicEase EasingMode="EaseOut"/>
                                                        </EasingDoubleKeyFrame.EasingFunction>
                                                    </EasingDoubleKeyFrame>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.EnterActions>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding CurrentPlayer.UIData.CombatLogSize}" Value="Expanded">
                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard >
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ExpanderHolder" Storyboard.TargetProperty="Height" >
                                                    <EasingDoubleKeyFrame KeyTime="{StaticResource CmbtLogExpandTime}" Value="400">
                                                        <EasingDoubleKeyFrame.EasingFunction>
                                                            <CubicEase EasingMode="EaseOut"/>
                                                        </EasingDoubleKeyFrame.EasingFunction>
                                                    </EasingDoubleKeyFrame>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.EnterActions>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding CurrentPlayer.UIData.CombatLogSize}" Value="SuperExpanded">
                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard >
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ExpanderHolder" Storyboard.TargetProperty="Height" >
                                                    <EasingDoubleKeyFrame KeyTime="{StaticResource CmbtLogExpandTime}" Value="800">
                                                        <EasingDoubleKeyFrame.EasingFunction>
                                                            <CubicEase EasingMode="EaseOut"/>
                                                        </EasingDoubleKeyFrame.EasingFunction>
                                                    </EasingDoubleKeyFrame>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.EnterActions>
                                </DataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </ListBox.Template>
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="ListBoxItem">
                            <Setter Property="Template" >
                                <Setter.Value>
                                    <ControlTemplate TargetType="ListBoxItem">
                                        <ControlTemplate.Resources>
                                            <Style BasedOn="{StaticResource CombatLog.GeneratedRunWithTooltip}" TargetType="ls:LSRun"/>
                                        </ControlTemplate.Resources>
                                        <ContentPresenter x:Name="EntryPresenter" Content="{Binding Entries[0]}" ToolTipService.InitialShowDelay="{StaticResource ToolTipInitialShowDelay}" ToolTipService.Placement="Top" ToolTipService.VerticalOffset="-5" ToolTipService.HorizontalOffset="-14" Margin="60,0,0,0" d:DataContext="{x:Type ls:CombatLogGroupedEntries}">
                                            <ContentPresenter.ToolTip>
                                                <ls:LSTooltip CanBePinned="False" Content="{Binding Path=DataContext, ElementName=EntryPresenter}" ContentTemplate="{DynamicResource CombatLog.Tooltip}" PlayerId="{Binding ElementName=CombatLog,Path=DataContext.CurrentPlayer.PlayerId}" IsHitTestVisible="False"  Placement="Top" />
                                            </ContentPresenter.ToolTip>
                                            <ContentPresenter.Resources>
                                                <Style x:Key="TextStyle" TargetType="TextBlock" BasedOn="{StaticResource CombatLog.Entry.Text}"/>
                                            </ContentPresenter.Resources>
                                        </ContentPresenter>
                                        <ControlTemplate.Triggers>
                                            <DataTrigger Binding="{Binding ChildDepth}" Value="0">
                                                <Setter TargetName="EntryPresenter" Property="Margin" Value="0"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding TooltipEntries.Count}" Value="0">
                                                <Setter TargetName="EntryPresenter" Property="ToolTipService.IsEnabled" Value="False" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding CtxTransText, Converter={StaticResource NullToBoolFalseConverter}, ConverterParameter='EmptyString' }" Value="True">
                                                <Setter TargetName="EntryPresenter" Property="Content" Value="{Binding .}"/>
                                                <Setter TargetName="EntryPresenter" Property="ContentTemplate" Value="{StaticResource CombatLogGenericTemplate}"/>
                                            </DataTrigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>

                    </ListBox.ItemContainerStyle>
                </ListBox>

                <!-- =====  TODO Toggle Chat Holder Visibility ===== -->
                <Grid x:Name="ChatHolder" VerticalAlignment="Bottom" Visibility="Collapsed">
                    <Image x:Name="InputChat" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/CombatLog/combatlog_input_d.png" Stretch="None" Margin="0,0,0,0"/>
                </Grid>
                <StackPanel>
                <Image x:Name="BottomBorder" Panel.ZIndex="0" VerticalAlignment="Top" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/CombatLog/combatlog_bar_bottom_rail.png" Stretch="None" IsHitTestVisible="False"/>

                <StackPanel Orientation="Horizontal" VerticalAlignment="Bottom" HorizontalAlignment="Right" Margin="0,-10,0,0">
                    <Image x:Name="TabContainerLeft" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/CombatLog/combatlog_bar_bottom_left.png" Stretch="None" IsHitTestVisible="False" VerticalAlignment="Top"/>
                        <StackPanel Orientation="Horizontal" VerticalAlignment="Top" HorizontalAlignment="Right" Margin="0,0,0,0" Panel.ZIndex="1">
                            <StackPanel.Background>
                                <ImageBrush ImageSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CombatLog/combatlog_bar_bottom_middle.png" />
                            </StackPanel.Background>
                            <StackPanel Height="78" Orientation="Horizontal" VerticalAlignment="Bottom" Margin="-22,0,-22,0">
                             <StackPanel x:Name="LogResize" Height="78" Orientation="Horizontal" VerticalAlignment="Center">
                                <ls:LSButton  x:Name="btnIncreaseSize" Template="{StaticResource PlusButton}" Command="{Binding IncreaseCombatLogSizeCommand}">
                                </ls:LSButton>
                                <Image x:Name="Separator" Style="{StaticResource TabDividerImageStyle}"/>
                                <ls:LSButton  x:Name="btnDecreaseSize" Template="{StaticResource MinButton}" Command="{Binding DecreaseCombatLogSizeCommand}">
                                </ls:LSButton>
                            </StackPanel>
                                <!-- =====  TODO Set Visible for Chat Tabs & add loca ===== -->
                            <StackPanel x:Name="LogChatTabs" Orientation="Horizontal" VerticalAlignment="Center" Visibility="Collapsed">
                                <Image Style="{StaticResource TabDividerImageStyle}"/>
                                <ls:LSButton  x:Name="tabLog" Template="{StaticResource TabButton}" Command="{Binding IncreaseCombatLogSizeCommand}" Content="|Log|">
                                </ls:LSButton>
                                <Image Style="{StaticResource TabDividerImageStyle}"/>
                                <ls:LSButton  x:Name="tabChat" Template="{StaticResource TabButton}" Command="{Binding IncreaseCombatLogSizeCommand}" Content="|Chat|">
                                </ls:LSButton>
                                <Image Style="{StaticResource TabDividerImageStyle}"/>
                                <ls:LSButton  x:Name="tabAll" Template="{StaticResource TabButton_Active}" Command="{Binding IncreaseCombatLogSizeCommand}" Content="|All|">
                                </ls:LSButton>
                            </StackPanel>
                        </StackPanel>
                    </StackPanel>
                        <Image x:Name="TabContainerRight" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/CombatLog/combatlog_bar_bottom_right.png" Stretch="None" IsHitTestVisible="False" VerticalAlignment="Top"/>
                </StackPanel>
                </StackPanel>
                </StackPanel>

            <Grid.Resources>
                <KeyTime x:Key="SlideInHudTime">0:0:0.7</KeyTime>
                <KeyTime x:Key="SlideInHudBeginTime">0:0:0.3</KeyTime>
                <Storyboard x:Key="Hud.AnimIn">
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" >
                        <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                        <EasingDoubleKeyFrame KeyTime="{StaticResource SlideInHudBeginTime}" Value="0"/>
                        <EasingDoubleKeyFrame KeyTime="{StaticResource SlideInHudTime}" Value="1">
                            <EasingDoubleKeyFrame.EasingFunction>
                                <CubicEase EasingMode="EaseOut"/>
                            </EasingDoubleKeyFrame.EasingFunction>
                        </EasingDoubleKeyFrame>
                    </DoubleAnimationUsingKeyFrames>

                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                        <EasingDoubleKeyFrame KeyTime="0" Value="200"/>
                        <EasingDoubleKeyFrame KeyTime="{StaticResource SlideInHudBeginTime}" Value="200"/>
                        <EasingDoubleKeyFrame KeyTime="{StaticResource SlideInHudTime}" Value="0">
                            <EasingDoubleKeyFrame.EasingFunction>
                                <CubicEase EasingMode="EaseOut"/>
                            </EasingDoubleKeyFrame.EasingFunction>
                        </EasingDoubleKeyFrame>
                    </DoubleAnimationUsingKeyFrames>

                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                        <EasingDoubleKeyFrame KeyTime="0" Value="200"/>
                        <EasingDoubleKeyFrame KeyTime="{StaticResource SlideInHudBeginTime}" Value="200"/>
                        <EasingDoubleKeyFrame KeyTime="{StaticResource SlideInHudTime}" Value="0">
                            <EasingDoubleKeyFrame.EasingFunction>
                                <CubicEase EasingMode="EaseOut"/>
                            </EasingDoubleKeyFrame.EasingFunction>
                        </EasingDoubleKeyFrame>
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>
            </Grid.Resources>

            <Grid.Style>
                <Style TargetType="Grid">
                    <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
                    <Setter Property="RenderTransform">
                        <Setter.Value>
                            <TransformGroup>
                                <ScaleTransform/>
                                <SkewTransform/>
                                <RotateTransform/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding CurrentPlayer.UIData.PreviousState}" Value="PartyInventory">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard  Storyboard="{StaticResource Hud.AnimIn}" />
                            </DataTrigger.EnterActions>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding CurrentPlayer.UIData.PreviousState}" Value="PartyEquipment">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard  Storyboard="{StaticResource Hud.AnimIn}" />
                            </DataTrigger.EnterActions>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding CurrentPlayer.UIData.PreviousState}" Value="Dialogue">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard  Storyboard="{StaticResource Hud.AnimIn}" />
                            </DataTrigger.EnterActions>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding CurrentPlayer.UIData.PreviousState}" Value="PartyCharacterSheet">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard  Storyboard="{StaticResource Hud.AnimIn}" />
                            </DataTrigger.EnterActions>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding CurrentPlayer.UIData.PreviousState}" Value="SpellBook">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard  Storyboard="{StaticResource Hud.AnimIn}" />
                            </DataTrigger.EnterActions>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>

            </Grid.Style>
        </Grid>
        
<!-- COMBAT FEED -->
        <Grid x:Name="FeedGrid" IsHitTestVisible="False" SnapsToDevicePixels="True" VerticalAlignment="Bottom" HorizontalAlignment="Right" Margin="0,0,12,348" Visibility="{Binding CombatLogCollapsed, Converter={StaticResource BoolToVisibleConverter}}" MaxWidth="1000">
            <ItemsControl x:Name="CombatFeed" ItemsSource="{Binding FilteredItems, ElementName=CombatFeedMesssages}" AlternationCount="{Binding FilteredItems.Count, ElementName=CombatFeedMesssages}" Height="700" HorizontalAlignment="Left" VerticalAlignment="Bottom" Visibility="{Binding CurrentPlayer.UIOptions.ShowCombatFeed, Converter={StaticResource BoolToVisibleConverter}}">
                <b:Interaction.Behaviors>
                    <ls:CollectionFilterBehavior x:Name="CombatFeedMesssages" ItemsSource="{Binding Data.CombatLog.EntryGroups}" Predicate="{Binding DataContext.Data.CombatFeedMessagesPredicate, ElementName=CombatLog}"/>
                </b:Interaction.Behaviors>
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel VerticalAlignment="Bottom"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate DataType="{x:Type ls:CombatLogGroupedEntries}">
                        <!-- Tag True == storyboard for this template finished -->
                        <Grid x:Name="GroupContainer" Opacity="1" Tag="False" Margin="10,0">
                            <Grid.Resources>
                                <KeyTime x:Key="AnimFadeStart">0:0:4.75</KeyTime>
                                <KeyTime x:Key="AnimEnd">0:0:5</KeyTime>

                                <Storyboard x:Key="FadeStoryBoard">
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0" Value="1"/>
                                        <EasingDoubleKeyFrame KeyTime="{StaticResource AnimFadeStart}" Value="1"/>
                                        <EasingDoubleKeyFrame KeyTime="{StaticResource AnimEnd}" Value="0"/>
                                    </DoubleAnimationUsingKeyFrames>

                                    <!-- Setting tag to announce end of /this/ storyboard as StoryboardCompletedTrigger will trigger if /any/ instance of FadeStoryBoard finishes -->
                                    <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="Tag">
                                        <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="False"/>
                                        <DiscreteBooleanKeyFrame KeyTime="{StaticResource AnimEnd}" Value="True"/>
                                    </BooleanAnimationUsingKeyFrames>
                                </Storyboard>
                            </Grid.Resources>
                            <b:Interaction.Triggers>
                                <b:EventTrigger EventName="Loaded">
                                    <b:ControlStoryboardAction Storyboard="{StaticResource FadeStoryBoard}"/>
                                </b:EventTrigger>
                                <b:EventTrigger EventName="Unloaded">
                                    <b:InvokeCommandAction Command="{Binding DataContext.MarkCombatLogGroupEntrySeen, ElementName=CombatLog}" CommandParameter="{Binding .}"/>
                                </b:EventTrigger>
                                <b:PropertyChangedTrigger Binding="{Binding Tag, ElementName=GroupContainer}">
                                    <b:Interaction.Behaviors>
                                        <b:ConditionBehavior>
                                            <b:ConditionalExpression>
                                                <b:ComparisonCondition LeftOperand="{Binding Tag, ElementName=GroupContainer}" Operator="Equal" RightOperand="True"/>
                                            </b:ConditionalExpression>
                                        </b:ConditionBehavior>
                                    </b:Interaction.Behaviors>
                                    <b:InvokeCommandAction Command="{Binding DataContext.MarkCombatLogGroupEntrySeen, ElementName=CombatLog}" CommandParameter="{Binding .}"/>
                                </b:PropertyChangedTrigger>
                            </b:Interaction.Triggers>

                            <ContentPresenter x:Name="EntryPresenter" Content="{Binding Entries[0]}">
                                <ContentPresenter.Resources>
                                    <Style x:Key="TextStyle" TargetType="TextBlock" BasedOn="{StaticResource CombatFeed.Entry.Text}"/>
                                </ContentPresenter.Resources>
                            </ContentPresenter>
                        </Grid>

                        <DataTemplate.Triggers>
                            <DataTrigger Binding="{Binding CtxTransText, Converter={StaticResource NullToBoolFalseConverter}, ConverterParameter='EmptyString' }" Value="True">
                                <Setter TargetName="EntryPresenter" Property="Content" Value="{Binding .}"/>
                                <Setter TargetName="EntryPresenter" Property="ContentTemplate" Value="{StaticResource CombatLogGenericTemplate}"/>
                            </DataTrigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </Grid>
    </Grid>

</ls:UIWidget>