<ls:UIWidget x:Name="DMSettings"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:ls="clr-namespace:ls;assembly=SharedGUI"
             xmlns:System="clr-namespace:System;assembly=mscorlib"
             xmlns:noesis="clr-namespace:NoesisGUIExtensions;assembly=Noesis.GUI.Extensions"
             xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             mc:Ignorable="d"
             ls:UIWidget.ContextName="DMSettings"
             FocusLeft="UILeft" FocusRight="UIRight"
             ls:MoveFocus.FocusMovementMode="Closest"
             KeyboardNavigation.DirectionalNavigation="Continue"
             d:DataContext="{d:DesignInstance {x:Type ls:DCDMSettings}, IsDesignTimeCreatable=True}"
             d:DesignHeight="2160" d:DesignWidth="3840">
    
    <ls:UIWidget.Template>
        <ControlTemplate>
            <ControlTemplate.Resources>
                <BitmapImage x:Key="FadeHeaderImage" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/DMSettings/fade_header.png"/>
                <BitmapImage x:Key="FadeFooterImage" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/DMSettings/fade_footer.png"/>
                <BitmapImage x:Key="TitleBarImage" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/DMSettings/titlebar.png"/>
                <BitmapImage x:Key="Selector" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/DMSettings/c_selector.png" />
                <BitmapImage x:Key="BackgroundBanner" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/DMSettings/column_bg.png" />
                <BitmapImage x:Key="Arrow" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/DMSettings/c_selectionArrow.png" />
                <BitmapImage x:Key="BackgroundFade" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/background_fade.png"/>
            </ControlTemplate.Resources>

            <Grid>
                <b:Interaction.Triggers>
                    <b:EventTrigger EventName="Loaded">
                        <ls:LSPlaySound Sound="UI_HUD_NewGameSettings_Open"/>
                        <ls:SetMoveFocusAction TargetName="DMSettings" FocusElement="{Binding ElementName=PresetList}"/>
                    </b:EventTrigger>
                </b:Interaction.Triggers>

                <ls:LSNineSliceImage x:Name="CurrentGameBackground" ImageSource="{StaticResource BackgroundFade}" Slices="0" IconWidth="3740" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Visibility="Collapsed"/>
                <Image Source="{StaticResource FadeHeaderImage}" VerticalAlignment="Top" HorizontalAlignment="Center" Stretch="None"/>
                <Image Source="{StaticResource FadeFooterImage}" VerticalAlignment="Bottom" HorizontalAlignment="Center" Stretch="None"/>

                <TextBlock x:Name="TitleText" Text="{Binding Source='h57a5735eg7213g4c3cg914cgbd1b5af276cc', Converter={StaticResource TranslatedStringConverter}}" VerticalAlignment="Top" HorizontalAlignment="Center" FontSize="{StaticResource ScaledHugeFontSize}" Foreground="{StaticResource LS_extraspecialTxtColor}" Margin="0,40,0,0"/>

                <Image Source="{StaticResource TitleBarImage}" VerticalAlignment="Top" HorizontalAlignment="Center" Stretch="None" Margin="0,148,0,0"/>

                <ListBox x:Name="PresetList" HorizontalAlignment="Center" VerticalAlignment="Top" ItemsSource="{Binding Presets}" Margin="0,220,0,0" SelectedIndex="1" AlternationCount="{Binding Presets.Count}">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Grid x:Name="base" Margin="60,0" ls:MoveFocus.Focusable="True" Focusable="True">
                                <b:Interaction.Triggers>
                                    <b:DataTrigger Binding="{Binding IsFocused, ElementName=base}" Value="True">
                                        <ls:LSPlaySound Sound="UI_Shared_Hover" />
                                        <b:ChangePropertyAction TargetObject="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}" PropertyName="SelectedItem" Value="{Binding .}"/>
                                    </b:DataTrigger>
                                </b:Interaction.Triggers>

                                <Grid HorizontalAlignment="Center" VerticalAlignment="Top" ClipToBounds="True" Margin="0,80,0,0">
                                    <Image x:Name="DifficultyImage" Stretch="None" HorizontalAlignment="Center" VerticalAlignment="Top" RenderTransformOrigin="0.5,0.5">
                                        <Image.RenderTransform>
                                            <ScaleTransform/>
                                        </Image.RenderTransform>
                                        <Image.Source>
                                            <MultiBinding Converter="{StaticResource IconIdToSourceConverter}">
                                                <Binding Source="Assets/DMSettings/"/>
                                                <Binding Path="AssetName"/>
                                                <Binding Source="_bg_d"/>
                                            </MultiBinding>
                                        </Image.Source>
                                        <Image.Effect>
                                            <ls:SaturationEffect Saturation="0"/>
                                        </Image.Effect>
                                    </Image>

                                    <Image x:Name="DifficultyImageHover" Stretch="None" HorizontalAlignment="Center" VerticalAlignment="Top" Opacity="0" RenderTransformOrigin="0.5,0.5">
                                        <Image.RenderTransform>
                                            <ScaleTransform/>
                                        </Image.RenderTransform>
                                        <Image.Source>
                                            <MultiBinding Converter="{StaticResource IconIdToSourceConverter}">
                                                <Binding Source="Assets/DMSettings/"/>
                                                <Binding Path="AssetName"/>
                                                <Binding Source="_bg_h"/>
                                            </MultiBinding>
                                        </Image.Source>
                                    </Image>
                                </Grid>

                                <Image Source="{StaticResource BackgroundBanner}" Stretch="None" VerticalAlignment="Top" HorizontalAlignment="Center"/>
                                <Image x:Name="SelectorImage" Source="{StaticResource Selector}" Stretch="None" HorizontalAlignment="Center" VerticalAlignment="Top" Visibility="Hidden"/>

                                <TextBlock x:Name="Title" Text="{Binding Title.Str}" 
                                           Foreground="{StaticResource LS_accent75TxtColor}" FontSize="{StaticResource ScaledTitleFontSize}" FontWeight="DemiBold"
                                           HorizontalAlignment="Center" 
                                           VerticalAlignment="Top" 
                                           Margin="0,1360,0,0"/>

                                <TextBlock x:Name="Description" Text="{Binding Description.Str}" 
                                           Foreground="{StaticResource LS_baseTxtColor}" FontSize="{StaticResource ScaledSmallishFontSize}" FontStyle="Italic" FontWeight="DemiBold" 
                                           HorizontalAlignment="Center" VerticalAlignment="Top" TextAlignment="Center" 
                                           TextWrapping="Wrap" 
                                           Margin="0,1464,0,0" 
                                           MaxWidth="720"/>

                                <Image x:Name="LeftArrow" Source="{StaticResource Arrow}" Stretch="None" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="0,796,0,0" RenderTransformOrigin="0.5, 0.5" Visibility="Hidden">
                                    <Image.RenderTransform>
                                        <ScaleTransform ScaleX="-1"/>
                                    </Image.RenderTransform>
                                </Image>
                                <Image x:Name="RightArrow" Source="{StaticResource Arrow}" Stretch="None" VerticalAlignment="Top" HorizontalAlignment="Right" Margin="0,796,0,0" Visibility="Hidden"/>
                            </Grid>

                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding (ls:MoveFocus.IsFocused), ElementName=base}" Value="True">
                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard x:Name="ImageHover" Storyboard="{StaticResource NewGameCard.ImageHover}"/>
                                        <StopStoryboard BeginStoryboardName="ImageDefault"/>
                                    </DataTrigger.EnterActions>
                                    <DataTrigger.ExitActions>
                                        <BeginStoryboard x:Name="ImageDefault" Storyboard="{StaticResource NewGameCard.ImageDefault}"/>
                                        <StopStoryboard BeginStoryboardName="ImageHover"/>
                                    </DataTrigger.ExitActions>
                                    <Setter TargetName="SelectorImage" Property="Visibility" Value="Visible"/>
                                    <Setter TargetName="LeftArrow" Property="Visibility" Value="Visible"/>
                                    <Setter TargetName="RightArrow" Property="Visibility" Value="Visible"/>
                                    <Setter TargetName="Title" Property="Foreground" Value="{StaticResource LS_tint100}"/>
                                    <Setter TargetName="Description" Property="Foreground" Value="{StaticResource LS_accent75TxtColor}"/>
                                </DataTrigger>

                                <DataTrigger Binding="{Binding Path=(ItemsControl.AlternationIndex), RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Value="0">
                                    <Setter TargetName="LeftArrow" Property="Visibility" Value="Hidden"/>
                                </DataTrigger>

                                <DataTrigger Binding="{Binding Path=(ItemsControl.AlternationIndex), RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Value="2">
                                    <Setter TargetName="RightArrow" Property="Visibility" Value="Hidden"/>
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Horizontal"/>
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>
                </ListBox>

                <TextBlock x:Name="ChangeDifficultyNotice" Text="{Binding Source='h63e32c4agf6d6g42dagb8f6g6ae105cb4f52', Converter={StaticResource TranslatedStringConverter}}" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0,0,0,160" Visibility="Collapsed"/>

                <StackPanel x:Name="ButtonPrompts" Style="{StaticResource ButtonHint.Container.Center}">
                    <ls:LSButton x:Name="StartGameButton" BoundEvent="UIAccept" ContentTemplate="{StaticResource ControllerButtonHint}" Command="{Binding StartNewGame}" CommandParameter="{Binding SelectedItem, ElementName=PresetList}" Content="{Binding CurrentPlayer.UIData.InputEvents, ConverterParameter=UIAccept, Converter={StaticResource FindInputEventConverter}}" Tag="{Binding Source='hff3fbf0fgf6c5g427fga4dfgbb238c01cb4c', Converter={StaticResource TranslatedStringConverter}}" OverwriteClickSound="UI_HUD_NewGameSettings_StartGame_Click"/>
                    <ls:LSButton x:Name="CancelButton" BoundEvent="UICancel" Command="{Binding CustomEvent}" CommandParameter="CloseWidget" Tag="{Binding Source='hfe928c0dgb014g4eb2g8c52g6ed43b026e20', Converter={StaticResource TranslatedStringConverter}}" ContentTemplate="{StaticResource ControllerButtonHint}" Content="{Binding CurrentPlayer.UIData.InputEvents, ConverterParameter=UICancel, Converter={StaticResource FindInputEventConverter}}"/>
                </StackPanel>
            </Grid>

            <ControlTemplate.Triggers>
                <DataTrigger Binding="{Binding IsMainMenu}" Value="False">
                    <Setter TargetName="CurrentGameBackground" Property="Visibility" Value="Visible"/>
                    <Setter TargetName="PresetList" Property="SelectedValue" Value="{Binding CurrentPreset, Mode=OneTime}"/>
                    <Setter TargetName="TitleText" Property="Text" Value="{Binding Source='h37dad4aagf5cag4c29g90c2g88e3b50cbc9e', Converter={StaticResource TranslatedStringConverter}}"/>
                    <Setter TargetName="StartGameButton" Property="Command" Value="{Binding UpdateDifficultyCommand}"/>
                    <Setter TargetName="StartGameButton" Property="Tag" Value="{Binding Source='h5ec59419gbcbag4572gbf24g259ad7f261f2', Converter={StaticResource TranslatedStringConverter}}"/>
                    <Setter TargetName="StartGameButton" Property="OverwriteClickSound" Value="UI_Shared_Apply"/>
                </DataTrigger>

                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsHost}" Value="False"/>
                        <Condition Binding="{Binding IsMainMenu}" Value="False"/>
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="StartGameButton" Property="IsEnabled" Value="False"/>
                    <Setter TargetName="ChangeDifficultyNotice" Property="Visibility" Value="Visible"/>
                </MultiDataTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </ls:UIWidget.Template>
</ls:UIWidget>