<ls:UIWidget x:Name="Overlay"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
			 xmlns:b="http://schemas.microsoft.com/xaml/behaviors" 
             xmlns:ls="clr-namespace:ls;assembly=SharedGUI"
             xmlns:noesis="clr-namespace:NoesisGUIExtensions;assembly=Noesis.GUI.Extensions"
			 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:System="clr-namespace:System;assembly=mscorlib"
			 mc:Ignorable="d"
             d:DesignHeight="2160" d:DesignWidth="3840"
			 ls:UIWidget.ContextName="Overlay" d:DataContext="{d:DesignInstance {x:Type ls:DCOverlay}, IsDesignTimeCreatable=True}"
             ls:TooltipExtender.Owner="{Binding CurrentPlayer.SelectedCharacter}">

    <ls:UIWidget.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Library/CriticalHitAnimation.xaml"/>
                <ResourceDictionary Source="../Library/WorldTextTemplates.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <ControlTemplate x:Key="WorldTextDisplayController">
                <ControlTemplate.Resources>
                    <!-- default to starting at overhead position -->
                    <Style x:Key="WorldTextPositioning" BasedOn="{StaticResource OverheadPosition}"/>
                </ControlTemplate.Resources>

                <ItemsControl ItemsSource="{Binding CurrentPlayer.WorldText}" ItemContainerStyle="{DynamicResource WorldTextPositioning}" IsHitTestVisible="False">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Canvas ClipToBounds="{Binding DataContext.Data.IsCameraSplit, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Border x:Name="TextBorder">
                                <Border.RenderTransform>
                                    <TransformGroup>
                                        <TranslateTransform X="{Binding ElementName=ContentRoot,Path=ActualWidth,Converter={StaticResource MultiplierConverter}, ConverterParameter=-0.5}" Y="0"/>
                                    </TransformGroup>
                                </Border.RenderTransform>
                                <TextBlock ls:TextBlockFormatter.SourceText="{Binding Text}" HorizontalAlignment="Center" VerticalAlignment="Bottom" RenderTransformOrigin="0.5,0.5"
                                       TextWrapping="Wrap" TextAlignment="Center" Foreground="{DynamicResource LS_PrimaryColor}" 
                                       noesis:Text.StrokeThickness="{StaticResource TextOutlineThickness}" FontSize="{StaticResource TitleFontSize}" >
                                    <noesis:Text.Stroke>
                                        <SolidColorBrush Color="{DynamicResource TextOutlineColor}" Opacity="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=TextBlock}, Path=Foreground.Opacity}"/>
                                    </noesis:Text.Stroke>
                                    <TextBlock.RenderTransform>
                                        <!-- for animating position -->
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform/>
                                            <TranslateTransform X="0" Y="0"/>
                                        </TransformGroup>
                                    </TextBlock.RenderTransform>

                                    <TextBlock.Effect>
                                        <DropShadowEffect Direction="270" Color="Black" ShadowDepth="3.0" BlurRadius="0.0"/>
                                    </TextBlock.Effect>

                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding AnimationType}" Value="Anim0">
                                                    <DataTrigger.EnterActions>
                                                        <BeginStoryboard Storyboard="{StaticResource DamageAnimationCommon}"/>
                                                        <BeginStoryboard Storyboard="{StaticResource DamageAnimationX0}"/>
                                                        <BeginStoryboard Storyboard="{StaticResource DamageAnimationY0}"/>
                                                    </DataTrigger.EnterActions>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding AnimationType}" Value="Anim1">
                                                    <DataTrigger.EnterActions>
                                                        <BeginStoryboard Storyboard="{StaticResource DamageAnimationCommon}"/>
                                                        <BeginStoryboard Storyboard="{StaticResource DamageAnimationX1}"/>
                                                        <BeginStoryboard Storyboard="{StaticResource DamageAnimationY0}"/>
                                                    </DataTrigger.EnterActions>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding AnimationType}" Value="Anim2">
                                                    <DataTrigger.EnterActions>
                                                        <BeginStoryboard Storyboard="{StaticResource DamageAnimationCommon}"/>
                                                        <BeginStoryboard Storyboard="{StaticResource DamageAnimationX2}"/>
                                                        <BeginStoryboard Storyboard="{StaticResource DamageAnimationY0}"/>
                                                    </DataTrigger.EnterActions>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding AnimationType}" Value="Anim3">
                                                    <DataTrigger.EnterActions>
                                                        <BeginStoryboard Storyboard="{StaticResource DamageAnimationCommon}"/>
                                                        <BeginStoryboard Storyboard="{StaticResource DamageAnimationX3}"/>
                                                        <BeginStoryboard Storyboard="{StaticResource DamageAnimationY1}"/>
                                                    </DataTrigger.EnterActions>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding AnimationType}" Value="Anim4">
                                                    <DataTrigger.EnterActions>
                                                        <BeginStoryboard Storyboard="{StaticResource DamageAnimationCommon}"/>
                                                        <BeginStoryboard Storyboard="{StaticResource DamageAnimationX4}"/>
                                                        <BeginStoryboard Storyboard="{StaticResource DamageAnimationY1}"/>
                                                    </DataTrigger.EnterActions>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </Border>
                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding PlayerId, RelativeSource={RelativeSource AncestorType=ls:UIWidget}}" Value="1">
                                    <Setter TargetName="TextBorder" Property="RenderTransform">
                                        <Setter.Value>
                                            <TransformGroup>
                                                <TranslateTransform X="0" Y="0"/>
                                            </TransformGroup>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </ControlTemplate>
        </ResourceDictionary>

    </ls:UIWidget.Resources>

    <ls:UIWidget.Template>
        <ControlTemplate>
            <Grid x:Name="OverlayRoot" Visibility="Collapsed">
                <Grid Visibility="{Binding CurrentPlayer.UIData.ShowHud, Converter={StaticResource BoolToVisibleConverter}}">
                    <Control Template="{StaticResource WorldTextDisplayController}"/>
                </Grid>

                <!-- Show dice roll and damage during CritCam -->
                <Grid Visibility="{Binding CurrentPlayer.UIData.ShowHud, Converter={StaticResource BoolToCollapsedConverter}}">
                    <ContentControl x:Name="CritCamInfo" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" IsHitTestVisible="False"/>

                    <Control Template="{StaticResource WorldTextDisplayController}">
                        <Control.Resources>
                            <Style x:Key="WorldTextPositioning" BasedOn="{StaticResource MiddlePosition}"/>
                        </Control.Resources>
                    </Control>
                </Grid>

                <!--Cancel active action, before requesting game menu (except for forced casts on hovering an enemy in combat mode)-->
                <ls:LSInputBinding x:Name="CancelInputBinding" BoundEvent="ToggleInGameMenu" Command="{Binding ActionCancelCommand}" IsEnabled="{Binding CurrentPlayer.SelectedCharacter.IsCasting}" EatInput="{Binding CurrentPlayer.SelectedCharacter.IsForceCasting, Converter={StaticResource InvertBoolConverter}}"/>


               
                <!-- Button Prompts -->

                <StackPanel x:Name="ButtonPromptHolder" Orientation="Vertical" Style="{StaticResource ButtonHint.Container.RightStacked}" >

                    <!-- Cancel an already set action-->
                    <ls:LSButton x:Name="ActionCancelButton"
                                     ContentTemplate="{StaticResource ControllerButtonHint}"
                                     Content="{Binding CurrentPlayer.UIData.InputEvents, Converter={StaticResource FindInputEventConverter}, ConverterParameter='UICancel'}"
                                     Tag="{Binding Source='h01d5c470g61bfg498cgb17eg7be425444fa5', Converter={StaticResource TranslatedStringConverter}}"
                                     Visibility="Collapsed"/>

                    <!-- Open Radials-->
                    <ls:LSButton x:Name="OpenActionRadials" ContentTemplate="{StaticResource ControllerButtonHint}" Content="{Binding CurrentPlayer.UIData.InputEvents, ConverterParameter=UITabNext, Converter={StaticResource FindInputEventConverter}}" Tag="{Binding Source='h1988a9a5g8b63g4d67gb237ga5ec8f73f748', Converter={StaticResource TranslatedStringConverter}}"/>


                </StackPanel>

                <!-- General tooltip pinning binding -->
                <ls:LSInputBinding x:Name="PinTooltipBinding" Style="{StaticResource PinTooltipBindingStyle}"/>
            </Grid>

            <ControlTemplate.Triggers>

                <DataTrigger Binding="{Binding Layout}" Value="Right">
                    <Setter TargetName="ButtonPromptHolder" Property="Style" Value="{StaticResource ButtonHint.Container.LeftStacked}" />
                    <Setter TargetName="ButtonPromptHolder" Property="Margin" Value="12,0,0,26" />
                </DataTrigger>


                <DataTrigger Binding="{Binding Layout}" Value="Left">
                    <Setter TargetName="ButtonPromptHolder" Property="Margin" Value="0,0,12,26" />
                </DataTrigger>

                <DataTrigger Binding="{Binding CriticalHitAnimation, Mode=OneWay}" Value="True">
                    <Setter TargetName="CritCamInfo" Property="Template" Value="{StaticResource Overlay.CriticalHitAnimation}" />
                </DataTrigger>

                <DataTrigger Binding="{Binding CurrentPlayer.UIData.AreRadialsOpen}" Value="True">
                    <Setter TargetName="ButtonPromptHolder" Property="Visibility" Value="Collapsed" />
                </DataTrigger>

                <DataTrigger Binding="{Binding CurrentPlayer.SelectedCharacter.CharacterMode}" Value="InDialogue">
                    <Setter TargetName="ButtonPromptHolder" Property="Visibility" Value="Collapsed" />
                </DataTrigger>

                <DataTrigger Binding="{Binding CurrentPlayer.UIData.CharacterCreationMode}" Value="Creation">
                    <Setter TargetName="ButtonPromptHolder" Property="Visibility" Value="Collapsed" />
                </DataTrigger>

                <DataTrigger Binding="{Binding CurrentPlayer.SelectedCharacter.InTurnBasedMode}" Value="True">
                    <Setter TargetName="OpenActionRadials" Property="Visibility" Value="Collapsed" />
                </DataTrigger>

                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding CurrentPlayer.IsControllerCursorActive}" Value="True"/>
                        <Condition Binding="{Binding CurrentPlayer.SelectedCharacter.IsCasting}" Value="True"/>
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="ActionCancelButton" Property="Visibility" Value="Visible"/>
                </MultiDataTrigger>



                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding CurrentPlayer.IsControllerCursorActive}" Value="True"/>
                        <Condition Binding="{Binding CurrentPlayer.SelectedCharacter.Moving}" Value="True"/>
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="ActionCancelButton" Property="Visibility" Value="Visible"/>
                </MultiDataTrigger>

                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding HasInputEnabled, ElementName=Overlay}" Value="True"/>
                        <Condition Binding="{Binding CurrentPlayer.SelectedCharacter.IsCasting}" Value="True"/>
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="ActionCancelButton" Property="Visibility" Value="Visible"/>
                </MultiDataTrigger>

                <DataTrigger Value="True">
                    <DataTrigger.Binding>
                        <MultiBinding Converter="{StaticResource EqualConverter}">
                            <Binding Path="CurrentPlayer.SelectedCharacter.CurrentSpellTask.Name.Str"/>
                            <Binding Path="CurrentPlayer.SelectedCharacter.MainMeleeAttack.Name"/>
                        </MultiBinding>
                    </DataTrigger.Binding>
                    <Setter TargetName="ActionCancelButton"  Property="Visibility" Value="Collapsed" />
                </DataTrigger>

                <DataTrigger Value="True">
                    <DataTrigger.Binding>
                        <MultiBinding Converter="{StaticResource EqualConverter}">
                            <Binding Path="CurrentPlayer.SelectedCharacter.CurrentSpellTask.Name.Str"/>
                            <Binding Path="CurrentPlayer.SelectedCharacter.MainRangedAttack.Name"/>
                        </MultiBinding>
                    </DataTrigger.Binding>
                    <Setter TargetName="ActionCancelButton"  Property="Visibility" Value="Collapsed" />
                </DataTrigger>

                <DataTrigger Binding="{Binding PlayerId, RelativeSource={RelativeSource Mode=Self}}" Value="1">
                    <Setter TargetName="OverlayRoot" Property="Visibility" Value="Visible" />
                </DataTrigger>

                <DataTrigger Binding="{Binding Data.IsCameraSplit}" Value="True">
                    <Setter TargetName="OverlayRoot" Property="Visibility" Value="Visible" />
                </DataTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </ls:UIWidget.Template>
</ls:UIWidget>
