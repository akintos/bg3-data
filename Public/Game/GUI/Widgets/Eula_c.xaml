<ls:UIWidget x:Name="Eula"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:ls="clr-namespace:ls;assembly=SharedGUI"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" mc:Ignorable="d"
             xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
             d:DataContext="{d:DesignInstance {x:Type ls:Widget}, IsDesignTimeCreatable=True}"
             d:DesignWidth="3840" d:DesignHeight="2160">

    <ls:UIWidget.Template>
        <ControlTemplate>
            <ControlTemplate.Resources>
                <BitmapImage x:Key="BG3Background" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/SignUp/STUB_BG3_background.png"/>
                <BitmapImage x:Key="ContentBackground" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/Messagebox/dialog_bg.png" />
                <BitmapImage x:Key="BottomSeparatorImage" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/Messagebox/dialog_bottom_0x.png" />
            </ControlTemplate.Resources>

            <Border>
                <Border.Background>
                    <ImageBrush ImageSource="{StaticResource BG3Background}" Stretch="UniformToFill"/>
                </Border.Background>

                <Grid MaxWidth="{StaticResource DesignedContentMaxWidth}" Visibility="{Binding ShowFirstTimeSetup, Converter={StaticResource BoolToVisibleConverter}}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="200"/>
                        <RowDefinition/>
                        <RowDefinition Height="220"/>
                    </Grid.RowDefinitions>

                    <b:Interaction.Triggers>
                        <b:EventTrigger EventName="Loaded">
                            <b:Interaction.Behaviors>
                                <b:ConditionBehavior>
                                    <b:ConditionalExpression>
                                        <b:ComparisonCondition LeftOperand="{Binding ShowFirstTimeSetup}" Operator="Equal" RightOperand="False"/>
                                    </b:ConditionalExpression>
                                </b:ConditionBehavior>
                            </b:Interaction.Behaviors>

                            <b:InvokeCommandAction Command="{Binding CustomEvent}" CommandParameter="OpenSplashScreen"/>
                        </b:EventTrigger>
                    </b:Interaction.Triggers>

                    <!-- title -->
                    <TextBlock Grid.Row="0" 
                               Text="{Binding Source='hf21c0f1egd4a5g440fgb099gb721c5997f5a', Converter={StaticResource TranslatedStringConverter}}" 
                               x:Name="Title" 
                               HorizontalAlignment="Center" 
                               VerticalAlignment="Center" 
                               FontSize="{StaticResource ScaledMassiveFontSize}" 
                               Foreground="{StaticResource LS_PrimaryColor}"/>

                    <Grid Grid.Row="1" HorizontalAlignment="Center">
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <Image Grid.Row="0" Stretch="Fill" Width="3000" x:Name="Bg" Source="{StaticResource ContentBackground}"/>

                        <!-- body text -->
                        <ls:LSScrollViewer Grid.Row="0" x:Name="ContentScrollViewer"
                                           HorizontalScrollBarVisibility="Hidden" 
                                           VerticalScrollBarVisibility="Visible" 
                                           HorizontalAlignment="Center" 
                                           VerticalAlignment="Center" 
                                           BoundScrollUpEvent="UIScrollUp"  
                                           BoundScrollDownEvent="UIScrollDown"
                                           GamepadScrollMultiplier="2000"
                                           Template="{StaticResource MinimalisticScrollViewerTemplate}"
                                           ClipToBounds="True">

                            <TextBlock Text="{Binding Source='hb62d77f7g85a6g40cdgbcddg0628a2207325', Converter={StaticResource TranslatedStringConverter}}" 
                                       x:Name="Message" 
                                       FontSize="{StaticResource ScaledMediumFontSize}" 
                                       Foreground="{StaticResource LS_SecondaryColor}" 
                                       TextWrapping="Wrap" 
                                       TextAlignment="Left" 
                                       Width="1280"
                                       Margin="0,32">
                            </TextBlock>
                        </ls:LSScrollViewer>

                        <TextBlock Grid.Row="1" Text="{Binding Source='h4337eca4g6d93g46d9ga786g8bc7132c4b46',Converter={StaticResource TranslatedStringConverter}}" 
                                   TextAlignment="Center" Margin="0,48"/>
                    </Grid>

                    <Image Grid.Row="2" x:Name="Bg_Bottom" 
                           Source="{StaticResource BottomSeparatorImage}" 
                           Stretch="None"
                           VerticalAlignment="Top"
                           Margin="0,0,0,24"/>

                    <StackPanel Grid.Row="2" x:Name="AcceptPart" Style="{StaticResource ButtonHint.Container.Center}">

                        <ls:LSButton x:Name="AcceptBtn"
                                     Content="{Binding CurrentPlayer.UIData.InputEvents, Converter={StaticResource FindInputEventConverter}, ConverterParameter='UIAccept'}" 
                                     ContentTemplate="{StaticResource ControllerButtonHint}"                                          
                                     Tag="{Binding Source='hd3a02890gb44dg416fgb68dg9d2d899352cb', Converter={StaticResource TranslatedStringConverter}}" 
                                     SoundID="UI_Eula_Accept"           
                                     BoundEvent="UIAccept"
                                     VerticalAlignment="Center"
                                     Command="{Binding CustomEvent}" 
                                     CommandParameter="OpenSensitiveSettings"/>

                        <ls:LSButton Content="{Binding CurrentPlayer.UIData.InputEvents, Converter={StaticResource FindInputEventConverter}, ConverterParameter='UIScroll'}" 
                                     ContentTemplate="{StaticResource ControllerButtonHint}"                                          
                                     Tag="{Binding Source='h29f2b927gf6feg48e8g8bc9gdc391427b51c', Converter={StaticResource TranslatedStringConverter}}" 
                                     BoundEvent="UIScroll"
                                     VerticalAlignment="Center"
                                     EatInput="False"/>
                        
                    </StackPanel>

                    <StackPanel Grid.Row="2" Style="{StaticResource ButtonHint.Container.Left}">
                        
                        <ls:LSButton x:Name="ToSButton" 
                                     Tag="{Binding Source='hfaf35985g4e3ag4c70gb53fg90746142e56a',Converter={StaticResource TranslatedStringConverter}}"
                                     Content="{Binding CurrentPlayer.UIData.InputEvents, Converter={StaticResource FindInputEventConverter}, ConverterParameter='UIMessageBoxX'}" 
                                     ContentTemplate="{StaticResource ControllerButtonHint}"
                                     BoundEvent="UIMessageBoxX"
                                     Command="{Binding OpenURLInBrowserCommand}" 
                                     CommandParameter="https://larian.com/tos/"
                                     Margin="20,0"/>

                        <ls:LSButton x:Name="PrivacyButton" 
                                     Tag="{Binding Source='heac761eegcce8g442ag85ecg8e4afc61d015',Converter={StaticResource TranslatedStringConverter}}" 
                                     Content="{Binding CurrentPlayer.UIData.InputEvents, Converter={StaticResource FindInputEventConverter}, ConverterParameter='UIMessageBoxY'}" 
                                     ContentTemplate="{StaticResource ControllerButtonHint}"
                                     BoundEvent="UIMessageBoxY"
                                     Command="{Binding OpenURLInBrowserCommand}"
                                     CommandParameter="https://larian.com/privacy/"/>
                    </StackPanel>
                </Grid>
            </Border>

            <ControlTemplate.Triggers>
                <DataTrigger Binding="{Binding CommunityType}" Value="PS5NP2">
                    <Setter TargetName="ToSButton" Property="CommandParameter" Value="{Binding Source='h75dc38abgcba8g4954g8bd2g0ed074f2247f', Converter={StaticResource TranslatedStringConverter}}"/>
                    <Setter TargetName="PrivacyButton" Property="CommandParameter" Value="{Binding Source='hb19f5950gb1eag4d1bga4adg97ed024ace53', Converter={StaticResource TranslatedStringConverter}}"/>
                </DataTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </ls:UIWidget.Template>
</ls:UIWidget>