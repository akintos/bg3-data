<ls:UIWidget x:Name="CharacterFullRespec_c"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ls="clr-namespace:ls;assembly=SharedGUI"
    xmlns:System="clr-namespace:System;assembly=mscorlib"
    xmlns:noesis="clr-namespace:NoesisGUIExtensions;assembly=Noesis.GUI.Extensions"
    xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    mc:Ignorable="d"
    d:DesignHeight="2160" d:DesignWidth="3840"
    ls:UIWidget.ContextName="CharacterFullRespec"
    ls:TooltipExtender.Owner="{Binding DummyCharacter}"
    FocusDown="UIDown" FocusLeft="UILeft" FocusRight="UIRight" FocusUp="UIUp" ls:MoveFocus.FocusMovementMode="Closest" CanCacheFocusSurroundingElements="False">

    <ls:UIWidget.Resources>
        <ResourceDictionary>

            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Library/CCLib_c.xaml"/>
            </ResourceDictionary.MergedDictionaries>

        </ResourceDictionary>
    </ls:UIWidget.Resources>

    <b:Interaction.Behaviors>

        <ls:CollectionFilterBehavior x:Name="SubClassProgressions" ItemsSource="{Binding ClassProgressionDetails.Progressions}" Predicate="{Binding IsSubProgressionPredicate}"/>

        <ls:CollectionFilterBehavior x:Name="SubClassSpellSelectors" ItemsSource="{Binding ClassProgressionDetails.SpellSelectors}" Predicate="{Binding IsSubProgressionPredicate}"/>

        <ls:CollectionFilterBehavior x:Name="SubClassPassiveFeatures" ItemsSource="{Binding PassiveFeatures}" Predicate="{Binding IsSubProgressionPredicate}"/>

        <ls:CollectionSortBehavior x:Name="SortedSummarySkills" ItemsSource="{Binding ProgressionData.AllProgressions.Skills}" Comparer="{Binding SkillSortComparer}" />

        <ls:CollectionSortBehavior x:Name="SortedPreparableSpells" ItemsSource="{Binding SpellPrepare.Preparable}" Comparer="{Binding SpellByLevelSortComparer}" />
        <ls:CollectionSortBehavior x:Name="SortedPreparableSpellGroupsByLevel" ItemsSource="{Binding SpellPrepare.PreparableByLevel}" Comparer="{Binding SpellGroupByLevelSortComparer}" />        
        
    </b:Interaction.Behaviors>


    <b:Interaction.Triggers>
        <b:EventTrigger EventName="Loaded">
            <!-- Start with Tooltips enabled -->
            <b:InvokeCommandAction Command="{Binding EnableTooltipOnUIElement}"/>            
        </b:EventTrigger>

        <b:EventTrigger EventName="GotKeyboardFocus">
            <b:InvokeCommandAction Command="{Binding ShowTooltipOnUIElement}" CommandParameter="{Binding Path=FocusedElement, ElementName=CharacterFullRespec_c}"/>
        </b:EventTrigger>
        <b:DataTrigger Binding="{Binding HasInputEnabled, ElementName=CharacterFullRespec_c}" Value="True">
            <b:InvokeCommandAction Command="{Binding ShowTooltipOnUIElement}" CommandParameter="{Binding FocusedElement, ElementName=CharacterFullRespec_c}"/>
        </b:DataTrigger>

    </b:Interaction.Triggers>

    <ls:UIWidget.ContentTemplate>
        <DataTemplate>

            <Grid x:Name="fullRespec" IsEnabled="{Binding IsLocked, Converter={StaticResource InvertBoolConverter}}">

                <Control Template="{StaticResource setOverviewCamera}"/>

                <Grid HorizontalAlignment="Left">

                    <Grid x:Name="leftSideShading" HorizontalAlignment="Left" Width="1712">
                        <Grid.Background>
                            <ImageBrush ImageSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC_c/c_cc_LeftSideShading.png"/>
                        </Grid.Background>
                    </Grid>

                    <Grid x:Name="leftSidePanels" ls:MoveFocus.IsMoveFocusScope="True" Width="1218" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,50,0,0">

                        <ContentControl x:Name="gameplaySubPanel" Content="{Binding .}">
                            <b:Interaction.Triggers>
                                <b:PropertyChangedTrigger Binding="{Binding Path=SelectedIndex, ElementName=gameplayTabs}">
                                    <b:Interaction.Behaviors>
                                        <b:ConditionBehavior>
                                            <b:ConditionalExpression>
                                                <b:ComparisonCondition LeftOperand="{Binding Path=SelectedIndex, ElementName=gameplayTabs}" Operator="NotEqual" RightOperand="-1"/>
                                            </b:ConditionalExpression>
                                        </b:ConditionBehavior>
                                    </b:Interaction.Behaviors>
                                    <!-- clear subtab panel -->
                                    <b:ChangePropertyAction TargetName="gameplaySubPanel" PropertyName="DataContext" Value="{x:Null}"/>
                                </b:PropertyChangedTrigger>
                            </b:Interaction.Triggers>
                        </ContentControl>

                        <Control x:Name="gameplayPanel" Height="{StaticResource gameplayPanelHeight}"/>

                    </Grid>

                    <Grid x:Name="tabNavigation" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="0,0,0,110" Width="{StaticResource gameplaySideWidth}">
                        <StackPanel HorizontalAlignment="Center">
                            <Grid x:Name="dummyMotionKey" Visibility="Collapsed" HorizontalAlignment="Center">
                                <Image Source="{StaticResource CameraActionIndication}" Stretch="None"/>
                                <Image Source="{StaticResource CameraActionStickIcon}" Stretch="None" Margin="0,8,0,0"/>
                            </Grid>

                            <!-- forward navigation only here, back is in bottombuttons -->
                            <ls:LSButton x:Name="nextButton" Style="{StaticResource nextGameplayTabNavButtonStyle}" HorizontalAlignment="Center"/>

                            <ls:LSNineSliceImage x:Name="ventureForthButton" Visibility="Collapsed" Style="{StaticResource PrimaryButton9Slice}" Margin="0,0,0,20" HorizontalAlignment="Center" HorizontalContentAlignment="Center">
                                <ls:LSButton Style="{StaticResource ControllerHoldButtonStyle}" DataContext="{Binding CurrentPlayer.UIData.InputEvents, Converter={StaticResource FindInputEventConverter}, ConverterParameter='UIDelete'}" Tag="{Binding Source='ha7867654g6f71g41ccgbd0bgba956a682293', Converter={StaticResource TranslatedStringConverter}}" EatInput="False" Command="{Binding DataContext.PlayDummyVFX, ElementName=CharacterFullRespec_c}" CommandParameter="VFX_UI_LevelUp_01" Margin="6,0,8,0">
                                    <b:Interaction.Triggers>
                                        <b:EventTrigger EventName="Click" >

                                            <b:ChangePropertyAction TargetName="fullRespec" PropertyName="Visibility" Value="Collapsed" />

                                            <b:InvokeCommandAction Command="{Binding DataContext.SetCameraMode, ElementName=CharacterFullRespec_c}" CommandParameter="Overview"/>

                                        </b:EventTrigger>
                                        <b:TimerTrigger EventName="Click" MillisecondsPerTick="1400" TotalTicks="1">
                                            <b:InvokeCommandAction Command="{Binding DataContext.FinishRespec, ElementName=CharacterFullRespec_c}" CommandParameter="Overview"/>
                                        </b:TimerTrigger>
                                        <b:TimerTrigger EventName="Click" MillisecondsPerTick="2000" TotalTicks="1">
                                            <b:ChangePropertyAction TargetName="fullRespec" PropertyName="Visibility" Value="Visible" />

                                            <b:ChangePropertyAction TargetName="gameplayTabs" PropertyName="SelectedIndex" Value="0" />

                                            <b:InvokeCommandAction Command="{Binding DataContext.SetupGameplayTabNavigation, ElementName=CharacterFullRespec_c}" CommandParameter="{Binding ElementName=gameplayTabs}"/>

                                        </b:TimerTrigger>
                                    </b:Interaction.Triggers>
                                </ls:LSButton>
                            </ls:LSNineSliceImage>

                            <ListBox x:Name="gameplayTabs" Tag="levelup" ItemsPanel="{StaticResource gameplayTabListPanel}" HorizontalAlignment="Center" Margin="0,-20,0,50">
                                <b:Interaction.Triggers>
                                    <b:EventTrigger EventName="Loaded">
                                        <b:InvokeCommandAction Command="{Binding SetupGameplayTabNavigation}" CommandParameter="{Binding ElementName=gameplayTabs}"/>
                                    </b:EventTrigger>
                                </b:Interaction.Triggers>
                                <ListBox.ItemContainerStyle>
                                    <Style TargetType="ListBoxItem">
                                        <Setter Property="Template" Value="{StaticResource gameplayTabTemplate}"/>
                                    </Style>
                                </ListBox.ItemContainerStyle>

                                <ListBoxItem x:Name="subClassTab" Tag="subclass" IsSelected="True"/>

                                <ListBoxItem x:Name="spellPrepTab" Tag="spellprep" Visibility="Collapsed"/>

                            </ListBox>
                        </StackPanel>
                    </Grid>

                </Grid>


                <Grid x:Name="summary" HorizontalAlignment="Right">
                    <Image x:Name="summaryBackground" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/vignette_left.png" Stretch="Fill" Width="1372">
                        <Image.RenderTransform>
                            <ScaleTransform ScaleX="-1" CenterX="686"/>
                        </Image.RenderTransform>
                    </Image>

                    <Grid x:Name="summaryAnimPanel" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,230,34,0">
                        <Grid.RenderTransform>
                            <TranslateTransform X="0"/>
                        </Grid.RenderTransform>

                        <Control x:Name="summaryPanel" IsEnabled="False" ls:MoveFocus.IsMoveFocusScope="True" Template="{StaticResource summaryPanelTemplate}"  HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,70,16,0"/>

                        <ls:LSInputBinding x:Name="backFromFocusedSummary" IsEnabled="{Binding IsEnabled, ElementName=summaryPanel}" BoundEvent="UICancel">
                            <b:Interaction.Triggers>
                                <b:EventTrigger EventName="LSInputBindingReleased" >
                                    <b:ChangePropertyAction TargetName="leftSidePanels" PropertyName="IsEnabled" Value="True" />
                                    <b:ChangePropertyAction TargetName="summaryPanel" PropertyName="IsEnabled" Value="False" />
                                    <b:ChangePropertyAction TargetName="focusSummaryPanelButton" PropertyName="Visibility" Value="Visible" />
                                    <b:ChangePropertyAction TargetName="focusGameplayPanelButton" PropertyName="Visibility" Value="Hidden" />
                                    <b:ChangePropertyAction TargetName="bottomButtons" PropertyName="Template" Value="{StaticResource StandardBottomButtonsTemplate}"/>
                                    <ls:SetMoveFocusAction TargetName="CharacterFullRespec_c" FocusElement="{Binding ElementName=leftSidePanels}"/>
                                    <b:ControlStoryboardAction ControlStoryboardOption="Play" Storyboard="{StaticResource unfocusSummaryPanelStoryboard}"/>
                                </b:EventTrigger>
                            </b:Interaction.Triggers>
                        </ls:LSInputBinding>

                        <ls:LSButton x:Name="focusGameplayPanelButton"
                                     Visibility="Hidden" 
                                     Tag=" " 
                                     ContentTemplate="{StaticResource ControllerButtonHint}"
                                     Content="{Binding CurrentPlayer.UIData.InputEvents, Converter={StaticResource FindInputEventConverter}, ConverterParameter='UITabNext'}"
                                     BoundEvent="UITabNext"
                                     HorizontalAlignment="Right"
                                     VerticalAlignment="Top">
                            <b:Interaction.Triggers>
                                <b:EventTrigger EventName="Click" >
                                    <b:ChangePropertyAction TargetName="leftSidePanels" PropertyName="IsEnabled" Value="True" />
                                    <b:ChangePropertyAction TargetName="summaryPanel" PropertyName="IsEnabled" Value="False" />
                                    <b:ChangePropertyAction TargetName="focusSummaryPanelButton" PropertyName="Visibility" Value="Visible" />
                                    <b:ChangePropertyAction TargetName="focusGameplayPanelButton" PropertyName="Visibility" Value="Hidden" />
                                    <b:ChangePropertyAction TargetName="bottomButtons" PropertyName="Template" Value="{StaticResource StandardBottomButtonsTemplate}"/>
                                    <ls:SetMoveFocusAction TargetName="CharacterFullRespec_c" FocusElement="{Binding ElementName=leftSidePanels}"/>
                                    <b:ControlStoryboardAction ControlStoryboardOption="Play" Storyboard="{StaticResource unfocusSummaryPanelStoryboard}"/>
                                </b:EventTrigger>
                            </b:Interaction.Triggers>
                        </ls:LSButton>

                        <ls:LSButton x:Name="focusSummaryPanelButton" 
                                     Tag=" " 
                                     ContentTemplate="{StaticResource ControllerButtonHint}" 
                                     Content="{Binding CurrentPlayer.UIData.InputEvents, Converter={StaticResource FindInputEventConverter}, ConverterParameter='UITabNext'}"
                                     BoundEvent="UITabNext"
                                     HorizontalAlignment="Right"
                                     VerticalAlignment="Top">
                            <b:Interaction.Triggers>
                                <b:EventTrigger EventName="Click" >
                                    <b:ChangePropertyAction TargetName="leftSidePanels" PropertyName="IsEnabled" Value="False" />
                                    <b:ChangePropertyAction TargetName="summaryPanel" PropertyName="IsEnabled" Value="True" />
                                    <b:ChangePropertyAction TargetName="focusSummaryPanelButton" PropertyName="Visibility" Value="Hidden" />
                                    <b:ChangePropertyAction TargetName="focusGameplayPanelButton" PropertyName="Visibility" Value="Visible" />
                                    <b:ChangePropertyAction TargetName="bottomButtons" PropertyName="Template" Value="{StaticResource SummaryBottomButtonsTemplate}"/>
                                    <ls:SetMoveFocusAction TargetName="CharacterFullRespec_c" FocusElement="{Binding ElementName=summaryPanel}"/>
                                    <b:ControlStoryboardAction ControlStoryboardOption="Play" Storyboard="{StaticResource focusSummaryPanelStoryboard}"/>
                                </b:EventTrigger>
                            </b:Interaction.Triggers>
                        </ls:LSButton>

                    </Grid>
                </Grid>

                <StackPanel  Style="{StaticResource ButtonHint.Container.Right}">
                    <Control x:Name="bottomButtons" Template="{StaticResource StandardBottomButtonsTemplate}"/>
                </StackPanel>

                <ls:LSInputBinding x:Name="PinTooltipBinding" Style="{StaticResource PinTooltipBindingStyle}" EatInput="False"/>

            </Grid>

            <DataTemplate.Triggers>

                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding SpellPrepare.MustPrepareSpells}" Value="True"/>
                        <Condition Binding="{Binding SpellPrepare.Prepared.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True"/>
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="spellPrepTab" Property="Visibility" Value="Visible"/>
                </MultiDataTrigger>
                
                <!-- Split Screen variation -->
                <DataTrigger Binding="{Binding Layout}" Value="Common">
                    <Setter TargetName="leftSidePanels" Property="Margin" Value="200,50,0,0"/>
                    <Setter TargetName="tabNavigation" Property="Margin" Value="0,0,0,0"/>
                </DataTrigger>

                <DataTrigger Binding="{Binding HasNextGameplayTab}" Value="False">
                    <Setter TargetName="nextButton" Property="Visibility" Value="Collapsed"/>
                    <Setter TargetName="ventureForthButton" Property="Visibility" Value="Visible"/>
                </DataTrigger>

                <DataTrigger Binding="{Binding IsRespecComplete}" Value="False">
                    <Setter TargetName="ventureForthButton" Property="IsEnabled" Value="False"/>
                </DataTrigger>

                <DataTrigger Binding="{Binding Layout}" Value="Common">
                    <Setter TargetName="summary" Property="Visibility" Value="Visible"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Tag, ElementName=summary}" Value="ShowIfPossible">
                    <Setter TargetName="summary" Property="Visibility" Value="Visible"/>
                    <Setter TargetName="summary" Property="Tag" Value=""/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Tag, ElementName=summary}" Value="HideIfPossible">
                    <Setter TargetName="summary" Property="Visibility" Value="Collapsed"/>
                    <Setter TargetName="summary" Property="Tag" Value=""/>
                </DataTrigger>

                <!--
                Gameplay Panel Content 
                -->

                <DataTrigger Binding="{Binding ElementName=gameplayTabs, Path=SelectedItem.Tag}" Value="subclass">
                    <Setter TargetName="gameplayPanel" Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Control Template="{StaticResource subClassPanelTemplate}">
                                    <b:Interaction.Triggers>
                                        <b:EventTrigger EventName="Loaded">
                                            <ls:SetMoveFocusAction TargetName="CharacterFullRespec_c"/>
                                        </b:EventTrigger>
                                    </b:Interaction.Triggers>
                                </Control>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>

                <DataTrigger Binding="{Binding ElementName=gameplayTabs, Path=SelectedItem.Tag}" Value="spellprep">
                    <Setter TargetName="gameplayPanel" Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Control Template="{StaticResource spellPrepTemplate}">
                                    <b:Interaction.Triggers>
                                        <b:EventTrigger EventName="Loaded">
                                            <ls:SetMoveFocusAction TargetName="CharacterFullRespec_c"/>
                                        </b:EventTrigger>
                                    </b:Interaction.Triggers>
                                </Control>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>                
            </DataTemplate.Triggers>

        </DataTemplate>
    </ls:UIWidget.ContentTemplate>

</ls:UIWidget>