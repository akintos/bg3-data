<ls:UIWidget ls:UIWidget.ContextName="HDRCalibration"
             x:Name="HDRCalibration_c"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:ls="clr-namespace:ls;assembly=SharedGUI"
             xmlns:noesis="clr-namespace:NoesisGUIExtensions;assembly=Noesis.GUI.Extensions"
             xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
    		 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
			 mc:Ignorable="d"
             d:DesignWidth="3840" d:DesignHeight="2160"
             FocusDown="UIDown" FocusUp="UIUp"
             ls:UIWidget.Focusable="False">

    <ls:UIWidget.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Library/OptionTemplates_c.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <ControlTemplate x:Key="controllerBottomBtns">
                <StackPanel x:Name="ControllerHints" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0">
                    <ls:LSButton x:Name="ConfirmHDR" Style="{StaticResource ControllerButton}"
                                 DataContext="{Binding CurrentPlayer.UIData.InputEvents, Converter={StaticResource FindInputEventConverter}, ConverterParameter='UIAccept'}"
                                 Content="{Binding Source='hb625919egaa48g48aegbdd8g99a9c590323e',Converter={StaticResource TranslatedStringConverter}}" 
                                 Command="{Binding DataContext.CustomEvent, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}"
                                 CommandParameter="CloseWidget"
                                 Visibility="Collapsed"
                                 SoundID="UI_Shared_Cancel" Margin="20,0"/>
                    <ls:LSButton x:Name="NextPhase" Style="{StaticResource ControllerButton}"
                                 DataContext="{Binding CurrentPlayer.UIData.InputEvents, Converter={StaticResource FindInputEventConverter}, ConverterParameter='UIAccept'}"
                                 Content="{Binding Source='h1c1625b0gb1dcg4544gb7f3ga805c2bdb198',Converter={StaticResource TranslatedStringConverter}}" 
                                 Command="{Binding DataContext.ChangePhaseCommand.ActionCommand, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}"
                                 Visibility="Visible"
                                 SoundID="UI_Shared_Cancel" Margin="20,0"/>

                    <ls:LSButton x:Name="Cancel" Style="{StaticResource ControllerButton}"
                         DataContext="{Binding CurrentPlayer.UIData.InputEvents, Converter={StaticResource FindInputEventConverter}, ConverterParameter='UICancel'}"
                         Content="{Binding Source='h675a55aegd07cg4ab0g862dg0c564197d478',Converter={StaticResource TranslatedStringConverter}}" 
                         Command="{Binding DataContext.CancelCommand.ActionCommand, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}"
                         Visibility="Visible"
                         SoundID="UI_Shared_Cancel" Margin="20,0"/>
                </StackPanel>
                <ControlTemplate.Triggers>
                    <DataTrigger Binding="{Binding CanCancel}" Value="False">
                        <Setter TargetName="ConfirmHDR" Property="Visibility" Value="Visible"/>
                        <Setter TargetName="NextPhase" Property="Visibility" Value="Collapsed"/>
                        <Setter TargetName="Cancel" Property="Visibility" Value="Collapsed"/>
                    </DataTrigger>

                    <DataTrigger Binding="{Binding Phase}" Value="2">
                        <Setter TargetName="ConfirmHDR" Property="Visibility" Value="Visible"/>
                        <Setter TargetName="NextPhase" Property="Visibility" Value="Collapsed"/>
                        <Setter TargetName="Cancel" Property="Visibility" Value="Visible"/>
                    </DataTrigger>

                    <!-- Temp workaround, cannot go back during first time setup (should be one screen later)-->
                    <DataTrigger Binding="{Binding ShowFirstTimeSetup}" Value="True">
                        <Setter TargetName="ConfirmHDR" Property="CommandParameter" Value="OpenSplashScreen"/>
                        <Setter TargetName="Cancel" Property="Visibility" Value="Collapsed"/>
                    </DataTrigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <ControlTemplate x:Key="PhaseOne">
                <ControlTemplate.Resources>
                    <BitmapImage x:Key="Header" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/Dialogue/dialogue_history_header.png"/>
                </ControlTemplate.Resources>
                
                <Grid x:Name="GridRoot">
                    <b:Interaction.Triggers>
                        <b:EventTrigger EventName="Loaded">
                            <ls:SetMoveFocusAction TargetName="HDRCalibration_c" FocusElement="{Binding ElementName=BrightnessSlider}"/>
                        </b:EventTrigger>
                    </b:Interaction.Triggers>
                    <Grid x:Name="BlackLinesHolder">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="1000"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="1000"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Rectangle Fill="Black" noesis:Element.PPAAMode="Disabled" Grid.Row="0" Grid.Column="0" />
                        <Rectangle Fill="Black" noesis:Element.PPAAMode="Disabled" Grid.Row="0" Grid.Column="1" />
                        <Rectangle Fill="Black" noesis:Element.PPAAMode="Disabled" Grid.Row="0" Grid.Column="2" />
                        <Rectangle Fill="Black" noesis:Element.PPAAMode="Disabled" Grid.Row="1" Grid.Column="0" />
                        <Rectangle Fill="Black" noesis:Element.PPAAMode="Disabled" Grid.Row="1" Grid.Column="2" />
                        <Rectangle Fill="Black" noesis:Element.PPAAMode="Disabled" Grid.Row="2" Grid.Column="0" />
                        <Rectangle Fill="Black" noesis:Element.PPAAMode="Disabled" Grid.Row="2" Grid.Column="1" />
                        <Rectangle Fill="Black" noesis:Element.PPAAMode="Disabled" Grid.Row="2" Grid.Column="2" />
                    </Grid>

                    <Grid MaxWidth="{StaticResource DesignedContentMaxWidth}">

                        <Grid.RowDefinitions>
                            <RowDefinition Height="200"/>
                            <RowDefinition/>
                            <RowDefinition Height="220"/>
                        </Grid.RowDefinitions>

                        <Image Source="{StaticResource Header}" Grid.Row="0" VerticalAlignment="Center"/>

                        <TextBlock Grid.Row="0" Text="{Binding Source='h681296bdg5eb7g4d66g800bg3e985ebeee6a',Converter={StaticResource TranslatedStringConverter}}" TextAlignment="Center" VerticalAlignment="Center"
                                            FontSize="{StaticResource ScaledMassiveFontSize}" Foreground="{StaticResource LS_PrimaryColor}"/>

                        <StackPanel Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Bottom">

                            <TextBlock Text="{Binding Source='h07838f7cg2f0cg42f1g9fa3g80fc766c714d',Converter={StaticResource TranslatedStringConverter}}"
                                             TextAlignment="Center" VerticalAlignment="Bottom" TextWrapping="Wrap" Margin="0 0 0 60"
                                             FontSize="{StaticResource ScaledDefaultFontSize}" Foreground="{StaticResource LS_accent75TxtColor}"/>

                            <ls:LSSlider x:Name="BrightnessSlider"
                                         DataContext="{Binding Brightness}"
                                         Template="{StaticResource CalibrationSliderTemplate}"
                                         StepSoundID="UI_Controller_DefaultSlider"
                                         ls:MoveFocus.Focusable="True" 
                                         Focusable="True"
                                         Value="{Binding Value}"
                                         Minimum="{Binding Min}"
                                         Maximum="{Binding Max}"
                                         IsSnapToTickEnabled="False"
                                         SmallChange="{Binding Max, Converter={StaticResource DivideAndRoundConverter}, ConverterParameter='40'}"
                                         LargeChange="{Binding Max, Converter={StaticResource DivideAndRoundConverter}, ConverterParameter='10'}"
                                         IsEnabled="{Binding Enabled}"/>

                        </StackPanel>
                        <Control x:Name="bottomBtns" Grid.Row="2" Template="{StaticResource controllerBottomBtns}"/>
                    </Grid>
                </Grid>
            </ControlTemplate>

            <ControlTemplate x:Key="PhaseTwo">
                <ControlTemplate.Resources>
                    <BitmapImage x:Key="FooterFade" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/DMSettings/fade_footer.png" />
                    <BitmapImage x:Key="Header" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/Dialogue/dialogue_history_header.png"/>
                    <BitmapImage x:Key="OptionFrameTop" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/Messagebox_c/c_dialogAlt_bg.png" />
                    <BitmapImage x:Key="ActiveSelection" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/c_listItem_narrow_centered.png" />
                </ControlTemplate.Resources>
                
                <Grid Width="3840" Height="2160" Background="Transparent">
                    <b:Interaction.Triggers>
                        <b:EventTrigger EventName="Loaded">
                            <ls:SetMoveFocusAction TargetName="HDRCalibration_c" FocusElement="{Binding ElementName=paperWhiteSlider}"/>
                        </b:EventTrigger>
                    </b:Interaction.Triggers>
                    <Grid.RowDefinitions>
                            <RowDefinition Height="200"/>
                            <RowDefinition/>
                            <RowDefinition Height="220"/>
                        </Grid.RowDefinitions>

                    <Image Source="{StaticResource Header}" Grid.Row="0" VerticalAlignment="Center"/>

                    <TextBlock Grid.Row="0" Text="{Binding Source='h681296bdg5eb7g4d66g800bg3e985ebeee6a',Converter={StaticResource TranslatedStringConverter}}" TextAlignment="Center" VerticalAlignment="Center"
                                            FontSize="{StaticResource ScaledMassiveFontSize}" Foreground="{StaticResource LS_PrimaryColor}" Effect="{StaticResource HUD.DropShadow}"/>

                    <Image Grid.Row="1" Grid.RowSpan="2" Source="{StaticResource FooterFade}" Width="4000" Height="1200" Stretch="Fill" VerticalAlignment="Bottom" HorizontalAlignment="Center"/>
                    <ls:LSNineSliceImage Grid.Row="1" ImageSource="{StaticResource OptionFrameTop}" Slices="0,56,0,240" IconWidth="360" Padding="0,92,0,252" VerticalAlignment="Bottom" HorizontalAlignment="Center"  Width="1800" Margin="12,0,0,-140">
                        <Grid HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0 20 0 20">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <TextBlock Grid.Row="0" Text="{Binding Source='ha586ac26gf499g4b3cg82bcga41f1529e916',Converter={StaticResource TranslatedStringConverter}}"
                                     TextAlignment="Center" VerticalAlignment="Bottom" TextWrapping="Wrap" Margin="0 0 0 40"
                                     FontSize="{StaticResource ScaledDefaultFontSize}" Foreground="{StaticResource LS_accent100TxtColor}" Effect="{StaticResource HUD.DropShadow}" />


                            <Grid Grid.Row="1" Height="96" HorizontalAlignment="Center" Margin="0 0 0 20">
                                <ls:LSNineSliceImage x:Name="PaperSelection" ImageSource="{StaticResource ActiveSelection}" Slices="0,16" Margin="0 -10 0 -10" HorizontalAlignment="Center" Visibility="Collapsed" Width="1200"/>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding Source='he9b28729gfca1g4890g90a3g0f09554135f1',Converter={StaticResource TranslatedStringConverter}}"
                                               TextAlignment="Right"
                                               VerticalAlignment="Center"
                                               Width="350"
                                               Margin="0 0 20 0"
                                               FontSize="{StaticResource DefaultFontSize}"
                                               Foreground="{StaticResource LS_accent100TxtColor}"
                                               Effect="{StaticResource HUD.DropShadow}"/>


                                   <ls:LSSlider x:Name="paperWhiteSlider" 
                                                DataContext="{Binding Paperwhite}" 
                                                ls:MoveFocus.Focusable="True" 
                                                Focusable="True"
                                                Template="{StaticResource CalibrationSliderTemplate}"
                                                Value="{Binding Value}"
                                                Minimum="{Binding Min}"
                                                Maximum="{Binding Max}"
                                                IsSnapToTickEnabled="False"
                                                SmallChange="{Binding Max, Converter={StaticResource DivideAndRoundConverter}, ConverterParameter='40'}"
                                                LargeChange="{Binding Max, Converter={StaticResource DivideAndRoundConverter}, ConverterParameter='10'}"
                                                IsEnabled="{Binding Enabled}"
                                                StepSoundID="UI_Controller_DefaultSlider"/>

                                    <TextBlock Text="{Binding Paperwhite.Value,StringFormat=N0}" 
                                               TextAlignment="Left" 
                                               VerticalAlignment="Center" 
                                               Width="350" 
                                               Margin="20 0 0 0"
                                               FontSize="{StaticResource DefaultFontSize}"
                                               Foreground="{StaticResource LS_accent100TxtColor}"
                                               Effect="{StaticResource HUD.DropShadow}"/>
                                </StackPanel>
                            </Grid>

                            <Grid Height="96" Grid.Row="2" HorizontalAlignment="Center" Margin="0 20 0 0">
                                <ls:LSNineSliceImage x:Name="ContrastSelection" ImageSource="{StaticResource ActiveSelection}" Slices="0,16" Margin="0 -10 0 -10" HorizontalAlignment="Center" Visibility="Collapsed" Width="1200"/>
                                <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="{Binding Contrast.Text}" TextAlignment="Right" VerticalAlignment="Center" Width="350" Margin="0 0 20 0"
                                    FontSize="{StaticResource DefaultFontSize}" Foreground="{StaticResource LS_accent100TxtColor}" Effect="{StaticResource HUD.DropShadow}"/>

                                    <ls:LSSlider x:Name="contrastSlider"
                                                 DataContext="{Binding Contrast}" 
                                                 ls:MoveFocus.Focusable="True" 
                                                 Focusable="True"
                                                 Template="{StaticResource CalibrationSliderTemplate}"
                                                 Value="{Binding Value}"
                                                 Minimum="{Binding Min}"
                                                 Maximum="{Binding Max}"
                                                 IsSnapToTickEnabled="False"
                                                 SmallChange="0.05"
                                                 LargeChange="0.1"
                                                 IsEnabled="{Binding Enabled}"
                                                 StepSoundID="UI_Controller_DefaultSlider"/>
                                        <TextBlock Text="{Binding Contrast.Value,StringFormat=N2}" TextAlignment="Left" VerticalAlignment="Center" Width="350" Margin="20 0 0 0"
                                    FontSize="{StaticResource DefaultFontSize}" Foreground="{StaticResource LS_accent100TxtColor}" Effect="{StaticResource HUD.DropShadow}"/>
                                </StackPanel>

                            </Grid>
                            
                        </Grid>
                    </ls:LSNineSliceImage>
                    <Control x:Name="bottomBtns" Grid.Row="2" Template="{StaticResource controllerBottomBtns}"/>

                </Grid>
                <ControlTemplate.Triggers>
                    <DataTrigger Binding="{Binding Path=(ls:MoveFocus.IsFocused), ElementName=paperWhiteSlider}" Value="True">
                        <Setter TargetName="PaperSelection" Property="Visibility" Value="Visible" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=(ls:MoveFocus.IsFocused), ElementName=contrastSlider}" Value="True">
                        <Setter TargetName="ContrastSelection" Property="Visibility" Value="Visible" />
                    </DataTrigger>
                </ControlTemplate.Triggers>

            </ControlTemplate>
        </ResourceDictionary>

    </ls:UIWidget.Resources>

    <ContentControl>
        <ContentControl.Style>
            <Style TargetType="ContentControl">
                <Setter Property="Template" Value="{StaticResource PhaseOne}"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Phase}" Value="2">
                        <Setter Property="Template" Value="{StaticResource PhaseTwo}"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </ContentControl.Style>
    </ContentControl>
</ls:UIWidget>