<ls:UIWidget x:Name="RestPanel_c"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:ls="clr-namespace:ls;assembly=SharedGUI"
             xmlns:noesis="clr-namespace:NoesisGUIExtensions;assembly=Noesis.GUI.Extensions"
			 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:System="clr-namespace:System;assembly=mscorlib"
             Template="{StaticResource Hud.Root}"
			 mc:Ignorable="d"
             d:DataContext="{d:DesignInstance {x:Type ls:DCWidget}, IsDesignTimeCreatable=True}"
             d:DesignHeight="2160" d:DesignWidth="3840">

    <b:Interaction.Triggers>
        <b:EventTrigger EventName="Loaded">
            <!-- Tutorial UI Event - Rest Menu Opened-->
            <b:InvokeCommandAction Command="{Binding TutorialEvent}" CommandParameter="394c5454-28a2-433d-9dca-02a663e93cd1"/>
            <ls:LSPlaySound Sound="UI_HUD_Controller_RestMenu_Open" />
        </b:EventTrigger>
        <b:EventTrigger EventName="Unloaded">
            <ls:LSPlaySound Sound="UI_HUD_Controller_RestMenu_Close" />
        </b:EventTrigger>
    </b:Interaction.Triggers>

    <ls:UIWidget.ContentTemplate>
        <DataTemplate>
            <DataTemplate.Resources>
                <BitmapImage x:Key="RestMenuBackground" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/RestMenu/c_restMenu_BG.png"/>
                <BitmapImage x:Key="OptionBackground" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/c_list_buttonBG_general.png"/>
                <BitmapImage x:Key="IconBackground" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/RestMenu/c_ico_restMenu_button_d.png"/>
                <BitmapImage x:Key="ShortRestIconDefault" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/RestMenu/c_ico_shortRest_d.png"/>
                <BitmapImage x:Key="SelectedItem0" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/c_list_buttonBG_h.png"/>
                <BitmapImage x:Key="SelectedItem1" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/c_list_buttonBG_h1.png"/>
                <BitmapImage x:Key="SelectedItem2" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/c_list_buttonBG_h2.png"/>

                <Thickness x:Key="BackgroundSlices">150,50,150,50</Thickness>
                <Thickness x:Key="SelectorSlices">48,72,48,72</Thickness>

                <Storyboard x:Key="SelectStoryboard" RepeatBehavior="Forever" AutoReverse="True">
                    <DoubleAnimation Storyboard.TargetName="Image1" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:6"/>
                    <DoubleAnimation Storyboard.TargetName="Image2" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:6"/>
                </Storyboard>

                <ControlTemplate x:Key="RestOptionsListTemplate" TargetType="{x:Type ListBox}">
                    <StackPanel>
                        <StackPanel Orientation="Vertical">
                            <ls:LSButton x:Name="prevButton" BoundEvent="UIUp" Command="{Binding DataContext.PrevItemLooped, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="{Binding ElementName=RestOptionsList}"/>
                            <ls:LSButton x:Name="nextButton" BoundEvent="UIDown" Command="{Binding DataContext.NextItemLooped, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="{Binding ElementName=RestOptionsList}"/>
                        </StackPanel>
                        <ItemsPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </StackPanel>
                </ControlTemplate>
                
                <ControlTemplate x:Key="RestPanelTemplate" TargetType="Control">
                    <ls:LSNineSliceImage x:Name="bg" ImageSource="{StaticResource RestMenuBackground}" Slices="{StaticResource SelectorSlices}" VerticalAlignment="Center" Height="1000" Width="1600">
                        <StackPanel Orientation="Vertical" VerticalAlignment="Center">

                            <Grid Height="900">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <ListBox x:Name="RestOptionsList" HorizontalAlignment="Left" SelectedIndex="0" SelectionMode="Single" KeyboardNavigation.DirectionalNavigation="Cycle"
                                         Template="{StaticResource RestOptionsListTemplate}" Margin="100,50,0,0" Grid.Column="0">
                                    <ListBox.ItemContainerStyle>
                                        <Style TargetType="{x:Type ListBoxItem}">
                                            <Setter Property="Margin" Value="0,10"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                        <Grid Height="150" Width="650" HorizontalAlignment="Left">
                                                            <Image VerticalAlignment="Center" HorizontalAlignment="Left" Source="{StaticResource IconBackground}" Margin="25,0" Width="120"/>
                                                            <Image x:Name="ImageContent" VerticalAlignment="Center" HorizontalAlignment="Left" Source="{StaticResource ShortRestIconDefault}"
                                                                   Margin="45,0" Width="75" Tag="{Binding Tag, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                                            <ls:LSNineSliceImage x:Name="OptionImageBackground" ImageSource="{StaticResource OptionBackground}" Slices="{StaticResource BackgroundSlices}" Width="650" Height="148"/>

                                                            <ls:LSNineSliceImage x:Name="OptionBackgroundHighlight" ImageSource="{StaticResource SelectedItem0}" Width="646" Height="140" Margin="0,4"
                                                                                 Visibility="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}, Converter={StaticResource BoolToVisibleConverter}}"/>
                                                            <ls:LSNineSliceImage x:Name="Image1" ImageSource="{StaticResource SelectedItem1}" Slices="{StaticResource SelectorSlices}" Width="686" Height="182" Margin="-20,-16" Opacity="1"
                                                                                 Visibility="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}, Converter={StaticResource BoolToVisibleConverter}}"/>
                                                            <ls:LSNineSliceImage x:Name="Image2" ImageSource="{StaticResource SelectedItem2}" Slices="{StaticResource SelectorSlices}" Width="686" Height="182" Margin="-20,-16" Opacity="0"
                                                                                 Visibility="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}, Converter={StaticResource BoolToVisibleConverter}}"/>

                                                            <Grid x:Name="DotsPanel" Visibility="Collapsed" HorizontalAlignment="Left" Margin="57,0,0,-70">
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="Auto"/>
                                                                    <ColumnDefinition Width="Auto"/>
                                                                </Grid.ColumnDefinitions>
                                                                <Image x:Name="Dot1Background" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/RestMenu/c_shortRestIndicator_bg.png" Grid.Column="0" Width="26"/>
                                                                <Image x:Name="Dot1" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/RestMenu/c_shortRestIndicator_dot.png" Grid.Column="0" Width="22"/>
                                                                <Image x:Name="Dot2Background" Margin="3,0" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/RestMenu/c_shortRestIndicator_bg.png" Grid.Column="1" Width="26"/>
                                                                <Image x:Name="Dot2" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/RestMenu/c_shortRestIndicator_dot.png" Grid.Column="1" Width="22"/>
                                                            </Grid>

                                                            <TextBlock x:Name="PageName" VerticalAlignment="Center" Text="{Binding Content, RelativeSource={RelativeSource Mode=TemplatedParent}}" Foreground="{StaticResource LS_accent00TxtColor}"
                                                                       FontSize="{StaticResource DefaultFontSize}" Margin="170,0"/>
                                                        </Grid>

                                                        <ControlTemplate.Triggers>
                                                            <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                                                                <BeginStoryboard x:Name="HighlightSelectionOnLoad" Storyboard="{StaticResource SelectStoryboard}"/>
                                                            </EventTrigger>
                                                            <EventTrigger RoutedEvent="Selected">
                                                                <BeginStoryboard x:Name="HighlightSelection" Storyboard="{StaticResource SelectStoryboard}"/>
                                                            </EventTrigger>
                                                            <EventTrigger RoutedEvent="Unselected">
                                                                <StopStoryboard BeginStoryboardName="HighlightSelection"/>
                                                                <StopStoryboard BeginStoryboardName="HighlightSelectionOnLoad"/>
                                                            </EventTrigger>
                                                            <Trigger Property="IsSelected" Value="True">
                                                                <Setter TargetName="PageName" Property="Foreground" Value="{StaticResource LS_accent100TxtColor}"/>
                                                            </Trigger>
                                                            <Trigger Property="Tag" SourceName="ImageContent" Value="ShortRest">
                                                                <Setter TargetName="ImageContent" Property="Margin" Value="45,-30,0,0"/>
                                                                <Setter TargetName="DotsPanel" Property="Visibility" Value="Visible"/>
                                                            </Trigger>
                                                            <Trigger Property="Tag" SourceName="ImageContent" Value="LongRest">
                                                                <Setter TargetName="ImageContent" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/RestMenu/c_ico_longRest_d.png"/>
                                                                <Setter TargetName="ImageContent" Property="Margin" Value="49,4,0,0"/>
                                                            </Trigger>
                                                            <Trigger Property="Tag" SourceName="ImageContent" Value="FastTravel">
                                                                <Setter TargetName="ImageContent" Property="Visibility" Value="Collapsed"/>
                                                            </Trigger>
                                                            <Trigger Property="Tag" SourceName="ImageContent" Value="Camp">
                                                                <Setter TargetName="ImageContent" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/RestMenu/c_ico_gotoCamp_d.png"/>
                                                                <Setter TargetName="ImageContent" Property="Margin" Value="47,8,0,0"/>
                                                            </Trigger>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="IsSelected" Value="True"/>
                                                                    <Condition Property="Tag" SourceName="ImageContent" Value="ShortRest"/>
                                                                </MultiTrigger.Conditions>
                                                                <MultiTrigger.Setters>
                                                                    <Setter TargetName="ImageContent" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/RestMenu/c_ico_shortRest_h.png"/>
                                                                </MultiTrigger.Setters>
                                                            </MultiTrigger>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="IsSelected" Value="True"/>
                                                                    <Condition Property="Tag" SourceName="ImageContent" Value="LongRest"/>
                                                                </MultiTrigger.Conditions>
                                                                <MultiTrigger.Setters>
                                                                    <Setter TargetName="ImageContent" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/RestMenu/c_ico_longRest_h.png"/>
                                                                </MultiTrigger.Setters>
                                                            </MultiTrigger>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="IsSelected" Value="True"/>
                                                                    <Condition Property="Tag" SourceName="ImageContent" Value="Camp"/>
                                                                </MultiTrigger.Conditions>
                                                                <MultiTrigger.Setters>
                                                                    <Setter TargetName="ImageContent" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/RestMenu/c_ico_gotoCamp_h.png"/>
                                                                </MultiTrigger.Setters>
                                                            </MultiTrigger>

                                                            <DataTrigger Binding="{Binding CurrentPlayer.SelectedCharacter.Stats.ShortRestPointsResource.Value}" Value="0">
                                                                <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/RestMenu/c_shortRestIndicator_dot_disabled.png" TargetName="Dot1"/>
                                                                <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/RestMenu/c_shortRestIndicator_dot_disabled.png" TargetName="Dot2"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding CurrentPlayer.SelectedCharacter.Stats.ShortRestPointsResource.Value}" Value="1">
                                                                <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/RestMenu/c_shortRestIndicator_dot.png" TargetName="Dot1"/>
                                                                <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/RestMenu/c_shortRestIndicator_dot_disabled.png" TargetName="Dot2"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding CurrentPlayer.SelectedCharacter.Stats.ShortRestPointsResource.Value}" Value="2">
                                                                <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/RestMenu/c_shortRestIndicator_dot.png" TargetName="Dot1"/>
                                                                <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/RestMenu/c_shortRestIndicator_dot.png" TargetName="Dot2"/>
                                                            </DataTrigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ListBox.ItemContainerStyle>

                                    <ListBoxItem x:Name="CampItem" Content="{Binding Source='hc7281314gd545g490fgbfc8g1be95db0df3b', Converter={StaticResource TranslatedStringConverter}}" Tag="Camp"/>
                                    <ListBoxItem x:Name="ShortRestItem" Tag="ShortRest">
                                        <ListBoxItem.Content>
                                            <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                                <Binding Source="hb2199417g5510g4f9eg98a8ga71af294a3dd"/>
                                                <Binding Path="CurrentPlayer.SelectedCharacter.Stats.ShortRestPointsResource.Value"/>
                                                <Binding Path="CurrentPlayer.SelectedCharacter.Stats.ShortRestPointsResource.MaxValue"/>
                                            </MultiBinding>
                                        </ListBoxItem.Content>
                                    </ListBoxItem>
                                    <ListBoxItem x:Name="LongRestItem" Content="{Binding Source='h05335aecg62a0g4ba3g99bagb551af262607', Converter={StaticResource TranslatedStringConverter}}" Tag="LongRest"/>
                                    <ListBoxItem x:Name="FastTravelItem" Content="{Binding Source='he4fcb501g60f0g4761g9d3cg0105ebca9945', Converter={StaticResource TranslatedStringConverter}}" Tag="FastTravel"/>
                                </ListBox>

                                <StackPanel Orientation="Vertical" Grid.Column="1" Margin="100, 100">
                                    <TextBlock x:Name="OptionDescription" ls:TextBlockFormatter.SourceText="{Binding Source='h88080156g3464g4b9aga67dge442c2664bdb', Converter={StaticResource TranslatedStringConverter}}"
                                               Style="{StaticResource TooltipBaseTextStyle}" Width="600" TextAlignment="Left"/>
                                    <TextBlock x:Name="OptionWarning" Margin="0,50" TextWrapping="Wrap" Height="150" Foreground="{StaticResource LS_alertTxtColor}" Width="550" TextAlignment="Center"
                                               Visibility="{Binding Text, Converter={StaticResource StringToVisibilityConverter}}"/>
                                </StackPanel>
                            </Grid>

                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,-80,0,50">
                                <ls:LSButton x:Name="AcceptButton" Style="{StaticResource ControllerButton}" DataContext="{Binding DataContext.CurrentPlayer.UIData.InputEvents, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}},
                                             Converter={StaticResource FindInputEventConverter}, ConverterParameter='UIAccept'}" SoundID="UI_Shared_Accept"
                                             Content="{Binding Source='h04f38549g65b8g4b72g834eg87ee8863fdc5',Converter={StaticResource TranslatedStringConverter}}">
                                    <b:Interaction.Triggers>
                                        <b:EventTrigger EventName="LSButtonPressed">
                                            <b:InvokeCommandAction Command="{Binding DataContext.CustomEvent, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}"
                                                                   CommandParameter="CloseWidget"/>
                                        </b:EventTrigger>
                                    </b:Interaction.Triggers>
                                </ls:LSButton>
                                <ls:LSButton Style="{StaticResource ControllerButton}" DataContext="{Binding CurrentPlayer.UIData.InputEvents, Converter={StaticResource FindInputEventConverter}, ConverterParameter='UICancel'}" 
                                             Content="{Binding Source='h01d5c470g61bfg498cgb17eg7be425444fa5',Converter={StaticResource TranslatedStringConverter}}" SoundID="UI_Shared_Cancel" 
                                             Command="{Binding DataContext.CustomEvent, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="CloseWidget"/>
                            </StackPanel>
                        </StackPanel>
                    </ls:LSNineSliceImage>

                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding SelectedItem.Tag, ElementName=RestOptionsList}" Value="ShortRest">
                            <Setter TargetName="AcceptButton" Property="Command" Value="{Binding DataContext.ShortRest, RelativeSource={RelativeSource AncestorType=ls:UIWidget}}"/>
                            <Setter TargetName="AcceptButton" Property="IsEnabled" Value="{Binding DataContext.CurrentPlayer.SelectedCharacter.IsShortRestAvailable, RelativeSource={RelativeSource AncestorType=ls:UIWidget}}"/>
                            <Setter TargetName="OptionDescription" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h179c7064g4eccg43c0gb380g396b345cb8a8', Converter={StaticResource TranslatedStringConverter}}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding SelectedItem.Tag, ElementName=RestOptionsList}" Value="LongRest">
                            <Setter TargetName="AcceptButton" Property="Command" Value="{Binding DataContext.CampTravel, RelativeSource={RelativeSource AncestorType=ls:UIWidget}}"/>
                            <Setter TargetName="OptionDescription" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hd7dd3a4dg6f68g4c71ga914ga448e57fc690', Converter={StaticResource TranslatedStringConverter}}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding SelectedItem.Tag, ElementName=RestOptionsList}" Value="Camp">
                            <Setter TargetName="AcceptButton" Property="Command" Value="{Binding DataContext.GoToCamp, RelativeSource={RelativeSource AncestorType=ls:UIWidget}}"/>
                            <Setter TargetName="OptionDescription" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h88080156g3464g4b9aga67dge442c2664bdb', Converter={StaticResource TranslatedStringConverter}}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding SelectedItem.Tag, ElementName=RestOptionsList}" Value="FastTravel">
                            <Setter TargetName="AcceptButton" Property="Command" Value="{Binding DataContext.CustomEvent, RelativeSource={RelativeSource AncestorType=ls:UIWidget}}"/>
                            <Setter TargetName="AcceptButton" Property="CommandParameter" Value="ToggleWaypoints"/>
                            <Setter TargetName="OptionDescription" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h3bea88f3g5d42g43bfg9f07g7756c032c477', Converter={StaticResource TranslatedStringConverter}}"/>
                        </DataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding SelectedItem.Tag, ElementName=RestOptionsList}" Value="LongRest"/>
                                <Condition Binding="{Binding DataContext.CurrentPlayer.EndTheDayState, RelativeSource={RelativeSource AncestorType=ls:UIWidget}}" Value="Disabled"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter TargetName="AcceptButton" Property="IsEnabled" Value="False"/>
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding SelectedItem.Tag, ElementName=RestOptionsList}" Value="LongRest"/>
                                <Condition Binding="{Binding DataContext.CurrentPlayer.EndTheDayState, RelativeSource={RelativeSource AncestorType=ls:UIWidget}}" Value="Unavailable"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter TargetName="AcceptButton" Property="IsEnabled" Value="False"/>
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding SelectedItem.Tag, ElementName=RestOptionsList}" Value="FastTravel"/>
                                <Condition Binding="{Binding DataContext.CurrentPlayer.TravelError, RelativeSource={RelativeSource AncestorType=ls:UIWidget}}" Value="None"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter TargetName="AcceptButton" Property="IsEnabled" Value="True"/>
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>

                        <DataTrigger Binding="{Binding DataContext.CurrentPlayer.SelectedCharacter.IsInCamp, RelativeSource={RelativeSource AncestorType=ls:UIWidget}}" Value="True">
                            <Setter TargetName="CampItem" Property="Content" Value="{Binding Source='h2f70e122gdef6g4846g94e6ga12347e4ec83', Converter={StaticResource TranslatedStringConverter}}"/>
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding SelectedItem.Tag, ElementName=RestOptionsList}" Value="Camp"/>
                                <Condition Binding="{Binding DataContext.CurrentPlayer.SelectedCharacter.IsInCamp, RelativeSource={RelativeSource AncestorType=ls:UIWidget}}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter TargetName="OptionDescription" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hc24e6389g1fd1g45c0gb088g36fc75f12d70', Converter={StaticResource TranslatedStringConverter}}"/>
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>

                        <DataTrigger Binding="{Binding CurrentPlayer.TravelError}" Value="Combat">
                            <Setter TargetName="AcceptButton" Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding SelectedItem.Tag, ElementName=RestOptionsList}" Value="ShortRest"/>
                                <Condition Binding="{Binding CurrentPlayer.TravelError}" Value="Combat"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter TargetName="OptionWarning" Property="Text" Value="{Binding Source='hda3c74deg0719g41f5g8233gecf8b5c7c812', Converter={StaticResource TranslatedStringConverter}, ConverterParameter='Loca'}"/>
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding SelectedItem.Tag, ElementName=RestOptionsList}" Value="LongRest"/>
                                <Condition Binding="{Binding CurrentPlayer.TravelError}" Value="Combat"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter TargetName="OptionWarning" Property="Text" Value="{Binding Source='hda3c74deg0719g41f5g8233gecf8b5c7c812', Converter={StaticResource TranslatedStringConverter}, ConverterParameter='Loca'}"/>
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding SelectedItem.Tag, ElementName=RestOptionsList}" Value="Camp"/>
                                <Condition Binding="{Binding DataContext.CurrentPlayer.IsAtNightCamp, RelativeSource={RelativeSource AncestorType=ls:UIWidget}}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter TargetName="OptionWarning" Property="Text"  Value="{Binding Source='hd7643be9gca62g4631g8d0fgd46a3b9de613', Converter={StaticResource TranslatedStringConverter}}"/>
                                <Setter TargetName="AcceptButton" Property="IsEnabled" Value="False"/>
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding SelectedItem.Tag, ElementName=RestOptionsList}" Value="FastTravel"/>
                                <Condition Binding="{Binding DataContext.CurrentPlayer.IsAtNightCamp, RelativeSource={RelativeSource AncestorType=ls:UIWidget}}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter TargetName="OptionWarning" Property="Text"  Value="{Binding Source='h2949234dg9139g4fb7g9a78g0f7fa3d77e82', Converter={StaticResource TranslatedStringConverter}}"/>
                                <Setter TargetName="AcceptButton" Property="IsEnabled" Value="False"/>
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </DataTemplate.Resources>
            <Grid HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,100">
                <Control x:Name="RestControl" Template="{StaticResource RestPanelTemplate}"/>
            </Grid>
        </DataTemplate>
    </ls:UIWidget.ContentTemplate>
</ls:UIWidget>