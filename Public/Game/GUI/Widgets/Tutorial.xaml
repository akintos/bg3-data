<ls:UIWidget x:Name="ModalTutorial"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:ls="clr-namespace:ls;assembly=SharedGUI"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:System="clr-namespace:System;assembly=mscorlib"
             xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:Noesis="clr-namespace:NoesisGUIExtensions;assembly=Noesis.GUI.Extensions"
             mc:Ignorable="d"
             ls:UIWidget.ContextName="Tutorial" 
             d:DesignWidth="3840" d:DesignHeight="2160">

    <Grid x:Name="Root" ls:TooltipExtender.Owner="{Binding DataContext.CurrentPlayer.SelectedCharacter, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Visibility="{Binding (ls:TutorialProperties.ShowTutorial), ElementName=Tutorial, Converter={StaticResource BoolToVisibleConverter}}">
        <Grid.Style>
            <Style TargetType="Grid">
                <Setter Property="Background" Value="{DynamicResource LS_PopUpBackgroundColor}"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding (ls:TutorialProperties.HasMatch), ElementName=Tutorial}" Value="True">
                        <Setter Property="Background" Value="Transparent"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Grid.Style>

        <Grid x:Name="HighlightSection" Noesis:Element.PPAAMode="Disabled" Visibility="{Binding (ls:TutorialProperties.HasMatch), ElementName=Tutorial, Converter={StaticResource BoolToVisibleConverter}}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/> 
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Rectangle Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" Fill="{DynamicResource LS_PopUpBackgroundColor}" Height="{Binding (ls:TutorialProperties.HighlightRect).Y, ElementName=Tutorial}"/>

            <Rectangle Grid.Row="1" Grid.Column="0" Fill="{DynamicResource LS_PopUpBackgroundColor}" Width="{Binding (ls:TutorialProperties.HighlightRect).X, ElementName=Tutorial}"/>
            <Rectangle Grid.Row="1" Grid.Column="1" Fill="Transparent" Width="{Binding (ls:TutorialProperties.HighlightRect).Width, ElementName=Tutorial}" Height="{Binding (ls:TutorialProperties.HighlightRect).Height, ElementName=Tutorial}" Stroke="{DynamicResource LS_TutorialHighlightColor}" StrokeThickness="2"/>
            <Rectangle Grid.Row="1" Grid.Column="2" Fill="{DynamicResource LS_PopUpBackgroundColor}"/>

            <Rectangle Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3" Fill="{DynamicResource LS_PopUpBackgroundColor}"/>
        </Grid>

        <!-- We need an extra grid around the nineslice for positioning so we can use a negative margin on the nineslice to deal with the excessive shadows -->
        <Grid x:Name="Tutorial" ls:TutorialProperties.Tutorial="{Binding Tutorial}" ls:TutorialProperties.CurrentStep="{Binding CurrentStep}" ls:TutorialProperties.DefaultSpacing="20">
            <Grid.Style>
                <Style TargetType="Grid">
                    <Setter Property="HorizontalAlignment" Value="Center"/>
                    <Setter Property="VerticalAlignment" Value="Center"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding (ls:TutorialProperties.HasMatch), ElementName=Tutorial}" Value="True">
                            <Setter Property="HorizontalAlignment" Value="Left"/>
                            <Setter Property="VerticalAlignment" Value="Top"/>
                            <Setter Property="Margin" Value="{Binding (ls:TutorialProperties.PlacementOffset), ElementName=Tutorial}"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>

            <ls:LSNineSliceImage Slices="82" Width="920" MinHeight="290" Padding="100,84,100,84" ImageSource="pack://application:,,,/GustavNoesisGUI;component/Assets/Tooltips/TT_full_bg.png" Margin="-60">
                <Grid>
                    <ls:LSButton Style="{DynamicResource CloseButton}" Command="{Binding DataContext.FinishTutorial, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" VerticalAlignment="Top" HorizontalAlignment="Right" SoundID="UI_HUD_Tutorial_Skip" Margin="0,-20,-20,0" Visibility="{Binding Path=Tag, ElementName=ContentContainer, Converter={StaticResource CountToVisibilityConverter}, ConverterParameter='1'}"/>

                    <StackPanel x:Name="ContentContainer" Margin="0,4,0,0">
                        <StackPanel.Style>
                            <Style TargetType="StackPanel">
                                <Setter Property="Tag">
                                    <Setter.Value>
                                        <System:Int32>1</System:Int32>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Tutorial.TutorialID}" Value="TUT_Combat">
                                        <Setter Property="Tag">
                                            <Setter.Value>
                                                <System:Int32>5</System:Int32>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </StackPanel.Style>

                        <TextBlock x:Name="Title" TextWrapping="Wrap" FontSize="{StaticResource TitleFontSize}" Foreground="{StaticResource LS_PrimaryColor}" MinHeight="60" IsHitTestVisible="False">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Tutorial.Title}"/>
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding Tutorial.TutorialID}" Value="TUT_Combat"/>
                                                <Condition Binding="{Binding CurrentStep}" Value="0"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h57af52f6ge83dg4d5fga9e7g8871f2691362', Converter={StaticResource TranslatedStringConverter}}"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding Tutorial.TutorialID}" Value="TUT_Combat"/>
                                                <Condition Binding="{Binding CurrentStep}" Value="1"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='ha94e6899gacd1g4c07gbb3eg163c4bdc625b', Converter={StaticResource TranslatedStringConverter}}"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding Tutorial.TutorialID}" Value="TUT_Combat"/>
                                                <Condition Binding="{Binding CurrentStep}" Value="2"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h8c5c3c52g1b85g4fd1g9574g5775d9f03f44', Converter={StaticResource TranslatedStringConverter}}"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding Tutorial.TutorialID}" Value="TUT_Combat"/>
                                                <Condition Binding="{Binding CurrentStep}" Value="3"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hb91ef955g55dcg42f7gbeedg17519d20dc97', Converter={StaticResource TranslatedStringConverter}}"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding Tutorial.TutorialID}" Value="TUT_Combat"/>
                                                <Condition Binding="{Binding CurrentStep}" Value="4"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hde3c797eg900bg4b66gbcb2g8c608fd6309d', Converter={StaticResource TranslatedStringConverter}}"/>
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>

                        <StackPanel x:Name="ProgressPanel" Orientation="Horizontal" Margin="0,0,0,40" Height="50">
                            <StackPanel.Tag>
                                <MultiBinding Converter="{StaticResource EqualConverter}">
                                    <Binding ElementName="ContentContainer" Path="Tag"/>
                                    <Binding Path="CurrentStep" Converter="{StaticResource AddConverter}" ConverterParameter="1"/>
                                </MultiBinding>
                            </StackPanel.Tag>

                            <TextBlock Style="{StaticResource TutorialCategoryStyle}" FontSize="{StaticResource DefaultFontSize}" Foreground="{StaticResource LS_SecondaryColor}" TextWrapping="Wrap"/>

                            <TextBlock FontSize="{StaticResource DefaultFontSize}" Foreground="{StaticResource LS_SecondaryColor}" Margin="10,0" Visibility="{Binding Path=Tag, ElementName=ContentContainer, Converter={StaticResource CountToVisibilityConverter}, ConverterParameter='1'}">
                                <TextBlock.Text>
                                    <MultiBinding StringFormat="{}{0}/{1}">
                                        <Binding ElementName="Tutorial" Path="(ls:TutorialProperties.CurrentStep)" Converter="{StaticResource AddConverter}" ConverterParameter="1"/>
                                        <Binding ElementName="ContentContainer" Path="Tag" Converter="{StaticResource AddConverter}"/>
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>

                            <ls:LSButton Template="{DynamicResource IconButtonTemplate}" Command="{Binding PreviousStep}" Visibility="{Binding Path=Tag, ElementName=ContentContainer, Converter={StaticResource CountToVisibilityConverter}, ConverterParameter='1'}" IsEnabled="{Binding CurrentStep, Converter={StaticResource GreaterThanConverter}, ConverterParameter='0'}" SoundID="UI_HUD_Tutorial_PreviousStep">
                                <ls:LSButton.Resources>
                                    <ImageSource x:Key="ButtonNormal">pack://application:,,,/GustavNoesisGUI;component/Assets/Tutorial/ico_navLeft_d.png</ImageSource>
                                    <ImageSource x:Key="ButtonHighlight">pack://application:,,,/GustavNoesisGUI;component/Assets/Tutorial/ico_navLeft_h.png</ImageSource>
                                    <ImageSource x:Key="ButtonPressed">pack://application:,,,/GustavNoesisGUI;component/Assets/Tutorial/ico_navLeft_d.png</ImageSource>
                                    <ImageSource x:Key="ButtonDisabled">pack://application:,,,/GustavNoesisGUI;component/Assets/Tutorial/ico_navLeft_disabled.png</ImageSource>
                                </ls:LSButton.Resources>
                            </ls:LSButton>

                            <ls:LSButton Template="{DynamicResource IconButtonTemplate}" Command="{Binding NextStep}" Visibility="{Binding Path=Tag, ElementName=ContentContainer, Converter={StaticResource CountToVisibilityConverter}, ConverterParameter='1'}" IsEnabled="{Binding Path=Tag, ElementName=ProgressPanel, Converter={StaticResource InvertBoolConverter}}" SoundID="UI_HUD_Tutorial_NextStep">
                                <ls:LSButton.Resources>
                                    <ImageSource x:Key="ButtonNormal">pack://application:,,,/GustavNoesisGUI;component/Assets/Tutorial/ico_navRight_d.png</ImageSource>
                                    <ImageSource x:Key="ButtonHighlight">pack://application:,,,/GustavNoesisGUI;component/Assets/Tutorial/ico_navRight_h.png</ImageSource>
                                    <ImageSource x:Key="ButtonPressed">pack://application:,,,/GustavNoesisGUI;component/Assets/Tutorial/ico_navRight_d.png</ImageSource>
                                    <ImageSource x:Key="ButtonDisabled">pack://application:,,,/GustavNoesisGUI;component/Assets/Tutorial/ico_navRight_disabled.png</ImageSource>
                                </ls:LSButton.Resources>
                            </ls:LSButton>
                        </StackPanel>

                        <TextBlock x:Name="TutorialText" TextWrapping="Wrap" FontSize="{StaticResource DefaultFontSize}" Foreground="{StaticResource LS_PrimaryColor}" Margin="0,0,0,20">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Tutorial.Description}"/>
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding Tutorial.TutorialID}" Value="TUT_Combat"/>
                                                <Condition Binding="{Binding CurrentStep}" Value="0"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hadf1195fg9744g4ffaga8f3gcae263e74717', Converter={StaticResource TranslatedStringConverter}}"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding Tutorial.TutorialID}" Value="TUT_Combat"/>
                                                <Condition Binding="{Binding CurrentStep}" Value="1"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h51d3bb4bg3c34g47cag8d43gefa17ca17881', Converter={StaticResource TranslatedStringConverter}}"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding Tutorial.TutorialID}" Value="TUT_Combat"/>
                                                <Condition Binding="{Binding CurrentStep}" Value="2"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h87f58c66gde89g44edg9ea6g04697ebfaa31', Converter={StaticResource TranslatedStringConverter}}"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding Tutorial.TutorialID}" Value="TUT_Combat"/>
                                                <Condition Binding="{Binding CurrentStep}" Value="3"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h11c139d2g8d8dg472aga56bgfa607d0342f7', Converter={StaticResource TranslatedStringConverter}}"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding Tutorial.TutorialID}" Value="TUT_Combat"/>
                                                <Condition Binding="{Binding CurrentStep}" Value="4"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h9903236dg7123g403fga36egdee587aaaf2a', Converter={StaticResource TranslatedStringConverter}}"/>
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>

                        <ls:LSButton Margin="0,20" >
	                        <ls:LSButton.Style>
                                <Style TargetType="ls:LSButton" BasedOn="{StaticResource SmallButtonStyle}">
                                    <Setter Property="Content" Value="{Binding Source='head66e6bg788dg4defg8488ga6b39108a91a', Converter={StaticResource TranslatedStringConverter}}"/>
                                    <Setter Property="Command" Value="{Binding DataContext.FinishTutorial, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}"/>
                                    <Setter Property="SoundID" Value="UI_HUD_Tutorial_Finish"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=Tag, ElementName=ProgressPanel}" Value="False">
                                            <Setter Property="Content" Value="{Binding Source='hc1e4c45fg54e3g49c1ga0aeg88d0eed38ae6', Converter={StaticResource TranslatedStringConverter}}"/>
                                            <Setter Property="Command" Value="{Binding DataContext.NextStep, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}"/>
                                            <Setter Property="SoundID" Value="UI_HUD_Tutorial_Continue"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ls:LSButton.Style>
                        </ls:LSButton>

                        <ls:LSInputBinding BoundEvent="ToggleInGameMenu" Command="{Binding DataContext.FinishTutorial, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}"/>
                    </StackPanel>
                </Grid>
            </ls:LSNineSliceImage>
        </Grid>

        <b:Interaction.Triggers>
            <b:PropertyChangedTrigger Binding="{Binding Path=Visibility, ElementName=Root}">
                <b:Interaction.Behaviors>
                    <b:ConditionBehavior >
                        <b:ConditionalExpression>
                            <b:ComparisonCondition LeftOperand="{Binding Path=Visibility, ElementName=Root}" Operator="Equal" RightOperand="Visible"/>
                            <b:ComparisonCondition LeftOperand="{Binding Path=Tag, ElementName=Root}" Operator="NotEqual" RightOperand="PlayedOpenSound"/>
                        </b:ConditionalExpression>
                    </b:ConditionBehavior>
                </b:Interaction.Behaviors>
                <ls:LSPlaySound Sound="UI_HUD_TutorialPanel_Open"/>
                <!-- Tag to prevent sound every time we step through multi-step tutorials -->
                <b:ChangePropertyAction TargetName="Root" PropertyName="Tag" Value="PlayedOpenSound"/>
            </b:PropertyChangedTrigger>

            <b:PropertyChangedTrigger Binding="{Binding DataContext.Data.ScreenResolution, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}">
                <b:InvokeCommandAction Command="{Binding ResolutionChangedCommand}"/>
            </b:PropertyChangedTrigger>

            <b:EventTrigger EventName="Unloaded">
                <ls:LSPlaySound Sound="UI_HUD_TutorialPanel_Close"/>
            </b:EventTrigger>
        </b:Interaction.Triggers>
    </Grid>
</ls:UIWidget>