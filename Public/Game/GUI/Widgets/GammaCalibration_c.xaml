<ls:UIWidget x:Name="GammaCalibration_c" 
             ContextName="GammaCalibration"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:ls="clr-namespace:ls;assembly=SharedGUI"
             xmlns:noesis="clr-namespace:NoesisGUIExtensions;assembly=Noesis.GUI.Extensions"
             xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
    		 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
			 mc:Ignorable="d"
             d:DesignWidth="3840" d:DesignHeight="2160"
             ls:UIWidget.Focusable="False"
             d:DataContext="{d:DesignInstance Type=ls:DCGammaCalibration}">

    <ls:UIWidget.Resources>
        <ResourceDictionary Source="../Library/OptionTemplates_c.xaml"/>
    </ls:UIWidget.Resources>

    <ls:UIWidget.Template>
        <ControlTemplate>
            <ControlTemplate.Resources>

                <BitmapImage x:Key="GammaImage" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/Options/gammaCalibration.png" />

                <Style x:Key="Text" TargetType="TextBlock">
                    <Setter Property="FontSize" Value="{StaticResource ScaledDefaultFontSize}"/>
                    <Setter Property="Foreground" Value="{StaticResource LS_accent100TxtColor}"/>
                    <Setter Property="HorizontalAlignment" Value="Center"/>
                    <Setter Property="VerticalAlignment" Value="Center"/>
                    <Setter Property="TextAlignment" Value="Center"/>
                    <Setter Property="TextWrapping" Value="Wrap"/>
                    <Setter Property="noesis:Text.Stroke" Value="{StaticResource LS_PrimaryColorOutlineColor}"/>
                    <Setter Property="noesis:Text.StrokeThickness" Value="2"/>
                </Style>
            </ControlTemplate.Resources>

            <Border Background="Black">
                <b:Interaction.Triggers>
                    <b:EventTrigger EventName="Loaded">
                        <ls:SetMoveFocusAction TargetName="GammaCalibration_c" FocusElement="{Binding ElementName=GammaSlider}"/>
                    </b:EventTrigger>
                </b:Interaction.Triggers>
                <Grid MaxWidth="{StaticResource DesignedContentMaxWidth}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="200"/>
                        <RowDefinition/>
                        <RowDefinition Height="220"/>
                    </Grid.RowDefinitions>

                    <b:Interaction.Triggers>
                        <b:PropertyChangedTrigger Binding="{Binding Gamma}">
                            <b:InvokeCommandAction Command="{Binding SliderUpdateCommand}"/>
                        </b:PropertyChangedTrigger>
                    </b:Interaction.Triggers>

                    <Image Grid.Row="0" Grid.RowSpan="3"  Source="{StaticResource GammaImage}" Stretch="None"/>

                    <TextBlock Grid.Row="0" Text="{Binding Source='h9cf496a5gae80g41f4g9e8ag47703135a6a0',Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource Text}"
                               FontSize="{StaticResource ScaledMassiveFontSize}" Foreground="{StaticResource LS_tint100}"/>

                    <StackPanel Grid.Row="1" Orientation="Vertical" VerticalAlignment="Bottom" HorizontalAlignment="Center">
                        <Grid Width="2960">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <TextBlock Grid.Column="0" Text="{Binding Source='hcfa33f5dgcaefg4bc2gb817gfba5fa094bbe',Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource Text}"/>
                            <TextBlock Grid.Column="1" Text="{Binding Source='hc38ff11aga42eg4492g8811g5b8787faf0f9',Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource Text}"/>
                            <TextBlock Grid.Column="2" Text="{Binding Source='ha021830ag4e14g4f92gaf34gd51746be7939',Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource Text}"/>
                        </Grid>

                        <TextBlock Text="{Binding Source='h54390f10g0d65g437cgab74g97602f5d8506',Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource Text}" 
                                   Margin="0,160,0,40"/>

                        <ls:LSSlider x:Name="GammaSlider"
                                     Template="{StaticResource CalibrationSliderTemplate}"
                                     StepSoundID="UI_Controller_DefaultSlider"
                                     Value="{Binding Gamma, Mode=TwoWay}"
                                     Minimum="0.5"
                                     Maximum="1.5"
                                     IsSnapToTickEnabled="False"
                                     SmallChange=".01"
                                     LargeChange=".01"
                                     Focusable="True"
                                     ls:MoveFocus.Focusable="True"
                                     IsEnabled="True"/>

                    </StackPanel>
                    <StackPanel Grid.Row="2"  x:Name="PADPrompts" Style="{StaticResource ButtonHint.Container.Center}" >
                        <ls:LSButton x:Name="AcceptButton"
                                     ContentTemplate="{StaticResource ControllerButtonHint}"
                                     BoundEvent="UIAccept"
                                     Content="{Binding CurrentPlayer.UIData.InputEvents, Converter={StaticResource FindInputEventConverter}, ConverterParameter='UIAccept'}"
                                     Tag="{Binding Source='hb625919egaa48g48aegbdd8g99a9c590323e',Converter={StaticResource TranslatedStringConverter}}" 
                                     Command="{Binding CustomEvent}"
                                     CommandParameter="CloseWidget"
                                     SoundID="UI_Shared_Accept" Margin="20,0"/>

                        <ls:LSButton ContentTemplate="{StaticResource ControllerButtonHint}"
                                     BoundEvent="UICreate"
                                     Content="{Binding CurrentPlayer.UIData.InputEvents, Converter={StaticResource FindInputEventConverter}, ConverterParameter='UICreate'}"
                                     Tag="{Binding Source='hfd177f05g1bdeg4296g8713g096bc46263ca',Converter={StaticResource TranslatedStringConverter}}" 
                                     Command="{Binding ResetToDefaultCommand}"
                                     SoundID="UI_Shared_Cancel" Margin="20,0"/>

                        <ls:LSButton x:Name="CancelButton"
                                     ContentTemplate="{StaticResource ControllerButtonHint}"
                                     BoundEvent="UICancel"
                                     Content="{Binding CurrentPlayer.UIData.InputEvents, Converter={StaticResource FindInputEventConverter}, ConverterParameter='UICancel'}"
                                     Tag="{Binding Source='h675a55aegd07cg4ab0g862dg0c564197d478',Converter={StaticResource TranslatedStringConverter}}" 
                                     Command="{Binding CancelCommand}"
                                     SoundID="UI_Shared_Cancel" Margin="20,0"/>
                    </StackPanel>
                </Grid>

            </Border>

            <ControlTemplate.Triggers>
                <DataTrigger Binding="{Binding ShowFirstTimeSetup}" Value="True">
                    <Setter TargetName="CancelButton" Property="Visibility" Value="Collapsed"/>
                    <Setter TargetName="AcceptButton" Property="CommandParameter" Value="OpenSplashScreen"/>
                </DataTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </ls:UIWidget.Template>
</ls:UIWidget>