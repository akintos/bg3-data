<ls:UIWidget
    x:Name="LearnSpells_c"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:ls="clr-namespace:ls;assembly=SharedGUI"
    xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:System="clr-namespace:System;assembly=mscorlib"
    xmlns:noesis="clr-namespace:NoesisGUIExtensions;assembly=Noesis.GUI.Extensions"
    mc:Ignorable="d"
    ls:UIWidget.UseCustomDC="True"
    ls:UIWidget.ContextName="LearnSpellsContext"
    d:DataContext="{d:DesignInstance {x:Type ls:DCLearnSpells}, IsDesignTimeCreatable=True}"
    ls:TooltipExtender.Owner="{Binding CurrentPlayer.SelectedCharacter}"
    HorizontalAlignment="Stretch"
    VerticalAlignment="Stretch"
    FocusDown="UIDown" FocusLeft="UILeft" FocusRight="UIRight" FocusUp="UIUp">

    <ls:UIWidget.Resources>
        <GridLength x:Key="ColWidthQuantity">60</GridLength>
        <GridLength x:Key="ColWidthIcon">160</GridLength>
        <GridLength x:Key="ColWidthStar">44</GridLength>
        <GridLength x:Key="ColWidthCost">70</GridLength>

        <System:Double x:Key="TableWidth">800</System:Double>
    </ls:UIWidget.Resources>
    
    <ls:UIWidget.Template>
        <ControlTemplate>
            <Border>
                <Grid x:Name="Container" Background="{StaticResource LS_PopUpBackgroundColorMedium}">
                    <b:Interaction.Triggers>
                        <b:EventTrigger EventName="Loaded">
                            <ls:SetMoveFocusAction TargetName="LearnSpells_c" FocusElement="{Binding .}"/>
                            <b:InvokeCommandAction Command="{Binding DataContext.ShowTooltipOnUIElement, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="{Binding Path=FocusedElement, ElementName=LearnSpells_c}"/>
                        </b:EventTrigger>
                    </b:Interaction.Triggers>

                    <b:Interaction.Behaviors>
                        <ls:CollectionSortBehavior x:Name="SortBehavior" ItemsSource="{Binding LearnableScrolls}" Comparer="{Binding ScrollSortComparer}"/>
                    </b:Interaction.Behaviors>

                    <Grid x:Name="Panel" HorizontalAlignment="Center" VerticalAlignment="Center">
                        <Image Source="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterPanel_c/c_learnScrolls_bg.png" Stretch="None"/>

                        <TextBlock x:Name="Title" Text="{Binding Source=h9d4b5933g552ag4656gb59fg8ab0b22a11cf, Converter={StaticResource TranslatedStringConverter}}" Margin="0,160,0,0" HorizontalAlignment="Center" VerticalAlignment="Top" FontSize="{StaticResource DefaultFontSize}"/>

                        <Grid Width="{StaticResource TableWidth}" Margin="0,270,0,0" HorizontalAlignment="Center" VerticalAlignment="Top">
                            <Grid.Resources>
                                <Style TargetType="TextBlock">
                                    <Setter Property="FontSize" Value="{StaticResource MediumFontSize}"/>
                                    <Setter Property="Foreground" Value="{StaticResource LS_accent25TxtColor}"/>
                                    <Setter Property="VerticalAlignment" Value="Center"/>
                                </Style>
                            </Grid.Resources>
                            <!-- These columns should mirror the ones for the list items to ensure proper alignment -->
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="{StaticResource ColWidthQuantity}"/>
                                <ColumnDefinition Width="{StaticResource ColWidthIcon}"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="{StaticResource ColWidthStar}"/>
                                <ColumnDefinition Width="{StaticResource ColWidthCost}"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock x:Name="QuantityTitle" Grid.Column="0" Text="{Binding Source=hd25888c3gd6c9g41bbga437gec871f50555f, Converter={StaticResource TranslatedStringConverter}}" HorizontalAlignment="Center" />
                            <TextBlock x:Name="NameTitle" Grid.Column="2" Text="{Binding Source=h28c02084gc184g4b93g8dfbgdfcd1fee3871, Converter={StaticResource TranslatedStringConverter}}"/>
                            <Image Grid.Column="4" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/c_gold.png" Stretch="None" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>

                        <ItemsControl x:Name="ScrollList" ItemsSource="{Binding Path=(b:Interaction.Behaviors)[0].SortedItems, ElementName=Container}" Height="966" Margin="60,334,0,0" HorizontalAlignment="Center" VerticalAlignment="Top" Visibility="{Binding LearnableScrolls.Count, Converter={StaticResource CountToVisibilityConverter}}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Margin="0,12"/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>

                            <ItemsControl.Template>
                                <ControlTemplate>
                                    <ScrollViewer VerticalScrollBarVisibility="Visible" HorizontalAlignment="Left" VerticalAlignment="Top">
                                        <ItemsPresenter Margin="0,0,60,0"/>
                                    </ScrollViewer>
                                </ControlTemplate>
                            </ItemsControl.Template>
                            
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <ls:LSNineSliceImage x:Name="Container" ImageSource="{StaticResource ListItemBg_d}" Slices="40" Margin="0,-18" Padding="0,24" Focusable="True" ls:MoveFocus.Focusable="True">
                                        <b:Interaction.Behaviors>
                                            <ls:CollectionPropertyCountBehavior ItemsSource="{Binding SourceItems}" PropertyName="Count"/>
                                        </b:Interaction.Behaviors>

                                        <ls:LSNineSliceImage.ToolTip>
                                            <ls:LSTooltip Content="{Binding DataContext, ElementName=Container}" ls:TooltipExtender.Owner="{Binding DataContext.CurrentPlayer.SelectedCharacter, ElementName=LearnSpells_c}" HorizontalOffset="80"/>
                                        </ls:LSNineSliceImage.ToolTip>

                                        <Grid Width="{StaticResource TableWidth}">
                                            <!-- These columns should mirror the ones for the column titles to ensure proper alignment -->
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="{StaticResource ColWidthQuantity}"/>
                                                <ColumnDefinition Width="{StaticResource ColWidthIcon}"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="{StaticResource ColWidthStar}"/>
                                                <ColumnDefinition Width="{StaticResource ColWidthCost}"/>
                                            </Grid.ColumnDefinitions>

                                            <TextBlock x:Name="Quantity" Grid.Column="0" Text="{Binding Path=(b:Interaction.Behaviors)[0].Result, ElementName=Container}" VerticalAlignment="Center" HorizontalAlignment="Center"  FontSize="{StaticResource DefaultFontSize}" Foreground="{StaticResource LS_baseTxtColor}"/>
                                            <Grid Grid.Column="1" Width="120" Height="120" HorizontalAlignment="Center">
                                                <Rectangle x:Name="Icon" Fill="{Binding Icon}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Visibility="{Binding IsAlreadyKnown, Converter={StaticResource BoolToHiddenConverter}}"/>
                                                <TextBlock x:Name="SpellLevel" Text="{Binding SpellLevel, Converter={StaticResource DecimalToRomanConverter}}" FontSize="{StaticResource SmallFontSize}" Foreground="{StaticResource LS_tint100}" HorizontalAlignment="Right" VerticalAlignment="Bottom" noesis:Text.StrokeThickness="8" noesis:Text.Stroke="{StaticResource LS_tint00}" Margin="0,0,20,0"/>
                                            </Grid>
                                            <TextBlock x:Name="Name" Grid.Column="2" Text="{Binding Name}" VerticalAlignment="Center" FontSize="{StaticResource DefaultFontSize}" Foreground="{StaticResource LS_baseTxtColor}"/>
                                            <Image x:Name="Star" Grid.Column="3" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/SpellBook/transcribe_ico_proficiency.png" Stretch="None" Visibility="{Binding HasDiscount, Converter={StaticResource BoolToVisibleConverter}, ConverterParameter='true'}"/>
                                            <TextBlock x:Name="Cost" Grid.Column="4" Text="{Binding LearnCost}" VerticalAlignment="Center" FontSize="{StaticResource DefaultFontSize}" />
                                        </Grid>
                                    </ls:LSNineSliceImage>
                                    <DataTemplate.Triggers>
                                        <DataTrigger Binding="{Binding HasRequiredLevel}" Value="False">
                                            <Setter TargetName="SpellLevel" Property="Foreground" Value="{StaticResource LS_alertTxtColor}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding HasDiscount}" Value="True">
                                            <Setter TargetName="Cost" Property="Foreground" Value="{StaticResource LS_bonusTxtColor}"/>
                                        </DataTrigger>
                                        <DataTrigger Value="False">
                                            <DataTrigger.Binding>
                                                <MultiBinding Converter="{StaticResource LessThanOrEqualMultiConverter}" FallbackValue="False">
                                                    <Binding Path="LearnCost"/>
                                                    <Binding Path="DataContext.CurrentPlayer.PartyGold" ElementName="LearnSpells_c"/>
                                                </MultiBinding>
                                            </DataTrigger.Binding>
                                            <Setter TargetName="Cost" Property="Foreground" Value="{StaticResource LS_alertTxtColor}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=(ls:MoveFocus.IsFocused), ElementName=Container}" Value="True">
                                            <Setter Property="Panel.ZIndex" Value="1"/>
                                            <Setter TargetName="Container" Property="ImageSource" Value="{StaticResource ListItemBg_h}"/>
                                            <Setter TargetName="Name" Property="Foreground" Value="{StaticResource LS_accent100TxtColor}"/>
                                            <Setter TargetName="Quantity" Property="Foreground" Value="{StaticResource LS_accent100TxtColor}"/>
                                        </DataTrigger>
                                    </DataTemplate.Triggers>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>

                        <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source=he42b09d7ga8a6g43a9gb829g43fee5664185, Converter={StaticResource TranslatedStringConverter}}" Visibility="{Binding Path=Visibility, ElementName=ScrollList, Converter={StaticResource InvertVisibilityConverter}}" Foreground="{StaticResource LS_baseTxtColor}" MaxWidth="600" TextWrapping="Wrap" VerticalAlignment="Center" TextAlignment="Center"/>

                        <StackPanel x:Name="SavantSchools" Orientation="Horizontal" Margin="0,0,0,300" HorizontalAlignment="Center" VerticalAlignment="Bottom" Visibility="{Binding SavantSchools.Count, Converter={StaticResource CountToVisibilityConverter}}" Height="80">
                            <Image x:Name="SavantStar" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/SpellBook/transcribe_ico_proficiency.png" Stretch="None" VerticalAlignment="Center"/>
                            <ItemsControl ItemsSource="{Binding SavantSchools}" AlternationCount="{Binding SavantSchools.Count}" VerticalAlignment="Center" MaxWidth="660">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <WrapPanel VerticalAlignment="Center"/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock x:Name="SpellSchool" FontSize="{StaticResource SmallFontSize}" VerticalAlignment="Center" Foreground="{StaticResource LS_accent25TxtColor}" FontStyle="Italic"/>
                                            <TextBlock x:Name="Separator" Text="{Binding Source=h2519408dg5fd7g4cbcg840cg14370239edf8, Converter={StaticResource TranslatedStringConverter}}" FontSize="{StaticResource SmallFontSize}" Foreground="{StaticResource LS_accent25TxtColor}" FontStyle="Italic"/>
                                        </StackPanel>

                                        <DataTemplate.Triggers>
                                            <DataTrigger Binding="{Binding ReflectionString}" Value="Abjuration">
                                                <Setter TargetName="SpellSchool" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source=hd31978a1g8e58g43bdga6e9gd62fd9f146e5, Converter={StaticResource TranslatedStringConverter}}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding ReflectionString}" Value="Conjuration">
                                                <Setter TargetName="SpellSchool" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source=hb621a062gbe72g4aaag8fe3g7813a70938ee, Converter={StaticResource TranslatedStringConverter}}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding ReflectionString}" Value="Divination">
                                                <Setter TargetName="SpellSchool" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source=hfdd52f29gb5adg40ccga92dg81b02e72ff6e, Converter={StaticResource TranslatedStringConverter}}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding ReflectionString}" Value="Enchantment">
                                                <Setter TargetName="SpellSchool" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source=he3a6ff7ag4b94g4c31gbd94ga9f25e991027, Converter={StaticResource TranslatedStringConverter}}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding ReflectionString}" Value="Evocation">
                                                <Setter TargetName="SpellSchool" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source=h65139440gc030g4536gbfcfg18873fa90443, Converter={StaticResource TranslatedStringConverter}}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding ReflectionString}" Value="Illusion">
                                                <Setter TargetName="SpellSchool" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source=h44c418f6g8d46g462bg82a1ge41e1d126193, Converter={StaticResource TranslatedStringConverter}}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding ReflectionString}" Value="Necromancy">
                                                <Setter TargetName="SpellSchool" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source=ha106a896g592bg4b4egb7adg450adc98519d, Converter={StaticResource TranslatedStringConverter}}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding ReflectionString}" Value="Transmutation">
                                                <Setter TargetName="SpellSchool" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source=h7e6c8899g9c4bg4b79ga180g0eee3b93b7e4, Converter={StaticResource TranslatedStringConverter}}"/>
                                            </DataTrigger>

                                            <DataTrigger Value="False">
                                                <DataTrigger.Binding>
                                                    <MultiBinding Converter="{StaticResource LessThanOrEqualMultiConverter}">
                                                        <Binding Path="(ItemsControl.AlternationIndex)" RelativeSource="{RelativeSource Mode=Self}" Converter="{StaticResource AddConverter}" ConverterParameter="2"/>
                                                        <Binding Path="(ItemsControl.AlternationCount)" RelativeSource="{RelativeSource AncestorType={x:Type ItemsControl}}"/>
                                                    </MultiBinding>
                                                </DataTrigger.Binding>
                                                <Setter TargetName="Separator" Property="Visibility" Value="Collapsed"/>
                                            </DataTrigger>
                                        </DataTemplate.Triggers>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </StackPanel>

                        <TextBlock x:Name="TranscribeText" FontSize="{StaticResource DefaultFontSize}" Text="{Binding Source=hcd33ba4egd67dg416dgb804g41cff983b560, Converter={StaticResource TranslatedStringConverter}}" Visibility="{Binding LearnableScrolls.Count, Converter={StaticResource CountToVisibilityConverter}}" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0,0,0,150"/>

                        <Grid HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="-4,0,0,12">
                            <ls:LSButton x:Name="TranscribeBtn" Style="{StaticResource ControllerButton}" EatInput="False" EatEventInUI="True" DataContext="{Binding CurrentPlayer.UIData.InputEvents, Converter={StaticResource FindInputEventConverter}, ConverterParameter='UIAccept'}" Content="" HorizontalAlignment="Center" VerticalAlignment="Center">

                                <b:Interaction.Triggers>
                                    <b:EventTrigger EventName="LSButtonPressed" SourceName="TranscribeBtn">
                                        <b:ControlStoryboardAction Storyboard="{StaticResource ControllerButtonHoldAnimation}"/>
                                    </b:EventTrigger>
                                    <b:EventTrigger EventName="LSButtonReleased" SourceName="TranscribeBtn">
                                        <b:ControlStoryboardAction Storyboard="{StaticResource ControllerButtonHoldAnimation}" ControlStoryboardOption="Stop"/>
                                    </b:EventTrigger>
                                    <b:EventTrigger EventName="IsEnabledChanged" SourceName="TranscribeBtn">
                                        <b:ControlStoryboardAction Storyboard="{StaticResource ControllerButtonHoldAnimation}" ControlStoryboardOption="Stop"/>
                                    </b:EventTrigger>
                                    <b:StoryboardCompletedTrigger Storyboard="{StaticResource ControllerButtonHoldAnimation}">
                                        <b:InvokeCommandAction Command="{Binding DataContext.TranscribeScrollsCommand, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="{Binding Path=FocusedElement.DataContext, ElementName=LearnSpells_c}"/>
                                    </b:StoryboardCompletedTrigger>
                                </b:Interaction.Triggers>
                            </ls:LSButton>
                            <ls:LSPie x:Name="ButtonHoldVisualizer" Value="0" SweepDirection="Counterclockwise" 
                                        Visibility="{Binding ElementName=TakeAllBtn, Path=IsPressed, Converter={StaticResource BoolToVisibleConverter}}"
                                        Width="100" Height="100" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Image Source="/GustavNoesisGUI;component/Assets/Shared_c/c_tabSelector.png" Width="100" Height="100" VerticalAlignment="Center" HorizontalAlignment="Center" />
                            </ls:LSPie>
                        </Grid>
                    </Grid>

                    <StackPanel Orientation="Horizontal" Margin="0,80,80,0" HorizontalAlignment="Right" VerticalAlignment="Top">
                        <TextBlock x:Name="PartyGold" FontSize="{StaticResource LargeFontSize}" Text="{Binding CurrentPlayer.PartyGold, StringFormat={}{0:N0}}" Margin="10,0,0,0"/>
                        <Image Source="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/c_gold.png" VerticalAlignment="Center" Stretch="None"/>
                    </StackPanel>

                    <!-- Button hints -->
                    <StackPanel x:Name="LeftHints" Style="{StaticResource ButtonHint.Container.Left}">
                        <ls:LSButton x:Name="ToggleTooltips"
                        Command="{Binding DataContext.ToggleTooltipOnUIElement, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}"
                        CommandParameter="{Binding FocusedElement, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}"
                        ls:LSButton.BoundEvent="UIShowInfo"
                        ContentTemplate="{StaticResource ControllerButtonHint}"
                        Content="{Binding DataContext.CurrentPlayer.UIData.InputEvents, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}, ConverterParameter=UIShowInfo, Converter={StaticResource FindInputEventConverter}}"
                        Tag="{Binding Source='h2a8cab0cgbfb8g4890gbfbdg5a9426e29457', Converter={StaticResource TranslatedStringConverter}}"/>
                    </StackPanel>

                    <StackPanel x:Name="RightHints" Style="{StaticResource ButtonHint.Container.Right}">
                        <!-- Close the widget -->
                        <ls:LSButton x:Name="CloseWidgetButton"
                            Command="{Binding DataContext.CustomEvent, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" 
                            CommandParameter="CloseLearnSpells" 
                            ls:LSButton.BoundEvent="UICancel" 
                            ContentTemplate="{StaticResource ControllerButtonHint}"
                            Content="{Binding DataContext.CurrentPlayer.UIData.InputEvents, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}, ConverterParameter=UICancel, Converter={StaticResource FindInputEventConverter}}" 
                            Tag="{Binding Source='h411fb88eg5261g437aga291g2fb260e633c6', Converter={StaticResource TranslatedStringConverter}}" />
                    </StackPanel>
                </Grid>
            </Border>
            
            <ControlTemplate.Triggers>
                <DataTrigger Value="False">
                    <DataTrigger.Binding>
                        <MultiBinding Converter="{StaticResource LessThanOrEqualMultiConverter}" FallbackValue="False">
                            <Binding Path="FocusedElement.DataContext.LearnCost" RelativeSource="{RelativeSource Mode=Self}"/>
                            <Binding Path="CurrentPlayer.PartyGold" />
                        </MultiBinding>
                    </DataTrigger.Binding>
                    <Setter TargetName="TranscribeBtn" Property="IsEnabled" Value="False"/>
                    <Setter TargetName="TranscribeText" Property="Text" Value="{Binding Source='hf1111a22g02feg4042g8de7gebb2ead7cba1', Converter={StaticResource TranslatedStringConverter}}"/>
                    <Setter TargetName="TranscribeText" Property="Foreground" Value="{StaticResource LS_alertTxtColor}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding FocusedElement.DataContext.HasRequiredLevel, RelativeSource={RelativeSource Mode=Self}}" Value="False">
                    <Setter TargetName="TranscribeBtn" Property="IsEnabled" Value="False"/>
                    <Setter TargetName="TranscribeText" Property="Text" Value="{Binding Source='h183f948agcb5cg4382g8c1ag2bdf894391f0', Converter={StaticResource TranslatedStringConverter}}"/>
                    <Setter TargetName="TranscribeText" Property="Foreground" Value="{StaticResource LS_alertTxtColor}"/>
                </DataTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </ls:UIWidget.Template>

    <b:Interaction.Triggers>
        <b:EventTrigger EventName="GotKeyboardFocus">
            <b:InvokeCommandAction Command="{Binding ShowTooltipOnUIElement}" CommandParameter="{Binding Path=FocusedElement, ElementName=LearnSpells_c}"/>
        </b:EventTrigger>
    </b:Interaction.Triggers>
</ls:UIWidget>

