<ls:UIWidget
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:ls="clr-namespace:ls;assembly=SharedGUI"
             xmlns:System="clr-namespace:System;assembly=mscorlib"
             xmlns:noesis="clr-namespace:NoesisGUIExtensions;assembly=Noesis.GUI.Extensions"
             xmlns:b="http://schemas.microsoft.com/xaml/behaviors" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             x:Name="RewardPanel"
             mc:Ignorable="d"
             ls:UIWidget.UseCustomDC="True"
             ls:UIWidget.ContextName="RewardPanel"
             d:DataContext="{d:DesignInstance Type=ls:DCRewardPanel, IsDesignTimeCreatable=True}"
             d:DesignWidth="3840" d:DesignHeight="2160"
             ls:TooltipExtender.Owner="{Binding CurrentPlayer.SelectedCharacter}"
    >
    <ls:UIWidget.Resources>
        <!--overriding these to keep the old sizes since this ui doesn't support cell scaling yet-->
        <System:Double x:Key="ScaledNewItemIconSize">102</System:Double>
        <System:Double x:Key="ScaledNewItemIconSizeHighlight">104</System:Double>
        <System:Double x:Key="ScaledNewSlotSize">112</System:Double>

        <DataTemplate x:Key="ItemIcon" >
            <Grid ToolTipService.Placement="Top" DataContext="{Binding Object}">
                <Grid.ToolTip>
                    <ls:LSTooltip IsHitTestVisible="False" Content="{Binding DataContext.Object, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                </Grid.ToolTip>
                <Image HorizontalAlignment="Center" VerticalAlignment="Center" Source="/GustavNoesisGUI;component/Assets/Reward/reward_frame.png" Stretch="None" Margin="-8"/>

                <ContentPresenter Content="{Binding .}" ContentTemplate="{StaticResource Template.GameObject}"/>
                <b:Interaction.Triggers>
                    <b:EventTrigger EventName="MouseEnter">
                        <ls:LSPlaySound Sound="UI_Shared_Hover" />
                        <b:InvokeCommandAction Command="{Binding DataContext.SetDebugUIEntityCommand, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="{Binding EntityHandle}"/>
                    </b:EventTrigger>
                    <b:EventTrigger EventName="MouseLeave">
                        <b:InvokeCommandAction Command="{Binding DataContext.ClearDebugUIEntityCommand, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}"/>
                    </b:EventTrigger>
                    <!-- Case unselecting an item, play unselected sound on click -->
                    <b:EventTrigger EventName="MouseLeftButtonDown">
                        <b:Interaction.Behaviors>
                            <b:ConditionBehavior>
                                <b:ConditionalExpression>
                                    <b:ComparisonCondition LeftOperand="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}, AncestorLevel=1}, Path=IsSelected}" Operator="Equal" RightOperand="True"/>
                                </b:ConditionalExpression>
                            </b:ConditionBehavior>
                        </b:Interaction.Behaviors>
                        <ls:LSPlaySound Sound="UI_HUD_RewardSelect_Press_Unselected"/>
                    </b:EventTrigger>
                    <!-- Case not all are selected, play selected sound on click -->
                    <b:EventTrigger EventName="MouseLeftButtonDown">
                        <b:Interaction.Behaviors>
                            <b:ConditionBehavior>
                                <b:ConditionalExpression>
                                    <b:ComparisonCondition LeftOperand="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}, AncestorLevel=1}, Path=IsSelected}" Operator="Equal" RightOperand="False"/>
                                    <b:ComparisonCondition LeftOperand="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ls:UIWidget}, AncestorLevel=1}, Path=DataContext.IsAllSelected}" Operator="Equal" RightOperand="False" />
                                </b:ConditionalExpression>
                            </b:ConditionBehavior>
                        </b:Interaction.Behaviors>
                        <ls:LSPlaySound Sound="UI_HUD_RewardSelect_Press_Selected"/>
                    </b:EventTrigger>
                    <!-- Case all are selected, play error sound on click -->
                    <b:EventTrigger EventName="MouseLeftButtonDown">
                        <b:Interaction.Behaviors>
                            <b:ConditionBehavior>
                                <b:ConditionalExpression>
                                    <b:ComparisonCondition LeftOperand="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}, AncestorLevel=1}, Path=IsSelected}" Operator="Equal" RightOperand="False"/>
                                    <b:ComparisonCondition LeftOperand="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ls:UIWidget}, AncestorLevel=1}, Path=DataContext.IsAllSelected}" Operator="Equal" RightOperand="True" />
                                </b:ConditionalExpression>
                            </b:ConditionBehavior>
                        </b:Interaction.Behaviors>
                        <ls:LSPlaySound Sound="UI_HUD_RewardSelect_Press_Error"/>
                    </b:EventTrigger>
                </b:Interaction.Triggers>
            </Grid>

        </DataTemplate>
        <ControlTemplate x:Key="LSListBoxItemItemIcon" TargetType="{x:Type ls:LSListBoxItem}">
            <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                <Grid>
                    <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    <Grid HorizontalAlignment="Center" VerticalAlignment="Bottom">
                        <Image HorizontalAlignment="Center" VerticalAlignment="Bottom" Stretch="None" Source="{StaticResource BtnSmallRound}"/>
                        <Image HorizontalAlignment="Center" VerticalAlignment="Bottom" Stretch="None" Source="/GustavNoesisGUI;component/Assets/Options/ico_check_d.png" Visibility="{Binding IsSelected, Converter={StaticResource BoolToVisibleConverter}, RelativeSource={RelativeSource TemplatedParent}}" Margin="4,0,0,0"/>
                    </Grid>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" TargetName="Border" Value="Transparent"/>
                </Trigger>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" TargetName="Border" Value="Transparent"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsMouseOver" Value="True"/>
                        <Condition Property="IsSelected" Value="True"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" TargetName="Border" Value="Transparent"/>
                </MultiTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style x:Key="ItemIconStyle" TargetType="ls:LSListBoxItem" BasedOn="{StaticResource {x:Type ls:LSListBoxItem}}" >
            <Setter Property="ContentTemplate" Value="{StaticResource ItemIcon}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template" Value="{DynamicResource LSListBoxItemItemIcon}"/>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="BorderThickness" Value="0"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="BorderThickness" Value="0"/>
                </Trigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Object.IsSelected, RelativeSource={RelativeSource Self}}" Value="False"/>
                        <Condition Binding="{Binding DataContext.IsAllSelected, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Value="True"/>
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter Property="Opacity" Value="0.7"/>
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="HeaderTextStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="{DynamicResource LS_accent75TxtColor}"/>
            <Setter Property="TextAlignment" Value="Center"/>
        </Style>

    </ls:UIWidget.Resources>
    <ls:UIWidget.ContentTemplate>
        <DataTemplate>
            <ls:LSNineSliceImage x:Name="Panel" Margin="0,0,0,208" HorizontalAlignment="Center" VerticalAlignment="Center" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" ImageSource="/GustavNoesisGUI;component/Assets/Reward/reward_bg_full.png" Slices="0,412,0,560" IconWidth="850" Padding="80,17,80,50" Width="1044">
                <Grid>
                    <Rectangle x:Name="DragObj" Fill="Transparent" Height="123" VerticalAlignment="Top" Margin="0,60,0,0"/>
                    <Image Source="pack://application:,,,/GustavNoesisGUI;component/Assets/Reward/ico_reward.png" Stretch="None" VerticalAlignment="Top"/>
                    <ls:LSButton Style="{StaticResource BigBlueButtonStyle}" VerticalAlignment="Bottom" Content="{Binding Converter={StaticResource TranslatedStringConverter}, Source=h57c4b009g2843g4098gbf30gebb4819560ca}" Command="{Binding GetRewardsAndClose.ActionCommand}" ls:LSButton.SoundID="UI_Shared_Accept" ls:LSButton.OverwriteClickSound="UI_HUD_RewardSelect_Confirm_Click" HorizontalAlignment="Center">
                        <ls:LSButton.IsEnabled>
                            <MultiBinding Converter="{StaticResource BoolAndConverter}">
                                <Binding Path="IsAllSelected"/>
                                <Binding Path="CurrentPlayer.SelectedCharacter.IsMultiplayerCharacter" />
                            </MultiBinding>
                        </ls:LSButton.IsEnabled>
                    </ls:LSButton>
                    <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,58,0,80" >
                        <b:Interaction.Behaviors>
                            <ls:LSMouseDragElementBehavior ls:LSMouseDragElementBehavior.HitArea="{Binding ElementName=DragObj, Mode=OneWay}"/>
                        </b:Interaction.Behaviors>
                        <b:Interaction.Triggers>
                            <b:EventTrigger EventName="Loaded">
                                <ls:LSPlaySound Sound="UI_HUD_Reward_Notification"/>
                            </b:EventTrigger>
                        </b:Interaction.Triggers>

                        <TextBlock Text="{Binding Converter={StaticResource TranslatedStringConverter}, Source=h41bffdc7g230bg47a5g80c0g23ea99df1a98}" Margin="0,44,0,5" Style="{DynamicResource HeaderTextStyle}" FontSize="{DynamicResource TitleFontSize}"/>

                        <ls:LSWrapPanel x:Name="QuestInfo" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Top" HorizontalContentAlignment="Center">
                            <TextBlock Text="{Binding QuestName, StringFormat='{}{0}:'}" Foreground="{DynamicResource LS_baseTxtColor}" FontSize="{StaticResource MediumFontSize}" HorizontalAlignment="Left" Margin="0 0 10 0" LineStackingStrategy="BlockLineHeight" LineHeight="{DynamicResource DefaultFontSizeLineHeight}"/>
                            <TextBlock Text="{Binding QuestDescription}" TextWrapping="Wrap" Foreground="{DynamicResource LS_accent100TxtColor}" FontSize="{StaticResource MediumFontSize}" HorizontalAlignment="Left" TextAlignment="Center" LineStackingStrategy="BlockLineHeight" LineHeight="{DynamicResource DefaultFontSizeLineHeight}"/>
                        </ls:LSWrapPanel>

                        <StackPanel VerticalAlignment="Top" Margin="0,20,0,0">
                            <StackPanel>
                                <TextBlock Text="{Binding Converter={StaticResource TranslatedStringConverter}, Source=h24eeec24gae44g42edg81f2g6de76f80bd10}" Style="{DynamicResource HeaderTextStyle}" Margin="0"/>
                                <ls:LSNineSliceImage x:Name="MandatoryTreasureHolder" HorizontalAlignment="Center" VerticalAlignment="Center" ImageSource="/GustavNoesisGUI;component/Assets/Reward/itemList_full.png" Slices="0,50" IconWidth="108" Padding="40" Visibility="{Binding MandatoryItems.Slots.Count, Converter={StaticResource CountToVisibilityConverter}, Mode=Default}" Width="660" HorizontalContentAlignment="Center" Margin="0,-14,0,0">
                                    <StackPanel Orientation="Vertical">
                                        <ItemsControl x:Name="MandatoryTreasure" Tag="AllSelected" ItemsSource="{Binding MandatoryItems.Slots}" ItemTemplate="{StaticResource ItemIcon}" Background="Transparent" BorderThickness="0" MaxWidth="680" HorizontalAlignment="Center">
                                            <ItemsControl.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <ls:LSWrapPanel HorizontalContentAlignment="Center" HorizontalAlignment="Center" />
                                                </ItemsPanelTemplate>
                                            </ItemsControl.ItemsPanel>
                                        </ItemsControl>
                                    </StackPanel>
                                </ls:LSNineSliceImage>
                            </StackPanel>
                            <ls:LSNineSliceImage x:Name="OptionalTreasureHolder" VerticalAlignment="Top" ImageSource="/GustavNoesisGUI;component/Assets/Reward/itemBoxFull.png" Slices="236,136,236,141" IconWidth="140" Padding="40,30,40,42" Margin="0,22,0,0" Visibility="{Binding OptionalItems.Slots.Count, Converter={StaticResource CountToVisibilityConverter}, Mode=OneWay}" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" HorizontalAlignment="Stretch">
                                <StackPanel>
                                    <TextBlock Text="{Binding Converter={StaticResource TranslatedStringConverter}, Source=ha8eafa85gec0eg4c43g9c5cg75c4d31ffddf}" Style="{DynamicResource HeaderTextStyle}" Margin="0,8,0,0" />

                                    <ls:LSListBox x:Name="OptionalTreasure"
                                ItemsSource="{Binding OptionalItems.Slots}"
                                ItemContainerStyle="{StaticResource ItemIconStyle}"
                                HorizontalAlignment="Center" VerticalAlignment="Top"
                                Background="Transparent"
                                BorderThickness="0"
                                SelectionMode="Multiple"
                                MaxSelectedElements="{Binding MaxSelectedItems}" Margin="0,10,0,0" HorizontalContentAlignment="Center">
                                        <ls:LSListBox.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <ls:LSWrapPanel HorizontalContentAlignment="Center" HorizontalAlignment="Center" MaxWidth="680"/>
                                            </ItemsPanelTemplate>
                                        </ls:LSListBox.ItemsPanel>
                                        <b:Interaction.Triggers>
                                            <b:EventTrigger EventName="SelectionChanged">
                                                <b:InvokeCommandAction Command="{Binding SelectedRewardsChanged.ActionCommand}" CommandParameter="{Binding SelectedItems, ElementName=OptionalTreasure}"/>
                                            </b:EventTrigger>
                                        </b:Interaction.Triggers>
                                    </ls:LSListBox>
                                    <TextBlock Foreground="{StaticResource LS_PrimaryColor}" FontSize="{StaticResource DefaultFontSize}" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0,15,0,0">
                                        <TextBlock.Text>
                                            <MultiBinding StringFormat="{}{0}/{1}">
                                                <Binding Path="SelectedItemsCount"/>
                                                <Binding Path="MaxSelectedItems"/>
                                            </MultiBinding>
                                        </TextBlock.Text>
                                    </TextBlock>
                                </StackPanel>
                            </ls:LSNineSliceImage>
                        </StackPanel>
                        <TextBlock x:Name="CharacterName" TextWrapping="Wrap" HorizontalAlignment="Center" Foreground="{DynamicResource LS_accent75TxtColor}" Margin="0,0,0,10">
                            <Run Text="{Binding CurrentPlayer.SelectedCharacter.Name}"/>
                            <Run x:Name="ClaimWarning" Text="" Foreground="{DynamicResource LS_alertTxtColor}"/>
                        </TextBlock>

                        <StackPanel x:Name="PanelButtons" HorizontalAlignment="Center" VerticalAlignment="Bottom" MaxWidth="900" Margin="0,0,0,40" Orientation="Horizontal">
                            <ls:LSButton x:Name="InventoryButton" Template="{StaticResource IconButtonTemplate}" Command="{Binding CustomEvent}" CommandParameter="ToggleCharacterPanel" ls:LSButton.SoundID="UI_HUD_RewardSelect_Inventory">
                                <ls:LSButton.Resources>
                                    <ImageSource x:Key="IconNormal">pack://application:,,,/GustavNoesisGUI;component/Assets/BottomBar/ico_inventory_d.png</ImageSource>
                                    <ImageSource x:Key="IconHighlight">pack://application:,,,/GustavNoesisGUI;component/Assets/BottomBar/ico_inventory_h.png</ImageSource>
                                    <ImageSource x:Key="IconPressed">pack://application:,,,/GustavNoesisGUI;component/Assets/BottomBar/ico_inventory_d.png</ImageSource>
                                    <ImageSource x:Key="IconDisabled">pack://application:,,,/GustavNoesisGUI;component/Assets/BottomBar/ico_inventory_disabled.png</ImageSource>
                                    <ImageSource x:Key="ButtonNormal">pack://application:,,,/GustavNoesisGUI;component/Assets/Buttons/btn_hudNav_d.png</ImageSource>
                                    <ImageSource x:Key="ButtonHighlight">pack://application:,,,/GustavNoesisGUI;component/Assets/Buttons/btn_hudNav_h.png</ImageSource>
                                    <ImageSource x:Key="ButtonPressed">pack://application:,,,/GustavNoesisGUI;component/Assets/Buttons/btn_hudNav_p.png</ImageSource>
                                    <ImageSource x:Key="ButtonDisabled">pack://application:,,,/GustavNoesisGUI;component/Assets/Buttons/btn_hudNav_disabled.png</ImageSource>
                                    <System:Double x:Key="IconWidth">52</System:Double>
                                    <System:Double x:Key="IconHeight">52</System:Double>
                                </ls:LSButton.Resources>
                            </ls:LSButton>
                            <TextBlock Text="{Binding Converter={StaticResource TranslatedStringConverter}, Source=ha6637339gc9adg4d0agb856g67b4662bbb8a}" Foreground="{StaticResource LS_baseTxtColor}" VerticalAlignment="Center" Margin="10,0,0,0"/>
                        </StackPanel>
                    </StackPanel>
                </Grid>
            </ls:LSNineSliceImage>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding CurrentPlayer.SelectedCharacter.IsMultiplayerCharacter}" Value="False">
                    <Setter TargetName="ClaimWarning" Property="Text"  Value="{Binding Converter={StaticResource TranslatedStringConverter}, Source=hdf342c97g8f0fg44bag8ffdg0e5b8b212b87, StringFormat=({0})}"/>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>
    </ls:UIWidget.ContentTemplate>
</ls:UIWidget>