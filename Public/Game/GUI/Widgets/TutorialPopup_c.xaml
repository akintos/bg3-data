<ls:UIWidget x:Name="TutorialPopup"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:noesis="clr-namespace:NoesisGUIExtensions;assembly=Noesis.GUI.Extensions"
             xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
             
             xmlns:System="clr-namespace:System;assembly=mscorlib"
             xmlns:ls="clr-namespace:ls;assembly=SharedGUI"
             ls:UIWidget.UseCustomDC="True"
             ls:UIWidget.ContextName="TutorialPopupContext">

    <Grid Background="{StaticResource LS_PanelBackground}">

        <StackPanel HorizontalAlignment="Center" VerticalAlignment="Stretch">
            <Grid Margin="0,0,0,-28">
                <Image Source="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/c_panel_top_alt.png" Stretch="None" VerticalAlignment="Bottom"/>

                <ls:LSListBox x:Name="TutorialsList" ItemsSource="{Binding Tutorials}" SelectedIndex="0"
                              AlternationCount="{Binding Tutorials.Count}"
                              MaxWidth="2134" HorizontalAlignment="Center" VerticalAlignment="Bottom"
                              KeyboardNavigation.DirectionalNavigation="Continue" Margin="0,70,0,150"
                              ActionPrevEvent="UITabPrev" ActionNextEvent="UITabNext">
                    <!-- This tag is use to check whether the last item is selected -->
                    <ls:LSListBox.Tag>
                        <MultiBinding Converter="{StaticResource EqualConverter}">
                            <Binding Path="SelectedIndex" ElementName="TutorialsList"/>
                            <Binding Path="ItemsSource.Count" ElementName="TutorialsList" Converter="{StaticResource AddConverter}" ConverterParameter="-1"/>
                        </MultiBinding>
                    </ls:LSListBox.Tag>
                    <ls:LSListBox.Template>
                        <ControlTemplate TargetType="ls:LSListBox">
                            <ls:LSScrollViewer>
                                <ItemsPresenter/>
                            </ls:LSScrollViewer>
                        </ControlTemplate>
                    </ls:LSListBox.Template>
                    <ls:LSListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Horizontal"/>
                        </ItemsPanelTemplate>
                    </ls:LSListBox.ItemsPanel>
                    <ls:LSListBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <Ellipse x:Name="dot" Width="20" Height="20" Fill="{StaticResource LS_InactivePanelFontColor}" Margin="20"/>
                                <TextBlock x:Name="txt" Text="{Binding Title}" Foreground="{DynamicResource LS_PrimaryColorDisabled}" FontSize="{StaticResource TitleFontSize}"/>
                            </StackPanel>
                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding (ItemsControl.AlternationIndex), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ls:LSListBoxItem}}}" Value="0">
                                    <Setter TargetName="dot" Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Value="True">
                                    <Setter TargetName="txt" Property="Foreground" Value="{DynamicResource LS_PrimaryColor}"/>
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </ls:LSListBox.ItemTemplate>
                    <ls:LSListBox.ItemContainerStyle>
                        <Style TargetType="ls:LSListBoxItem" BasedOn="{StaticResource {x:Type ListBoxItem}}">
                            <Setter Property="Focusable" Value="True"/>
                        </Style>
                    </ls:LSListBox.ItemContainerStyle>
                </ls:LSListBox>

                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0,30" Height="140"
                        Visibility="{Binding Tutorials.Count, Converter={StaticResource CountToVisibilityConverter}, ConverterParameter='1'}">
                    <ls:LSButton DataContext = "{Binding CurrentPlayer.UIData.InputEvents, Converter={StaticResource FindInputEventConverter}, ConverterParameter='UITabPrev'}"
                                 Content="" EatInput="False">
                        <ls:LSButton.Style>
                            <Style TargetType="ls:LSButton" BasedOn="{StaticResource ControllerButton}">
                                <Setter Property="IsEnabled" Value="True"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding SelectedIndex, ElementName=TutorialsList}" Value="0">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ls:LSButton.Style>
                    </ls:LSButton>
                    <Path Data="M 34 10 L 20 24 L 34 38 L 24 48 L 0 24 L 24 0 Z" Fill="{DynamicResource LS_InactivePanelFontColor}" Width="34" Height="48">
                        <Path.Style>
                            <Style TargetType="Path">
                                <Setter Property="Opacity" Value="1"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding SelectedIndex, ElementName=TutorialsList}" Value="0">
                                        <Setter Property="Opacity" Value="0.7"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Path.Style>
                    </Path>
                    <TextBlock Foreground="{StaticResource LS_ActivePanelFontColor}" FontSize="{StaticResource DefaultFontSize}" VerticalAlignment="Center" Margin="80,0">
                        <Run Text="Tutorial"/>
                        <Run Text="{Binding SelectedIndex, ElementName=TutorialsList, Converter={StaticResource AddConverter}, ConverterParameter='1'}"/>
                        <Run Text="/"/>
                        <Run Text="{Binding Tutorials.Count}"/>
                    </TextBlock>
                    <Path Data="M 0 10 L 14 24 L 0 38 L 10 48 L 34 24 L 10 0 Z" Fill="{DynamicResource LS_InactivePanelFontColor}" Width="34" Height="48">
                        <Path.Style>
                            <Style TargetType="Path">
                                <Setter Property="Opacity" Value="1"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Tag, ElementName=TutorialsList}" Value="True">
                                        <Setter Property="Opacity" Value="0.7"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Path.Style>
                    </Path>
                    <ls:LSButton DataContext = "{Binding CurrentPlayer.UIData.InputEvents, Converter={StaticResource FindInputEventConverter}, ConverterParameter='UITabNext'}"
                                 Content="" EatInput="False">
                        <ls:LSButton.Style>
                            <Style TargetType="ls:LSButton" BasedOn="{StaticResource ControllerButton}">
                                <Setter Property="IsEnabled" Value="True"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Tag, ElementName=TutorialsList}" Value="True">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ls:LSButton.Style>
                    </ls:LSButton>
                </StackPanel>
            </Grid>

            <StackPanel DataContext="{Binding SelectedItem, ElementName=TutorialsList}" HorizontalAlignment="Center" Width="1800" Margin="0,0,0,150">
                <StackPanel.Background>
                    <ImageBrush ImageSource="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/c_panel_bg.png"/>
                </StackPanel.Background>

                <!--No videos for now-->
                <!--<Grid>
                    <ls:LSVideoPanel Width="1280" Height="720" Video="{Binding Video}"/>
                    <Image x:Name="VideoFrame" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/Journal/frame_tutorial.png" Stretch="None" Margin="0,26"/>
                </Grid>-->

                <Grid Margin="0,0,0,-20">
                    <Image Source="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/c_panel_bottom_standard.png" Stretch="None" VerticalAlignment="Bottom"/>
                
                <ScrollViewer Template="{DynamicResource ScrollViewerTemplate}" HorizontalAlignment="Center" Height="750" VerticalScrollBarVisibility="Visible" Margin="100,0,0,150" Padding="100,0,0,0">
                    <TextBlock FontSize="{StaticResource DefaultFontSize}" Foreground="{StaticResource LS_InactivePanelFontColor}"
                               Width="1200" TextWrapping="Wrap">
                        <b:Interaction.Behaviors>
                            <ls:CtxTransStringRunGeneratorBehavior LocaSource="{Binding Description}"
                                                                   NamedParamInputEvents="{Binding Path=DataContext.CurrentPlayer.UIData.InputEvents, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}">
                                <ls:CtxTransStringRunGeneratorBehavior.NamedParamContentStyle>
                                    <Style TargetType="ContentControl">
                                        <Setter Property="Margin" Value="0,0,0,-30" />
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate>
                                                    <Viewbox StretchDirection="DownOnly" MaxHeight="80">
                                                        <ContentControl Template="{StaticResource ControllerButton.ImageSwitcher}" />
                                                    </Viewbox>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ls:CtxTransStringRunGeneratorBehavior.NamedParamContentStyle>
                            </ls:CtxTransStringRunGeneratorBehavior>
                        </b:Interaction.Behaviors>
                    </TextBlock>
                </ScrollViewer>
                </Grid>
            </StackPanel>
        </StackPanel>

        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0,40">
            <ls:LSButton Style="{StaticResource ControllerButton}"
                         DataContext = "{Binding CurrentPlayer.UIData.InputEvents, Converter={StaticResource FindInputEventConverter}, ConverterParameter='UIAccept'}"
                         Content="{Binding Source='h46d2dc60gd45cg42f9g8d07g767db1fa1396',Converter={StaticResource TranslatedStringConverter}}" 
                         Command="{Binding DataContext.OpenInJournalCommand, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}"
                         CommandParameter="{Binding SelectedItem, ElementName=TutorialsList}"
                         SoundID="UI_HUD_Journal">
            </ls:LSButton>
            <ls:LSButton Style="{StaticResource ControllerButton}"
                         DataContext = "{Binding CurrentPlayer.UIData.InputEvents, Converter={StaticResource FindInputEventConverter}, ConverterParameter='UICancel'}"
                         Content="{Binding Source='h6fefa28bg2149g4cacga071gd95b236b2d0b',Converter={StaticResource TranslatedStringConverter}}" 
                         Command="{Binding DataContext.CustomEvent, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="CloseWidget"
                         SoundID="UI_Shared_Cancel">
            </ls:LSButton>
        </StackPanel>
    </Grid>

    <b:Interaction.Triggers>
        <b:EventTrigger EventName="Loaded">
            <ls:LSPlaySound Sound="UI_HUD_TutorialPanel_Open"/>
        </b:EventTrigger>
    </b:Interaction.Triggers>
</ls:UIWidget>