<ls:UIWidget x:Name="GammaCalibration"
             ContextName="GammaCalibration"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:ls="clr-namespace:ls;assembly=SharedGUI"
             xmlns:noesis="clr-namespace:NoesisGUIExtensions;assembly=Noesis.GUI.Extensions"
             xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
    		 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
			 mc:Ignorable="d"
             d:DesignWidth="3840" d:DesignHeight="2160"
             ls:UIWidget.Focusable="False"
             d:DataContext="{d:DesignInstance Type=ls:DCGammaCalibration}">

    <ls:UIWidget.Resources>
        <ResourceDictionary Source="../Library/OptionTemplates.xaml"/>
    </ls:UIWidget.Resources>

    <ls:UIWidget.Template>
        <ControlTemplate>
            <ControlTemplate.Resources>
                
                <BitmapImage x:Key="FooterBottomDecor" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/DMSettings/footer_centerDecors.png" />
                <BitmapImage x:Key="GammaImage" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/Options/gammaCalibration.png" />
                
                <Style x:Key="Text" TargetType="TextBlock">
                    <Setter Property="FontSize" Value="{StaticResource ScaledLargeFontSize}"/>
                    <Setter Property="Foreground" Value="{StaticResource LS_accent100TxtColor}"/>
                    <Setter Property="HorizontalAlignment" Value="Center"/>
                    <Setter Property="VerticalAlignment" Value="Center"/>
                    <Setter Property="TextAlignment" Value="Center"/>
                    <Setter Property="TextWrapping" Value="Wrap"/>
                    <Setter Property="noesis:Text.Stroke" Value="{StaticResource LS_PrimaryColorOutlineColor}"/>
                    <Setter Property="noesis:Text.StrokeThickness" Value="2"/>
                </Style>
            </ControlTemplate.Resources>

            <Border Background="Black">
                <Grid MaxWidth="{StaticResource DesignedContentMaxWidth}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="{StaticResource PageHeaderHeight}"/>
                        <RowDefinition/>
                        <RowDefinition Height="{StaticResource PageFooterHeight}"/>
                    </Grid.RowDefinitions>

                    <b:Interaction.Triggers>
                        <b:PropertyChangedTrigger Binding="{Binding Gamma}">
                            <b:InvokeCommandAction Command="{Binding SliderUpdateCommand}"/>
                        </b:PropertyChangedTrigger>
                    </b:Interaction.Triggers>

                    <Image Grid.Row="0" Grid.RowSpan="3"  Source="{StaticResource GammaImage}" Stretch="None"/>

                    <Control Grid.Row="0" Template="{StaticResource PageHeader}" Tag="{Binding Source='h9cf496a5gae80g41f4g9e8ag47703135a6a0', Converter={StaticResource TranslatedStringConverter}}"/>

                    <StackPanel Grid.Row="1" VerticalAlignment="Bottom">
                        <Grid Width="2940" HorizontalAlignment="Center" Margin="0,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <TextBlock Grid.Column="0" Text="{Binding Source='hcfa33f5dgcaefg4bc2gb817gfba5fa094bbe',Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource Text}"/>
                            <TextBlock Grid.Column="1" Text="{Binding Source='hc38ff11aga42eg4492g8811g5b8787faf0f9',Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource Text}"/>
                            <TextBlock Grid.Column="2" Text="{Binding Source='ha021830ag4e14g4f92gaf34gd51746be7939',Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource Text}"/>
                        </Grid>

                        <TextBlock Text="{Binding Source='h54390f10g0d65g437cgab74g97602f5d8506',Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource Text}" MaxWidth="1600" Margin="0,140,0,0"/>
                        
                        <Slider Template="{StaticResource OptionsSliderTemplate}"
                                Value="{Binding Gamma, Mode=TwoWay}"
                                Minimum="0.5"
                                Maximum="1.5"
                                IsSnapToTickEnabled="False"
                                SmallChange=".01"
                                LargeChange=".01"
                                IsEnabled="True"
                                Margin="0,28,0,32"/>
                    </StackPanel>

                    <Grid Grid.Row="2" Margin="120,0">
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="72"/>
                        </Grid.RowDefinitions>

                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                            <ls:LSButton x:Name="CancelButton" Style="{StaticResource BigBrownButtonStyle}" 
                                         Content="{Binding Source='h675a55aegd07cg4ab0g862dg0c564197d478', Converter={StaticResource TranslatedStringConverter}}" 
                                         Command="{Binding CancelCommand}"/>
                            
                            <ls:LSButton x:Name="AcceptButton" Style="{StaticResource BigBlueButtonStyle}" 
                                         Content="{Binding Source='hb625919egaa48g48aegbdd8g99a9c590323e', Converter={StaticResource TranslatedStringConverter}}" 
                                         Command="{Binding CustomEvent}" CommandParameter="CloseWidget"/>
                            
                            <ls:LSButton x:Name="ResetButton" Style="{StaticResource BigBrownButtonStyle}" 
                                         Content="{Binding Source='hfd177f05g1bdeg4296g8713g096bc46263ca', Converter={StaticResource TranslatedStringConverter}}" 
                                         Command="{Binding ResetToDefaultCommand}"/>
                        </StackPanel>

                        <ls:LSButton x:Name="ResetButtonFirstTimeSetup" Style="{StaticResource BigBrownButtonStyle}" 
                                     Content="{Binding Source='hfd177f05g1bdeg4296g8713g096bc46263ca', Converter={StaticResource TranslatedStringConverter}}" 
                                     Command="{Binding ResetToDefaultCommand}" 
                                     HorizontalAlignment="Right" Visibility="Collapsed"/>

                        <Image Grid.Row="0" Source="{StaticResource FooterBottomDecor}" VerticalAlignment="Bottom" Stretch="None" Margin="0,-20"/>
                    </Grid>
                </Grid>
            </Border>

            <ControlTemplate.Triggers>
                <DataTrigger Binding="{Binding ShowFirstTimeSetup}" Value="True">
                    <Setter TargetName="CancelButton" Property="Visibility" Value="Collapsed"/>
                    <Setter TargetName="ResetButton" Property="Visibility" Value="Collapsed"/>
                    <Setter TargetName="ResetButtonFirstTimeSetup" Property="Visibility" Value="Visible"/>
                    <Setter TargetName="AcceptButton" Property="CommandParameter" Value="OpenSplashScreen"/>
                </DataTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </ls:UIWidget.Template>
</ls:UIWidget>