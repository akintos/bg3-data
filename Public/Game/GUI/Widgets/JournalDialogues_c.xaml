<ls:UIWidget x:Name="JournalDialogues_c"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:ls="clr-namespace:ls;assembly=SharedGUI"
			 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
			 mc:Ignorable="d"
             ls:UIWidget.ContextName="JournalDialogues" d:DataContext="{d:DesignInstance {x:Type ls:DCJournalDialogues}, IsDesignTimeCreatable=True}"
             CanCacheFocusSurroundingElements="False"
             d:DesignHeight="2160" d:DesignWidth="3840">

    <ls:UIWidget.Template>
        <ControlTemplate>
            <ControlTemplate.Resources>
                <ResourceDictionary>
                    <ResourceDictionary.MergedDictionaries>
                        <ResourceDictionary Source="../Library/JournalTemplates_c.xaml"/>
                    </ResourceDictionary.MergedDictionaries>

                    <BitmapImage x:Key="DialoguePortraitFrameDetail" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/Journal_c/c_dialoguePortraitFrameDetail.png" />
                    <BitmapImage x:Key="DialoguePortraitFrame" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/Journal_c/c_dialoguePortraitFrame.png" />

                    

                    <!-- Category for LOCATION based sorting -->
                    <DataTemplate DataType="{x:Type ls:JournalDialogueMapGroup}">
                        <ls:LSToggleButton x:Name="ExpanderButton" IsChecked="{Binding AreDialoguesShown, Mode=TwoWay}" ls:MoveFocus.IsFocused="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=ListBoxItem}}"
                                           Template="{StaticResource Journal.ListItemTemplate}" Command="{Binding DataContext.ToggleMapGroup, ElementName=JournalDialogues_c}" BoundEvent="" MinHeight="65">
                            <DockPanel Margin="20,0,20,0">
                                <DockPanel.Resources>
                                    <Style TargetType="TextBlock" BasedOn="{StaticResource Journal.BaseTextStyle}">
                                        <Setter Property="FontSize" Value="{StaticResource ScaledLargeFontSize}"/>
                                        <Setter Property="Foreground" Value="{StaticResource LS_accent100TxtColor}"/>
                                    </Style>
                                </DockPanel.Resources>
                                <Image x:Name="Arrow" DockPanel.Dock="Left" Source="{StaticResource ListArrowCollapsed}" Stretch="None" Margin="-18,-18,-8,-18"/>
                                <TextBlock x:Name="Map" DockPanel.Dock="Right" Text="{Binding Map}" HorizontalAlignment="Left" VerticalAlignment="Center" TextWrapping="Wrap"/>
                            </DockPanel>
                        </ls:LSToggleButton>
                        <DataTemplate.Triggers>
                            <Trigger SourceName="ExpanderButton" Property="IsChecked" Value="True">
                                <Setter TargetName="Arrow" Property="Source" Value="{StaticResource ListArrowExpanded}"/>
                            </Trigger>
                            <Trigger SourceName="ExpanderButton" Property="ls:MoveFocus.IsFocused" Value="True">
                                <Setter TargetName="Arrow" Property="Source" Value="{StaticResource ListArrowCollapsedH}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition SourceName="ExpanderButton" Property="IsChecked" Value="True"/>
                                    <Condition SourceName="ExpanderButton" Property="ls:MoveFocus.IsFocused" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Arrow" Property="Source" Value="{StaticResource ListArrowExpandedH}"/>
                            </MultiTrigger>

                            <!-- We can't disable it since it prevents focus, so change the event instead -->
                            <Trigger SourceName="ExpanderButton" Property="ls:MoveFocus.IsFocused" Value="True">
                                <Setter TargetName="ExpanderButton" Property="BoundEvent" Value="UIAccept"/>
                            </Trigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>

                    <!-- Category for DATE based sorting -->
                    <DataTemplate DataType="{x:Type ls:JournalDialogueDayGroup}">
                        <ls:LSToggleButton x:Name="ExpanderButton" Grid.Column="0" IsChecked="{Binding AreDialoguesShown, Mode=TwoWay}" ls:MoveFocus.IsFocused="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=ListBoxItem}}"
                                           Template="{StaticResource Journal.ListItemTemplate}" Command="{Binding DataContext.ToggleDateGroup, ElementName=JournalDialogues_c}" BoundEvent="">
                            <StackPanel Orientation="Horizontal" Margin="20,0,20,0">
                                <StackPanel.Resources>
                                    <Style TargetType="TextBlock" BasedOn="{StaticResource Journal.BaseTextStyle}">
                                        <Setter Property="FontSize" Value="{StaticResource ScaledLargeFontSize}"/>
                                        <Setter Property="Foreground" Value="{StaticResource LS_accent100TxtColor}"/>
                                    </Style>
                                </StackPanel.Resources>
                                <Image x:Name="Arrow" Source="{StaticResource ListArrowCollapsed}" Stretch="None" Margin="-18,-18,-8,-18"/>
                                <TextBlock x:Name="Day" Text="{Binding DayOfMonth}" HorizontalAlignment="Left" VerticalAlignment="Center" TextWrapping="Wrap"/>
                                <TextBlock x:Name="Separator" Text="{Binding Source=h2519408dg5fd7g4cbcg840cg14370239edf8, Converter={StaticResource TranslatedStringConverter}}" HorizontalAlignment="Left" VerticalAlignment="Center" TextWrapping="Wrap"/>
                                <TextBlock x:Name="Month" Text="{Binding MonthName}" HorizontalAlignment="Left" VerticalAlignment="Center" TextWrapping="Wrap"/>
                            </StackPanel>
                        </ls:LSToggleButton>
                        <DataTemplate.Triggers>
                            <Trigger SourceName="ExpanderButton" Property="IsChecked" Value="True">
                                <Setter TargetName="Arrow" Property="Source" Value="{StaticResource ListArrowExpanded}"/>
                            </Trigger>
                            <Trigger SourceName="ExpanderButton" Property="ls:MoveFocus.IsFocused" Value="True">
                                <Setter TargetName="Arrow" Property="Source" Value="{StaticResource ListArrowCollapsedH}"/>
                                <!-- We can't disable it since it prevents focus, so change the event instead -->
                                <Setter TargetName="ExpanderButton" Property="BoundEvent" Value="UIAccept"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition SourceName="ExpanderButton" Property="IsChecked" Value="True"/>
                                    <Condition SourceName="ExpanderButton" Property="ls:MoveFocus.IsFocused" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Arrow" Property="Source" Value="{StaticResource ListArrowExpandedH}"/>
                            </MultiTrigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>

                    <!-- Paticipants list item style -->
                    <Style x:Key="ParticipantsNamesStyle" TargetType="ItemsControl">
                        <Setter Property="ItemsPanel">
                            <Setter.Value>
                                <ItemsPanelTemplate>
                                    <WrapPanel/>
                                </ItemsPanelTemplate>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="ItemTemplate">
                            <Setter.Value>
                                <DataTemplate DataType="{x:Type ls:DialogueParticipant}">
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock x:Name="Name" DockPanel.Dock="Left" Text="{Binding Name}" Style="{DynamicResource ParticipantsTextStyle}"/>
                                        <TextBlock x:Name="Separator" DockPanel.Dock="Right" Text="{Binding Source=h2519408dg5fd7g4cbcg840cg14370239edf8, Converter={StaticResource TranslatedStringConverter}}" Style="{DynamicResource ParticipantsTextStyle}"/>
                                    </StackPanel>
                                    <DataTemplate.Triggers>
                                        <DataTrigger Value="False">
                                            <DataTrigger.Binding>
                                                <MultiBinding Converter="{StaticResource LessThanOrEqualMultiConverter}">
                                                    <Binding Path="(ItemsControl.AlternationIndex)" RelativeSource="{RelativeSource Mode=Self}" Converter="{StaticResource AddConverter}" ConverterParameter="2"/>
                                                    <Binding Path="(ItemsControl.AlternationCount)" RelativeSource="{RelativeSource AncestorType={x:Type ItemsControl}}"/>
                                                </MultiBinding>
                                            </DataTrigger.Binding>
                                            <Setter TargetName="Separator" Property="Visibility" Value="Collapsed"/>
                                        </DataTrigger>
                                    </DataTemplate.Triggers>
                                </DataTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <!-- Dialogue list item (for both categories) -->
                    <DataTemplate DataType="{x:Type ls:JournalDialogue}">
                        <ContentControl x:Name="Container" Template="{StaticResource Journal.ListItemTemplate}" MinHeight="65" ls:MoveFocus.IsFocused="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=ListBoxItem}}">
                            <StackPanel Margin="80,0,34,0">
                                <b:Interaction.Behaviors>
                                    <ls:CollectionFilterBehavior x:Name="NoNarratorParticipants" ItemsSource="{Binding Participants}" Predicate="{Binding DataContext.Data.DialogueParticipantNoNarratorPredicate, ElementName=JournalDialogues_c}"/>
                                </b:Interaction.Behaviors>
                                <ItemsControl x:Name="Names" ItemsSource="{Binding FilteredItems, ElementName=NoNarratorParticipants}" AlternationCount="{Binding FilteredItems.Count, ElementName=NoNarratorParticipants}" Style="{StaticResource ParticipantsNamesStyle}" HorizontalAlignment="Left">
                                    <ItemsControl.Resources>
                                        <Style x:Key="ParticipantsTextStyle" TargetType="TextBlock" BasedOn="{StaticResource Journal.BaseTextStyle}">
                                            <Setter Property="Foreground" Value="{StaticResource LS_accent75TxtColor}"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=(ls:MoveFocus.IsFocused), RelativeSource={RelativeSource AncestorType={x:Type ContentControl}, AncestorLevel=1}}" Value="True">
                                                    <Setter Property="Foreground" Value="{StaticResource LS_tint100}"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ItemsControl.Resources>
                                </ItemsControl>
                                <TextBlock x:Name="Location" Text="{Binding Map}" Style="{StaticResource Journal.ObjectiveStepStyle}" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                <StackPanel x:Name="DateInfo"  Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center" Visibility="{Binding Path=Visibility, ElementName=Location,Converter={StaticResource InvertVisibilityConverter}}">
                                    <TextBlock x:Name="Day" Text="{Binding DayOfMonth}" Style="{StaticResource Journal.ObjectiveStepStyle}">
                                        <Run Text="{Binding Source=h2519408dg5fd7g4cbcg840cg14370239edf8, Converter={StaticResource TranslatedStringConverter}}"/><Run Text="{Binding MonthName}"/>
                                    </TextBlock>
                                </StackPanel>
                            </StackPanel>
                        </ContentControl>
                        <DataTemplate.Triggers>
                            <Trigger SourceName="Container" Property="ls:MoveFocus.IsFocused" Value="True">
                                <Setter TargetName="Location" Property="Foreground" Value="{StaticResource LS_accent100TxtColor}"/>
                                <Setter TargetName="Day" Property="Foreground" Value="{StaticResource LS_accent75TxtColor}"/>
                            </Trigger>
                            <DataTrigger Binding="{Binding DataContext.GroupingTab, ElementName=JournalDialogues_c}" Value="ByMap">
                                <Setter TargetName="Location" Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Participants.Count}" Value="1">
                                <Setter TargetName="Names" Property="ItemsSource" Value="{Binding Participants}"/>
                                <Setter TargetName="Names" Property="AlternationCount" Value="1"/>
                            </DataTrigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>
                </ResourceDictionary>
            </ControlTemplate.Resources>

            <Grid x:Name="root" ls:TooltipExtender.Owner="{Binding CurrentPlayer.SelectedCharacter}" ClipToBounds="True" Tag="SplitScreen">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition x:Name="ColumnDef0" Width="1*"/>
                    <ColumnDefinition x:Name="ColumnDef1" Width="3*"/>
                    <ColumnDefinition x:Name="ColumnDef2" Width="4*"/>
                    <ColumnDefinition x:Name="ColumnDef3" Width="31*"/>
                    <ColumnDefinition x:Name="ColumnDef4" Width="1*"/>
                    <ColumnDefinition x:Name="ColumnDef5" Width="0"/>
                    <ColumnDefinition x:Name="ColumnDef6" Width="0"/>
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition Height="4*"/>
                    <RowDefinition Height="6*"/>
                    <RowDefinition Height="35*"/>
                    <RowDefinition Height="5*"/>
                </Grid.RowDefinitions>

                <Image Grid.Column="0" Grid.ColumnSpan="7" Grid.Row="0" Grid.RowSpan="4" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Source="{StaticResource CharacterSheetBackground}" Stretch="UniformToFill"/>

                <Grid Grid.Row="0" Grid.ColumnSpan="7" Width="auto" Height="164" VerticalAlignment="Top">
                    <Control Template="{StaticResource TopCarouselBackground}" />
                </Grid>
                <Control  Grid.Row="0" Grid.ColumnSpan="7" x:Name="c_PartyGold" Visibility="Collapsed" Style="{StaticResource PartyGoldStyle}" />
                
                <Control Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="7" x:Name="Navigation" HorizontalAlignment="Center" Style="{StaticResource Journal.NavigationStyle}"/>

                <Grid x:Name="MainPanel" Grid.Column="3" Grid.Row="1" Grid.RowSpan="2" IsEnabled="True">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="3*"/>
                        <RowDefinition Height="17*"/>
                    </Grid.RowDefinitions>

                    <b:Interaction.Behaviors>
                        <ls:CollectionFilterBehavior x:Name="ExpandedDialoguesByDate" ItemsSource="{Binding DialoguesGroupedByDate}" Predicate="{Binding DataContext.ExpandedDialogueByDatePredicate, ElementName=JournalDialogues_c}"/>
                        <ls:CollectionFilterBehavior x:Name="ExpandedDialoguesByMap" ItemsSource="{Binding DialoguesGroupedByMap}" Predicate="{Binding DataContext.ExpandedDialogueByMapPredicate, ElementName=JournalDialogues_c}"/>
                    </b:Interaction.Behaviors>

                    <TextBlock x:Name="CategoryTitle" Grid.Row="0" Text="{Binding Source='he9e4a39fg8a5dg4ac5gacffgaea214260c69', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource Journal.TitleStyle}" Margin="{StaticResource Journal.CategoryTitleMargin}" HorizontalAlignment="Left" VerticalAlignment="Top"/>

                    <!-- Treeview faked with a listbox to optimize performance (for virtualization) -->
                    <ListBox x:Name="DialoguesTree" Grid.Row="1" ItemsSource="{Binding FilteredItems, ElementName=ExpandedDialoguesByDate}" BorderBrush="Transparent" SelectedIndex="1" ls:MoveFocus.IsFocused="True">
                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel VerticalAlignment="Top" VirtualizationMode="Recycling" ScrollUnit="Item"/>
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>
                        <ListBox.ItemContainerStyle>
                            <Style TargetType="{x:Type ListBoxItem}">
                                <Setter Property="BorderBrush" Value="Transparent" />
                                <Setter Property="Background" Value="Transparent" />
                                <Setter Property="Padding" Value="0" />
                                <Setter Property="BorderThickness" Value="0" />
                                <Setter Property="HorizontalAlignment" Value="Stretch" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <ContentPresenter x:Name="PART_Content" HorizontalAlignment="Stretch"/>

                                            <ControlTemplate.Triggers>
                                                <DataTrigger Binding="{Binding ., Converter={StaticResource TypeConverter}}" Value="ls.JournalDialogue">
                                                    <Setter TargetName="PART_Content" Property="Margin" Value="{StaticResource Journal.ListItemMargin}"/>
                                                </DataTrigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ListBox.ItemContainerStyle>
                        <ListBox.Template>
                            <ControlTemplate>
                                <ScrollViewer x:Name="ScrollViewer" Template="{StaticResource StretchingScrollViewerTemplate}" VerticalScrollBarVisibility="Visible" HorizontalScrollBarVisibility="Disabled">
                                    <ScrollViewer.Resources>
                                        <Style TargetType="ScrollBar" BasedOn="{StaticResource MinimalGoldScrollbar}"/>
                                        <GridLength x:Key="Left">0</GridLength>
                                        <GridLength x:Key="Right">0</GridLength>
                                    </ScrollViewer.Resources>
                                    <ItemsPresenter Margin="{StaticResource Journal.ScrollViewerMargin}">
                                        <ItemsPresenter.Width>
                                            <!-- Stretched content doesn't property shrink when shrinking a ScrollViewer -->
                                            <MultiBinding Converter="{StaticResource SubtractionMultipleConverter}">
                                                <Binding Path="ActualWidth" ElementName="ScrollViewer"/>
                                                <Binding Source="80"/>
                                            </MultiBinding>
                                        </ItemsPresenter.Width>
                                    </ItemsPresenter>
                                </ScrollViewer>
                            </ControlTemplate>
                        </ListBox.Template>

                        <b:Interaction.Behaviors>
                            <ls:FocusToSelectionBehavior SelectPrevious="UIUp" SelectNext="UIDown" SelectionChangedSoundId="UI_Shared_Hover"/>
                            <ls:AutoScrollBehavior BringSelectionIntoView="True"/>
                        </b:Interaction.Behaviors>
                        <b:Interaction.Triggers>
                            <b:EventTrigger EventName="SelectionChanged">
                                <b:InvokeCommandAction Command="{Binding DialoguesSelectionChanged.ActionCommand}" CommandParameter="{Binding ElementName=DialoguesTree, Path=SelectedItem}"/>
                            </b:EventTrigger>
                        </b:Interaction.Triggers>
                    </ListBox>
                </Grid>

                <Grid x:Name="SidePanel" Grid.Column="2" Grid.ColumnSpan="2" Grid.Row="1" Grid.RowSpan="2" Visibility="Collapsed" DataContext="{Binding Path=SelectedItem, ElementName=DialoguesTree}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="2*"/>
                        <RowDefinition Height="18*"/>
                    </Grid.RowDefinitions>

                    <b:Interaction.Behaviors>
                        <ls:CollectionFilterBehavior x:Name="NoNarratorParticipants" ItemsSource="{Binding Participants}" Predicate="{Binding DataContext.Data.DialogueParticipantNoNarratorPredicate, ElementName=JournalDialogues_c}"/>
                    </b:Interaction.Behaviors>

                    <StackPanel x:Name="BookmarkBanner" Orientation="Horizontal" Grid.Row="0" Margin="{StaticResource Journal.BookmarkMargin}">
                        <TextBlock x:Name="NavCategory" Text="{Binding Source='hc610c4aeg0285g4e2agbc31g4bb458c1c7b3', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource Journal.BookmarkStyle}" HorizontalAlignment="Center"/>
                        <TextBlock Text=">" Style="{StaticResource Journal.BookmarkStyle}" HorizontalAlignment="Center" Margin="10,0"/>

                        <ItemsControl x:Name="BookmarkNames" ItemsSource="{Binding FilteredItems, ElementName=NoNarratorParticipants}" AlternationCount="{Binding FilteredItems.Count, ElementName=NoNarratorParticipants}" Style="{StaticResource ParticipantsNamesStyle}" HorizontalAlignment="Left">
                            <ItemsControl.Resources>
                                <Style x:Key="ParticipantsTextStyle" TargetType="TextBlock" BasedOn="{StaticResource Journal.BookmarkStyle}"/>
                            </ItemsControl.Resources>
                        </ItemsControl>
                    </StackPanel>

                    <Grid Grid.Row="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                        <StackPanel x:Name="PortraitsContainer" Grid.Row="0" Orientation="Horizontal" HorizontalAlignment="Center" Visibility="{Binding Path=(b:Interaction.Behaviors)[0].FilteredItems.Count, ElementName=SidePanel, Converter={StaticResource CountToVisibilityConverter}}">
                            <Image x:Name="DecoLeft" Stretch="None" Source="{StaticResource DialoguePortraitFrameDetail}" RenderTransformOrigin="0.5,0.5">
                                <Image.RenderTransform>
                                    <ScaleTransform ScaleX="-1"/>
                                </Image.RenderTransform>
                            </Image>
                            <ItemsControl x:Name="Portraits" ItemsSource="{Binding FilteredItems, ElementName=NoNarratorParticipants}" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,0,0,20">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Horizontal"/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>

                                <ItemsControl.ItemTemplate>
                                    <DataTemplate DataType="{x:Type ls:DialogueParticipant}">
                                        <Grid>
                                            <Rectangle x:Name="Portrait" Fill="{Binding Icon}" Margin="4,12" RadiusX="30" RadiusY="30"/>
                                            <Image Source="{StaticResource DialoguePortraitFrame}" Stretch="None" Margin="-8,0"/>
                                        </Grid>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                            <Image x:Name="DecoRight" Stretch="None" Source="{StaticResource DialoguePortraitFrameDetail}"/>
                        </StackPanel>

                        <ls:LSScrollViewer Template="{StaticResource StretchingScrollViewerTemplate}" Grid.Row="1" BoundScrollUpEvent="UIScrollUp" BoundScrollDownEvent="UIScrollDown">
                            <ls:LSScrollViewer.Resources>
                                <Style TargetType="ScrollBar" BasedOn="{StaticResource ControllerHintGoldScrollbar}"/>
                                <GridLength x:Key="Left">0</GridLength>
                                <GridLength x:Key="Right">0</GridLength>
                            </ls:LSScrollViewer.Resources>
                            <StackPanel>
                                <ItemsControl x:Name="Names" ItemsSource="{Binding FilteredItems, ElementName=NoNarratorParticipants}" AlternationCount="{Binding FilteredItems.Count, ElementName=NoNarratorParticipants}" Style="{StaticResource ParticipantsNamesStyle}" HorizontalAlignment="Center">
                                    <ItemsControl.Resources>
                                        <Style x:Key="ParticipantsTextStyle" TargetType="TextBlock" BasedOn="{StaticResource Journal.BookmarkStyle}">
                                            <Setter Property="Foreground" Value="{StaticResource LS_tint100}"/>
                                            <Setter Property="FontSize" Value="{StaticResource ScaledLargeFontSize}"/>
                                        </Style>
                                    </ItemsControl.Resources>
                                </ItemsControl>

                                <TextBlock x:Name="TimeAndPlace" Style="{StaticResource Journal.BaseTextStyle}" HorizontalAlignment="Center" Margin="0,0,0,36">
                                    <Run Text="{Binding Path=SelectedItem.DayOfMonth, ElementName=DialoguesTree}"/>
                                    <Run Text="{Binding Path=SelectedItem.MonthName, ElementName=DialoguesTree}"/>
                                    <Run Text="-"/>
                                    <Run Text="{Binding Path=SelectedItem.Map, ElementName=DialoguesTree}"/>
                                </TextBlock>

                                <ItemsControl x:Name="DialogueLines" ItemsSource="{Binding Path=SelectedItem.DialogueLines, ElementName=DialoguesTree}">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <StackPanel/>
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>

                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate DataType="{x:Type ls:JournalDialogueLine}">
                                            <DataTemplate.Resources>
                                                <BitmapImage x:Key="RollIconBG" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/Overhead/PassiveRoll/passiveRollIndicator_bg.png"/>
                                                <BitmapImage x:Key="RollIconBorder" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/Overhead/PassiveRoll/passiveRollIndicator_Failed.png"/>
                                                <BitmapImage x:Key="RollIcon" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/Overhead/PassiveRoll/passiveRollIndicator_d20.png"/>
                                            </DataTemplate.Resources>
                                            <Control x:Name="Root" Margin="0,0,0,36">
                                                <Control.Template>
                                                    <ControlTemplate>
                                                        <StackPanel Orientation="Horizontal">
                                                            <Grid x:Name="IconContainer" HorizontalAlignment="Left" Margin="0,0,20,0">
                                                                <Image x:Name="IconBG" Source="{StaticResource RollIconBG}" Stretch="None" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                                                <Image x:Name="IconBorder" VerticalAlignment="Center" HorizontalAlignment="Center" Stretch="None" Source="{StaticResource RollIconBorder}"/>
                                                                <Image x:Name="Icon"  Source="{StaticResource RollIcon}" Stretch="None" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                                            </Grid>

                                                            <TextBlock x:Name="Ability" Text="{Binding RollAbility}" Style="{StaticResource Journal.BaseTextStyle}" Foreground="{StaticResource DiceColor.Failure}" VerticalAlignment="Center" Margin="0,0,10,0"/>
                                                            <TextBlock x:Name="Skill" Text="{Binding RollSkill, StringFormat='{}({0})'}" Style="{StaticResource Journal.BaseTextStyle}" Foreground="{StaticResource DiceColor.Failure}" VerticalAlignment="Center" Margin="0,0,10,0"/>
                                                            <TextBlock x:Name="Result" Text="{Binding Source='ha81a7198g8adag4775g8bceg7376da401478', Converter={StaticResource TranslatedStringConverter}, StringFormat='{}{0}:'}" Style="{StaticResource Journal.BaseTextStyle}" Foreground="{StaticResource DiceColor.Failure}" VerticalAlignment="Center" Margin="0,0,10,0"/>
                                                            <TextBlock x:Name="Name" Text="{Binding Speaker.Name}" Style="{StaticResource Journal.BaseTextStyle}" VerticalAlignment="Center"/>
                                                        </StackPanel>

                                                        <ControlTemplate.Triggers>
                                                            <DataTrigger Binding="{Binding RollIsSuccess}" Value="True">
                                                                <Setter TargetName="IconBorder" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Overhead/PassiveRoll/passiveRollIndicator_Success.png"/>
                                                                <Setter TargetName="Result" Property="Text" Value="{Binding Source='hd147c95ag5acbg4389g9411g9f9dbbbb2f3a', Converter={StaticResource TranslatedStringConverter}, StringFormat='{}{0}:'}"/>
                                                                <Setter TargetName="Ability" Property="Foreground" Value="{StaticResource DiceColor.Success}"/>
                                                                <Setter TargetName="Skill" Property="Foreground" Value="{StaticResource DiceColor.Success}"/>
                                                                <Setter TargetName="Result" Property="Foreground" Value="{StaticResource DiceColor.Success}"/>
                                                            </DataTrigger>

                                                            <DataTrigger Binding="{Binding RollSkill}" Value="None">
                                                                <Setter TargetName="Skill" Property="Visibility" Value="Collapsed"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding RollSkill}" Value="Max">
                                                                <Setter TargetName="Skill" Property="Visibility" Value="Collapsed"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding RollSkill}" Value="CONNone">
                                                                <Setter TargetName="Skill" Property="Visibility" Value="Collapsed"/>
                                                            </DataTrigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Control.Template>
                                            </Control>

                                            <DataTemplate.Triggers>
                                                <DataTrigger Binding="{Binding RollAbility}" Value="None">
                                                    <Setter TargetName="Root" Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate>
                                                                <TextBlock x:Name="Line" Style="{StaticResource Journal.BaseTextStyle}">
                                                                    <Span x:Name="Name" ls:TextBlockFormatter.SourceText="" Foreground="{StaticResource LS_extraspecialTxtColor}"/>
                                                                    <Span x:Name="Message" ls:TextBlockFormatter.SourceText="{Binding Text}"/>
                                                                </TextBlock>

                                                                <ControlTemplate.Triggers>
                                                                    <DataTrigger Binding="{Binding Speaker.IsNarrator}" Value="False">
                                                                        <Setter TargetName="Name" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Speaker.Name, StringFormat='{}{0}: '}"/>
                                                                    </DataTrigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>
                                            </DataTemplate.Triggers>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </StackPanel>
                        </ls:LSScrollViewer>
                    </Grid>
                </Grid>

                <Grid x:Name="ButtonHints" Grid.Column="0" Grid.ColumnSpan="7" Grid.Row="3">

                    <StackPanel x:Name="RightSideButtonHints" Style="{StaticResource ButtonHint.Container.Center}">
                        <ls:LSButton x:Name="ExpandBtn" ContentTemplate="{StaticResource ControllerButtonHint}" Content="{Binding CurrentPlayer.UIData.InputEvents, ConverterParameter=UIAccept, Converter={StaticResource FindInputEventConverter}}" Tag="{Binding Source='h96519a3dg3102g441dg8336g0c0e10f4c388', Converter={StaticResource TranslatedStringConverter}}" Visibility="Collapsed" />
                        <ls:LSToggleButton x:Name="SelectBtn" BoundEvent="UIAccept" ContentTemplate="{StaticResource ControllerButtonHint}" Content="{Binding CurrentPlayer.UIData.InputEvents, ConverterParameter=UIAccept, Converter={StaticResource FindInputEventConverter}}" Tag="{Binding Source='h04f38549g65b8g4b72g834eg87ee8863fdc5', Converter={StaticResource TranslatedStringConverter}}" Visibility="Collapsed" IsChecked="False"/>
                        <StackPanel x:Name="SortBtnContainer" Orientation="Horizontal" Visibility="{Binding IsVisible, ElementName=SidePanel, Converter={StaticResource BoolToCollapsedConverter}}">
                        <ls:LSButton x:Name="SortBtn" BoundEvent="UIShowInfo" ContentTemplate="{StaticResource ControllerButtonHintImageOnly}" Content="{Binding CurrentPlayer.UIData.InputEvents, ConverterParameter=UIShowInfo, Converter={StaticResource FindInputEventConverter}}" Command="{Binding SetGroupingTab}" CommandParameter="ByMap" Margin="0,-20">
                            <b:Interaction.Triggers>
                                <b:EventTrigger EventName="LSButtonReleased">
                                    <b:Interaction.Behaviors>
                                        <b:ConditionBehavior>
                                            <b:ConditionalExpression>
                                                <b:ComparisonCondition LeftOperand="{Binding Path=(ls:MoveFocus.IsKeyboardFocusWithin), ElementName=Navigation}" Operator="Equal" RightOperand="False"/>
                                            </b:ConditionalExpression>
                                        </b:ConditionBehavior>
                                    </b:Interaction.Behaviors>
                                    <ls:SetMoveFocusAction TargetName="JournalDialogues_c" FocusElement="{Binding ElementName=DialoguesTree}"/>
                                </b:EventTrigger>
                            </b:Interaction.Triggers>
                        </ls:LSButton>
                        <TextBlock x:Name="SortLabel" Style="{StaticResource BtnHint.TextStyle}">
                            <Run Text="{Binding Source='h9235ffc2g60c0g4ec6g9070g1e864a597f0e', Converter={StaticResource TranslatedStringConverter}}" Foreground="{StaticResource LS_baseTxtColor}"/>
                            <Run Text="{Binding Source='hb897c56egaa6fg460bg8676g8ebfa0340954', Converter={StaticResource TranslatedStringConverter}}" Foreground="{StaticResource LS_baseTxtColor}"/>
                            <Run x:Name="SortResult" Text="{Binding Source='hbdf03d69g4510g4132ga6b9g9954ea3bf29b', Converter={StaticResource TranslatedStringConverter}}"/>
                        </TextBlock>
                    </StackPanel>
                        <ls:LSButton x:Name="CloseBtn" BoundEvent="UICancel" ContentTemplate="{StaticResource ControllerButtonHint}" Content="{Binding CurrentPlayer.UIData.InputEvents, ConverterParameter=UICancel, Converter={StaticResource FindInputEventConverter}}" Tag="{Binding Source='h6fefa28bg2149g4cacga071gd95b236b2d0b', Converter={StaticResource TranslatedStringConverter}}" Visibility="{Binding Path=Visibility, ElementName=BackBtn, Converter={StaticResource InvertVisibilityConverter}}"
                                     Command="{Binding CustomEvent}" CommandParameter="CloseWidget"/>
                        <ls:LSButton x:Name="BackBtn" BoundEvent="UICancel" ContentTemplate="{StaticResource ControllerButtonHint}" Content="{Binding CurrentPlayer.UIData.InputEvents, ConverterParameter=UICancel, Converter={StaticResource FindInputEventConverter}}" Tag="{Binding Source='hfe928c0dgb014g4eb2g8c52g6ed43b026e20', Converter={StaticResource TranslatedStringConverter}}" Visibility="{Binding Path=Visibility, ElementName=SidePanel}">
                            <b:Interaction.Triggers>
                                <b:EventTrigger EventName="LSButtonPressed">
                                    <b:ChangePropertyAction TargetName="SelectBtn" PropertyName="IsChecked" Value="False"/>
                                </b:EventTrigger>
                            </b:Interaction.Triggers>
                        </ls:LSButton>
                    </StackPanel>
                </Grid>

                <b:Interaction.Triggers>
                    <b:PropertyChangedTrigger Binding="{Binding Layout}">
                        <b:ChangePropertyAction TargetName="SelectBtn" PropertyName="IsChecked" Value="False"/>
                    </b:PropertyChangedTrigger>
                </b:Interaction.Triggers>
            </Grid>

            <ControlTemplate.Triggers>
                <DataTrigger Binding="{Binding DataContext.GroupingTab, ElementName=JournalDialogues_c}" Value="ByMap">
                    <Setter TargetName="DialoguesTree" Property="ItemsSource" Value="{Binding FilteredItems, ElementName=ExpandedDialoguesByMap}"/>
                    <Setter TargetName="SortBtn" Property="CommandParameter" Value="ByDate"/> 
                    <Setter TargetName="SortResult" Property="Text" Value="{Binding Source='h1a856c2bg4f94g4267gadd3g34a299e3c5b2', Converter={StaticResource TranslatedStringConverter}}"/> 
                </DataTrigger>

                <DataTrigger Binding="{Binding Path=SelectedItem, ElementName=DialoguesTree, Converter={StaticResource TypeConverter}}" Value="ls.JournalDialogue">
                    <Setter TargetName="SelectBtn" Property="Visibility" Value="Visible"/>
                </DataTrigger>

                <DataTrigger Binding="{Binding Path=SelectedItem.Participants.Count, ElementName=DialoguesTree}" Value="1">
                    <Setter TargetName="BookmarkNames" Property="ItemsSource" Value="{Binding Participants}"/>
                    <Setter TargetName="BookmarkNames" Property="AlternationCount" Value="1"/>
                    <Setter TargetName="PortraitsContainer" Property="Visibility" Value="Visible"/>
                    <Setter TargetName="Portraits" Property="ItemsSource" Value="{Binding Participants}"/>
                    <Setter TargetName="Names" Property="ItemsSource" Value="{Binding Participants}"/>
                    <Setter TargetName="Names" Property="AlternationCount" Value="1"/>
                </DataTrigger>

                <DataTrigger Binding="{Binding Visibility, ElementName=SidePanel}" Value="Visible">
                    <Setter TargetName="Navigation" Property="IsEnabled" Value="False"/>
                    <Setter TargetName="Navigation" Property="Margin" Value="-50,0,0,0"/>
                    <Setter TargetName="SelectBtn" Property="Visibility" Value="Collapsed"/>
                </DataTrigger>

                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsChecked, ElementName=SelectBtn}" Value="True"/>
                        <Condition Binding="{Binding Tag, ElementName=root}" Value="SplitScreen"/>
                    </MultiDataTrigger.Conditions>

                    <MultiDataTrigger.EnterActions>
                        <StopStoryboard BeginStoryboardName="HideSidePanelStoryboard"/>
                        <BeginStoryboard x:Name="ShowSidePanelStoryboard" Storyboard="{StaticResource Journal.FadeInSidePanelAnim}"/>
                    </MultiDataTrigger.EnterActions>
                    <MultiDataTrigger.ExitActions>
                        <StopStoryboard BeginStoryboardName="ShowSidePanelStoryboard"/>
                        <BeginStoryboard x:Name="HideSidePanelStoryboard" Storyboard="{StaticResource Journal.FadeOutSidePanelAnim}"/>
                    </MultiDataTrigger.ExitActions>

                    <Setter TargetName="MainPanel" Property="IsEnabled" Value="False"/>
                    <Setter TargetName="MainPanel" Property="Margin" Value="-200,0,200,0"/>
                    <Setter TargetName="MainPanel" Property="Opacity" Value="0"/>
                    <Setter TargetName="MainPanel" Property="Visibility" Value="Collapsed"/>

                    <Setter TargetName="SidePanel" Property="IsEnabled" Value="True"/>
                    <Setter TargetName="SidePanel" Property="Margin" Value="0"/>
                    <Setter TargetName="MainPanel" Property="Opacity" Value="1"/>
                    <Setter TargetName="SidePanel" Property="Visibility" Value="Visible"/>
                </MultiDataTrigger>
                
                <DataTrigger Binding="{Binding Layout}" Value="Common">
                    <DataTrigger.EnterActions>
                        <StopStoryboard BeginStoryboardName="HideSidePanelStoryboard"/>
                        <StopStoryboard BeginStoryboardName="ShowSidePanelStoryboard"/>
                    </DataTrigger.EnterActions>

                    <Setter TargetName="root" Property="Tag" Value="Common"/>

                    <Setter TargetName="ColumnDef0" Property="Width" Value="1*"/>
                    <Setter TargetName="ColumnDef1" Property="Width" Value="4*"/>
                    <Setter TargetName="ColumnDef2" Property="Width" Value="13*"/>
                    <Setter TargetName="ColumnDef3" Property="Width" Value="1*"/>
                    <Setter TargetName="ColumnDef4" Property="Width" Value="18*"/>
                    <Setter TargetName="ColumnDef5" Property="Width" Value="2*"/>
                    <Setter TargetName="ColumnDef6" Property="Width" Value="1*"/>
                    <Setter TargetName="c_PartyGold" Property="Visibility" Value="Visible" />
                    <Setter TargetName="Navigation" Property="Grid.ColumnSpan" Value="5"/>
                    <Setter TargetName="MainPanel" Property="Grid.Column" Value="2"/>
                    <Setter TargetName="MainPanel" Property="Visibility" Value="Visible"/>
                    <Setter TargetName="MainPanel" Property="IsEnabled" Value="True"/>
                    <Setter TargetName="SidePanel" Property="Grid.Column" Value="4"/>
                    <Setter TargetName="SidePanel" Property="Grid.ColumnSpan" Value="1"/>
                    <Setter TargetName="BackBtn" Property="Visibility" Value="Collapsed"/>
                    <Setter TargetName="SelectBtn" Property="Visibility" Value="Collapsed"/>
                    <Setter TargetName="Navigation" Property="IsEnabled" Value="True"/>
                    <Setter TargetName="Navigation" Property="Margin" Value="{StaticResource Journal.NavigationMargin}"/>
                    <Setter TargetName="BookmarkBanner" Property="Visibility" Value="Collapsed"/>
                    <Setter TargetName="SortBtnContainer" Property="Visibility" Value="Visible"/>
                </DataTrigger>

                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=SelectedItem, ElementName=DialoguesTree, Converter={StaticResource TypeConverter}}" Value="ls.JournalDialogue"/>
                        <Condition Binding="{Binding Layout}" Value="Common"/>
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="SidePanel" Property="Visibility" Value="Visible"/>
                </MultiDataTrigger>

                <DataTrigger Binding="{Binding Path=SelectedItem, ElementName=DialoguesTree, Converter={StaticResource TypeConverter}}" Value="ls.JournalDialogueMapGroup">
                    <Setter TargetName="ExpandBtn" Property="Visibility" Value="Visible"/>
                </DataTrigger>

                <DataTrigger Binding="{Binding Path=SelectedItem, ElementName=DialoguesTree, Converter={StaticResource TypeConverter}}" Value="ls.JournalDialogueDayGroup">
                    <Setter TargetName="ExpandBtn" Property="Visibility" Value="Visible"/>
                </DataTrigger>

                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsVisible, ElementName=ExpandBtn}" Value="True"/>
                        <Condition Binding="{Binding Path=SelectedItem.AreDialoguesShown, ElementName=DialoguesTree, FallbackValue=False}" Value="True"/>
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="ExpandBtn" Property="Tag" Value="{Binding Source='h0abdb3d7g4b7ag4f00gbb71g5d9d3b1767e4', Converter={StaticResource TranslatedStringConverter}}"/>
                </MultiDataTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </ls:UIWidget.Template>

    <b:Interaction.Triggers>
        <b:EventTrigger EventName="Loaded">
            <ls:LSPlaySound Sound="UI_HUD_Controller_JournalSelection_Open"/>
        </b:EventTrigger>
        <b:EventTrigger EventName="Unloaded">
            <ls:LSPlaySound Sound="UI_HUD_Journal_Close"/>
        </b:EventTrigger>
        <b:EventTrigger EventName="FocusChanged">
            <ls:LSPlaySound Sound="UI_Shared_Hover" />
        </b:EventTrigger>
    </b:Interaction.Triggers>
</ls:UIWidget>