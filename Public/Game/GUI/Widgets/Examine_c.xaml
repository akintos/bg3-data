<ls:UIWidget x:Name="Examine_c"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:ls="clr-namespace:ls;assembly=SharedGUI"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:noesis="clr-namespace:NoesisGUIExtensions;assembly=Noesis.GUI.Extensions"
             xmlns:System="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d"
             d:DesignWidth="3840" d:DesignHeight="2160"
             ls:UIWidget.Focusable="False"
             ls:UIWidget.ContextName="Examine" d:DataContext="{d:DesignInstance {x:Type ls:DCExamine}, IsDesignTimeCreatable=True}"
             ls:TooltipExtender.Owner="{Binding CurrentPlayer.UIData.ExamineTarget}"
             FocusDown="UIDown" FocusLeft="UILeft" FocusRight="UIRight" FocusUp="UIUp" ls:MoveFocus.FocusMovementMode="Closest" CanCacheFocusSurroundingElements="False">

    <ls:UIWidget.Resources>
        <ResourceDictionary>
            <ImageSource x:Key="NoResistanceIcon">pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterPanel/resistance_none_bg.png</ImageSource>
            <System:Double x:Key="ExaminePanelWidth">2200</System:Double>
            <System:Double x:Key="ExaminePanelWidthSplit">1600</System:Double>
            <System:Double x:Key="CSInnerHeight">1480</System:Double>
            <System:Double x:Key="EXDollWidth">1400</System:Double>
            <System:Double x:Key="CSInfoHeight">1600</System:Double>
            <System:Double x:Key="CSInfoWidth">800</System:Double>

            <!--Forces the row height to set the cursor selector-->
            <System:Double x:Key="GenericRowHeight">72</System:Double>
            <System:Double x:Key="GenericIconHeight">60</System:Double>

            <!--STYLES FOR TEXT & ICONS -->
            <Style x:Key="SummaryRoundIcons" TargetType="Rectangle">
                <Setter Property="Width" Value="{StaticResource GenericIconHeight}"/>
                <Setter Property="Height" Value="{StaticResource GenericIconHeight}"/>
                <Setter Property="RadiusX" Value="30"/>
                <Setter Property="RadiusY" Value="30"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
            </Style>

            <Style x:Key="DetailedListText_c" TargetType="TextBlock">
                <Setter Property="FontSize" Value="{StaticResource ScaledMediumFontSize}"/>
                <Setter Property="Foreground" Value="{StaticResource LS_baseTxtColor}"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Foreground" Value="{StaticResource LS_selectedTextPad}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="SummaryListText_c" TargetType="TextBlock">
                <Setter Property="FontSize" Value="{StaticResource ScaledDefaultFontSize}"/>
                <Setter Property="Foreground" Value="{StaticResource LS_accent100TxtColor}"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Foreground" Value="{StaticResource LS_selectedTextPad}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="ListLabelStyle" TargetType="TextBlock" BasedOn="{StaticResource DetailedListText_c}">
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="TextWrapping" Value="Wrap"/>
                <Setter Property="DockPanel.Dock" Value="Left"/>
                <Setter Property="Margin" Value="20,0,0,0"/>
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Foreground" Value="{StaticResource LS_selectedTextPad}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="ListLabelCntrlStyle" TargetType="Control" >
                <Style.Resources>
                    <Style TargetType="TextBlock" BasedOn="{StaticResource ListLabelStyle}"/>
                </Style.Resources>
                <Setter Property="FontSize" Value="{StaticResource ScaledMediumFontSize}"/>
                <Setter Property="Foreground" Value="{StaticResource LS_baseTxtColor}"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="DockPanel.Dock" Value="Left"/>
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Foreground" Value="{StaticResource LS_selectedTextPad}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="ListValueStyle" TargetType="TextBlock" BasedOn="{StaticResource DetailedListText_c}">
                <Setter Property="ToolTipService.Placement" Value="Right"/>
                <Setter Property="HorizontalAlignment" Value="Right"/>
                <Setter Property="DockPanel.Dock" Value="Right"/>
                <Setter Property="Margin" Value="0,0,20,0"/>
                <Setter Property="Foreground" Value="{StaticResource LS_accent100TxtColor}"/>
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Foreground" Value="{StaticResource LS_selectedTextPad}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!-- HEADER LABEL (FROM SPELLBOOK)-->
            <Style x:Key="ListTitleBgStyle" TargetType="ls:LSNineSliceImage" BasedOn="{StaticResource {x:Type ls:LSNineSliceImage}}">
                <Style.Resources>
                    <Style TargetType="TextBlock">
                        <Setter Property="FontSize" Value="{StaticResource ScaledDefaultFontSize}"/>
                        <Setter Property="Foreground" Value="{StaticResource LS_accent100TxtColor}"/>
                        <Setter Property="HorizontalAlignment" Value="Center"/>
                        <Setter Property="TextAlignment" Value="Center"/>
                        <Setter Property="TextWrapping" Value="Wrap"/>
                    </Style>
                </Style.Resources>
                <Setter Property="ImageSource" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/c_listItem_titleBG_d.png"/>
                <Setter Property="Slices" Value="230,40"/>
                <Setter Property="IconWidth" Value="40"/>
                <Setter Property="Padding" Value="24"/>
                <Setter Property="Margin" Value="0,0,0,-32"/>
                <Setter Property="Focusable" Value="True"/>
                <Setter Property="ls:MoveFocus.Focusable" Value="True"/>
                <Style.Triggers>
                    <Trigger Property="ls:MoveFocus.IsFocused" Value="True">
                        <Setter Property="ImageSource" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/c_listItem_titleBG_h.png"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!-- CONTROL FOR CURSOR STYLE-->
            <ControlTemplate x:Key="ExamineFocusableBorderTemplate">
                <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                    <Grid.Triggers>
                        <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                            <BeginStoryboard Name="FocusSb"  Storyboard="{StaticResource SelectorStoryboard}"/>
                            <BeginStoryboard Name="FocusSb2" Storyboard="{StaticResource SelectorStoryboard2}"/>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="FrameworkElement.Unloaded">
                            <StopStoryboard  BeginStoryboardName="FocusSb"/>
                            <StopStoryboard  BeginStoryboardName="FocusSb2"/>
                        </EventTrigger>
                    </Grid.Triggers>
                    <ls:LSNineSliceImage x:Name="HighlightBG" ImageSource="{StaticResource ButtonBg_h}" Slices="24,40,24,24" Opacity="0" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
                    <ls:LSNineSliceImage x:Name="Img1" ImageSource="{StaticResource ButtonBg_h1}" Slices="34" Opacity="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
                    <ls:LSNineSliceImage x:Name="Img2" ImageSource="{StaticResource ButtonBg_h2}" Slices="34" Opacity="0" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
                    <ls:LSNineSliceImage x:Name="Img5" ImageSource="{StaticResource ButtonBg_h1}" Slices="34" Opacity="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
                    <ls:LSNineSliceImage x:Name="Img6" ImageSource="{StaticResource ButtonBg_h2}" Slices="34" Opacity="0" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
                    <ls:LSNineSliceImage x:Name="Img4" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" MinHeight="0" ImageSource="{StaticResource ButtonBg_h2}" Slices="34" Opacity="0">
                        <ls:LSNineSliceImage.LayoutTransform>
                            <RotateTransform Angle="180"/>
                        </ls:LSNineSliceImage.LayoutTransform>
                        <ls:LSNineSliceImage.Effect>
                            <DropShadowEffect BlurRadius="40" ShadowDepth="10" Opacity="0.5" Color="White"/>
                        </ls:LSNineSliceImage.Effect>
                    </ls:LSNineSliceImage>
                    <ls:LSNineSliceImage x:Name="Img3" ImageSource="{StaticResource ButtonBg_h1}" Slices="34" Opacity="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                        <ls:LSNineSliceImage.LayoutTransform>
                            <RotateTransform Angle="180"/>
                        </ls:LSNineSliceImage.LayoutTransform>
                    </ls:LSNineSliceImage>
                </Grid>
            </ControlTemplate>

            <!--TEXT STYLE-->
            <Style x:Key="HighlightedText" TargetType="{x:Type TextBlock}">
                <Style.Triggers>
                    <Trigger Property="ls:MoveFocus.IsFocused" Value="True">
                        <Setter Property="Foreground" Value="{StaticResource LS_selectedTextPad}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            
            
            
            <!--CONTROL TO APPLY CURSOR-->
            <ControlTemplate x:Key="DetailedEntry">
                <ControlTemplate.Resources>
                    <!--TEXT STYLE-->
                    <Style x:Key="HighlightedText" TargetType="{x:Type TextBlock}">
                        <Setter Property="Foreground" Value="{StaticResource LS_tint100}"/>
                    </Style>
                </ControlTemplate.Resources>
                <ls:LSNineSliceImage x:Name="Bg" ImageSource="{StaticResource ButtonBg}" Slices="24,40,24,24">
                    <Grid x:Name="Content" IsEnabled="True">
                        <ContentPresenter/>
                        <Control x:Name="Frame" Visibility="Hidden" Margin="-18" Template="{StaticResource ExamineFocusableBorderTemplate}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
                    </Grid>
                </ls:LSNineSliceImage>
                <ControlTemplate.Triggers>
                    <Trigger Property="ls:MoveFocus.IsFocused" Value="True">
                        <Setter TargetName="Bg" Property="ImageSource" Value="{StaticResource ButtonBg_h}"/>
                        <Setter TargetName="Content" Property="IsEnabled" Value="False"/>
                        <Setter TargetName="Frame" Property="Visibility" Value="Visible"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <!--SPLITSCREEN TRIGGERS-->
            <Style x:Key="SplitScreenOverride" TargetType="Grid">
                <Setter Property="Width" Value="{StaticResource ExaminePanelWidth}"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding DataContext.Layout, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Value="Right">
                        <Setter Property="Width" Value="{StaticResource ExaminePanelWidthSplit}"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding DataContext.Layout, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Value="Left">
                        <Setter Property="Width" Value="{StaticResource ExaminePanelWidthSplit}"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="SplitScreenOverrideDoll" TargetType="Grid">
                <Setter Property="Margin" Value="8,0,32,0"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding DataContext.Layout, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Value="Right">
                        <Setter Property="Margin" Value="-288,0,288,0"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding DataContext.Layout, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Value="Left">
                        <Setter Property="Margin" Value="288,0,-288,0"/>
                        <Setter Property="HorizontalAlignment" Value="Right"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="SplitScreenOverrideColumn" TargetType="Grid">
                <Setter Property="Margin" Value="0,0,40,0"/>
                <Setter Property="HorizontalAlignment" Value="Right"/>
                <Setter Property="Background" Value="{StaticResource LS_PopUpBackgroundColorMedium}"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding DataContext.Layout, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Value="Right">
                        <Setter Property="HorizontalAlignment" Value="Right"/>
                        <Setter Property="Margin" Value="0,0,40,0"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding DataContext.Layout, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Value="Left">
                        <Setter Property="HorizontalAlignment" Value="Left"/>
                        <Setter Property="Margin" Value="40,0,0,0"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>


            <!-- ===== ABILITIES ROW TEMPLATE =====-->
            <DataTemplate x:Key="StatsAbilitiesEntryTemplate" DataType="{x:Type ls:VMAbility}">
                <ls:LSButton x:Name="EntryRoot" Width="90" ToolTip="{StaticResource ManagedTooltip}" ToolTipService.Placement="Right" ToolTipService.HorizontalOffset="{Binding Tag, RelativeSource={RelativeSource Mode=TemplatedParent}}" ToolTipService.VerticalOffset="0"
								 Style="{StaticResource FocusableButtonStyleMinimal}">
                    <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                        <Control x:Name="attrName" Template="{StaticResource AbilityShortDisplayName}"  Foreground="{StaticResource LS_baseTxtColor}" FontWeight="Bold"  FontSize="{StaticResource ScaledMediumFontSize}" HorizontalAlignment="Center" Margin="0,0,0,0"/>
                        <TextBlock Text="{Binding Value}" FontSize="{StaticResource ScaledDefaultFontSize}" HorizontalAlignment="Center" Margin="0,-20,0,0" TextTrimming="CharacterEllipsis"/>
                    </StackPanel>
                </ls:LSButton>
            </DataTemplate>

            <!-- ===== CONDITIONS LIST TEMPLATE =====-->
            <DataTemplate x:Key="StatusListItemTemplate" DataType="{x:Type ls:VMStatus}">
                <DataTemplate.Resources>
                    <BitmapImage x:Key="statusBG" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/TargetInfo/statusBG.png"/>
                    <BitmapImage x:Key="statusBG_fill" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/TargetInfo/statusBG_fill.png"/>
                </DataTemplate.Resources>
                <ContentControl x:Name="ConditionsListTemplate" Template="{StaticResource DetailedEntry}" ls:MoveFocus.Focusable="True" Focusable="True" ToolTip="{StaticResource ManagedTooltip}" Height="{StaticResource GenericRowHeight}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid Margin="12,0,12,0" Grid.Column="0">
                            <Image Source="{StaticResource statusBG}" Stretch="Uniform" VerticalAlignment="Center"/>

                            <ls:LSPie Value="{Binding RemainingPercentage}" SweepDirection="Clockwise">
                                <Image Source="{StaticResource statusBG_fill}" Stretch="Uniform"/>
                            </ls:LSPie>

                            <Rectangle Style="{StaticResource SummaryRoundIcons}" Fill="{Binding Icon}" MaxHeight="{StaticResource GenericIconHeight}"/>

                            <TextBlock Text="{Binding Duration}" VerticalAlignment="Bottom" HorizontalAlignment="Center" Margin="0,0,0,-12" Foreground="{StaticResource LS_PrimaryColor}"
                               noesis:Text.Stroke="{StaticResource LS_PrimaryColorOutlineColor}" noesis:Text.StrokeThickness="6" Style="{StaticResource NarrowTooltipModifierText}"
                               Visibility="{Binding Duration, Converter={StaticResource CountToVisibilityConverter}, ConverterParameter=0}" FontSize="{StaticResource ScaledDefaultFontSize}"/>
                        </Grid>
                        <TextBlock x:Name="NameLabel" Grid.Column="1" Text="{Binding Name}" Style="{StaticResource DetailedListText_c}" TextTrimming="CharacterEllipsis"/>
                    </Grid>
                </ContentControl>
            </DataTemplate>

            <!-- ===== RESISTANCES ICONS=====-->
            <ControlTemplate x:Key="ResistanceIcon" TargetType="Control">
                <Image x:Name="Icon" Stretch="None" Source="{x:Null}"/>
                <ControlTemplate.Triggers>
                    <DataTrigger Binding="{Binding DamageType}" Value="Slashing">
                        <Setter TargetName="Icon" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/ico_resistance_slashing.png"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding DamageType}" Value="Piercing">
                        <Setter TargetName="Icon" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/ico_resistance_piercing.png"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding DamageType}" Value="Bludgeoning">
                        <Setter TargetName="Icon" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/ico_resistance_blunt.png"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding DamageType}" Value="Acid">
                        <Setter TargetName="Icon" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/ico_resistance_acid.png"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding DamageType}" Value="Thunder">
                        <Setter TargetName="Icon" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/ico_resistance_thunder.png"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding DamageType}" Value="Necrotic">
                        <Setter TargetName="Icon" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/ico_resistance_necrotic.png"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding DamageType}" Value="Fire">
                        <Setter TargetName="Icon" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/ico_resistance_fire.png"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding DamageType}" Value="Lightning">
                        <Setter TargetName="Icon" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/ico_resistance_lightning.png"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding DamageType}" Value="Cold">
                        <Setter TargetName="Icon" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/ico_resistance_cold.png"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding DamageType}" Value="Psychic">
                        <Setter TargetName="Icon" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/ico_resistance_psychic.png"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding DamageType}" Value="Poison">
                        <Setter TargetName="Icon" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/ico_resistance_poison.png"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding DamageType}" Value="Radiant">
                        <Setter TargetName="Icon" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/ico_resistance_radiant.png"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding DamageType}" Value="Force">
                        <Setter TargetName="Icon" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/ico_resistance_force.png"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding DamageType}" Value="Spell">
                        <Setter TargetName="Icon" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/ico_resistance_spell.png"/>
                    </DataTrigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <!-- ===== RESISTANCES LIST TEMPLATE=====-->
            <ControlTemplate x:Key="ResistanceListTemplate">
                <Grid>
                    <Grid Name="ResistanceIcoList"  Visibility="{Binding Stats.NumActiveResistances, Converter={StaticResource CountToVisibilityConverter}}">
                        <ItemsControl ItemsSource="{Binding FilteredItems, ElementName=ActiveResistances}" Margin="0,0">
                            <b:Interaction.Behaviors>
                                <ls:CollectionFilterBehavior x:Name="ActiveResistances" ItemsSource="{Binding Stats.Resistances}" Predicate="{Binding Stats.ActiveResistancesPredicate}"/>
                            </b:Interaction.Behaviors>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <ContentControl x:Name="ResistanceRow" Template="{StaticResource DetailedEntry}" ls:MoveFocus.Focusable="True" Focusable="True" ToolTip="{StaticResource ManagedTooltip}">
                                        <ContentControl Template="{StaticResource ResistanceLineTemplate}" Margin="10,4">
                                            <TextBlock x:Name="Name" DockPanel.Dock="Left" Style="{StaticResource DetailedListText_c}" HorizontalAlignment="Left" VerticalAlignment="Center" TextAlignment="Left" Margin="28,0,0,0" Text="{Binding DamageTypeValue, Converter={StaticResource EnumTranslatedStringConverter}, ConverterParameter='hc3cd9b4eg4ea4g4438gbfbbg493c0abb6dd7'}" />
                                        </ContentControl>
                                    </ContentControl>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>

                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Vertical"/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>
                    </Grid>
                    <ContentControl Template="{StaticResource DetailedEntry}" ls:MoveFocus.Focusable="True" Focusable="True" Visibility="{Binding Visibility, ElementName=ResistanceIcoList, Converter={StaticResource InvertVisibilityConverter}}">
                        <Grid Name="ResistanceEmpty">
                            <Image HorizontalAlignment="Center" Stretch="None" Source="{StaticResource NoResistanceIcon}"/>
                            <TextBlock HorizontalAlignment="Center" Style="{StaticResource DetailedListText_c}" Text="{Binding Source='h529efdfdgda98g4ed3g8d1eg46cbf1d0a5e3', Converter={StaticResource TranslatedStringConverter}}"/>
                        </Grid>
                        <ContentControl.ToolTip>
                            <ls:LSTooltip IsHitTestVisible="False">
                                <TextBlock  Text="{Binding Source='h78e41bdfg7ae5g47d5g902cgf32ae25a53de', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource TooltipBaseTextStyle}"/>
                            </ls:LSTooltip>
                        </ContentControl.ToolTip>
                    </ContentControl>
                </Grid>
            </ControlTemplate>

            <!-- ===== PASSIVE FEATURES TEMPLATE=====-->
            <DataTemplate x:Key="FeaturesListItemTemplate" DataType="{x:Type ls:VMPassive}">
                <ContentControl Template="{StaticResource DetailedEntry}" ls:MoveFocus.Focusable="True" Focusable="True" ToolTip="{StaticResource ManagedTooltip}" Height="{StaticResource GenericRowHeight}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Rectangle x:Name="Icon" Grid.Column="0" Fill="{Binding Icon}" Style="{StaticResource SummaryRoundIcons}" Margin="12,0,12,0"/>
                        <TextBlock VerticalAlignment="Center" x:Name="NameLabel" Grid.Column="1" Text="{Binding Name}" Style="{StaticResource DetailedListText_c}"/>
                    </Grid>
                </ContentControl>
            </DataTemplate>

            <!--===== PLAYER MULTICLASS TEMPLATE =====-->
            <ControlTemplate x:Key="PlayerMultiClass">
                <ItemsControl x:Name="Classes" ItemsSource="{Binding Stats.ClassList}" Margin="0,0,0,0" Template="{StaticResource MinimalItemsControlTemplate}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate DataType="{x:Type ls:VMClass}">
                            <ContentControl Template="{StaticResource DetailedEntry}" Height="{StaticResource GenericRowHeight}" ls:MoveFocus.Focusable="True" Focusable="True">
                                <ContentControl.ToolTip>
                                    <ls:LSTooltip IsHitTestVisible="False" Content="{Binding Path=DataContext.ClassDescription, RelativeSource={RelativeSource TemplatedParent}}" ls:AttachedProperties.InheritedTag="{Binding Path=DataContext.ClassDisplayName, RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{StaticResource HeaderBodyLocaStringTemplate}"/>
                                </ContentControl.ToolTip>
                                <TextBlock TextAlignment="Center" Style="{StaticResource SummaryListText_c}" TextWrapping="Wrap">
													<Run>
														<Run.Text>
															<MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
																<Binding Source="h5df00b79ga6acg4d9fgb8dag23340151fba7"/>
																<Binding Path="Level.Value"/>
																<Binding Path="ClassDisplayName"/>
															</MultiBinding>
														</Run.Text>
													</Run>
													<Run x:Name="SubClassSeparator" Text="~"/>
													<Run Text="{Binding SubclassDisplayName}"/>
                                </TextBlock>
                            </ContentControl>

                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding SubclassDisplayName, Converter={StaticResource NullToBoolTrueConverter}, ConverterParameter='EmptyString'}" Value="True">
                                    <Setter TargetName="SubClassSeparator" Property="Text" Value=""/>
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </ControlTemplate>

        </ResourceDictionary>
    </ls:UIWidget.Resources>

    <!-- ===== EXAMINE PANEL ===== -->
    <ls:UIWidget.Template>
        <ControlTemplate>
            <Grid x:Name="bgFade">
                <Grid x:Name="Panel" HorizontalAlignment="Center" VerticalAlignment="Top" 
              DataContext="{Binding CurrentPlayer.UIData.ExamineTarget}"  RenderTransformOrigin="0.5,0.5" Margin="0,220,0,0" Style="{StaticResource SplitScreenOverride}">
                    <Grid.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </Grid.RenderTransform>
                    <ls:LSNineSliceImage x:Name="BGpanel" Style="{StaticResource Generic9SliceBG}">
                        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="8,0,0,0" ClipToBounds="True">
                            <!--PAPERDOLL-->
                            <Grid x:Name="ExaminePaperdollHolder" HorizontalAlignment="Left" Style="{StaticResource SplitScreenOverrideDoll}">
                                <ls:LSPaperdoll x:Name="ExaminePaperdoll" EntityRef="{Binding EntityHandle}" Width="{StaticResource EXDollWidth}" Height="{StaticResource CSInfoHeight}" UseCombatPose="True"/>
                                <!--PAPERDOLL CONTROLS-->
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0,0,0,60">
                                    <ls:LSButton VerticalAlignment="Center" EatInput="False" BoundEvent="{Binding IEventID, Mode=OneWay}"
                             DataContext="{Binding DataContext.CurrentPlayer.UIData.InputEvents, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}},
                                           Converter={StaticResource FindInputEventConverter}, ConverterParameter='CharacterCreationRotateLeft'}">
                                        <ls:LSButton.Template>
                                            <ControlTemplate TargetType="ls:LSButton">
                                                <Grid>
                                                    <Image x:Name="img" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/ico_rotateRight_d.png" Stretch="None" Margin="0,0,0,4"/>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsPressed" Value="True">
                                                        <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/ico_rotateRight_h.png" TargetName="img"/>
                                                        <Setter Property="Margin" Value="0,4,0,0" TargetName="img"/>
                                                    </Trigger>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/ico_rotateRight_disabled.png" TargetName="img"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </ls:LSButton.Template>
                                        <b:Interaction.Triggers>
                                            <b:EventTrigger EventName="LSButtonPressed">
                                                <b:ChangePropertyAction PropertyName="RotationSpeed" Value="4.6" TargetName="ExaminePaperdoll" />
                                            </b:EventTrigger>
                                            <b:EventTrigger EventName="LSButtonReleased" >
                                                <b:ChangePropertyAction PropertyName="RotationSpeed" Value="0" TargetName="ExaminePaperdoll" />
                                            </b:EventTrigger>
                                        </b:Interaction.Triggers>
                                    </ls:LSButton>

                                    <ls:LSButton VerticalAlignment="Center" EatInput="False" BoundEvent="{Binding IEventID, Mode=OneWay}"
                             DataContext="{Binding DataContext.CurrentPlayer.UIData.InputEvents, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}},
                                           Converter={StaticResource FindInputEventConverter}, ConverterParameter='CharacterCreationRotateRight'}">
                                        <ls:LSButton.Template>
                                            <ControlTemplate TargetType="ls:LSButton">
                                                <Grid>
                                                    <Image x:Name="img" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/ico_rotateLeft_d.png" Stretch="None" Margin="0,0,0,4"/>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsPressed" Value="True">
                                                        <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/ico_rotateLeft_h.png" TargetName="img"/>
                                                        <Setter Property="Margin" Value="0,4,0,0" TargetName="img"/>
                                                    </Trigger>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/ico_rotateLeft_disabled.png" TargetName="img"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </ls:LSButton.Template>
                                        <b:Interaction.Triggers>
                                            <b:EventTrigger EventName="LSButtonPressed">
                                                <b:ChangePropertyAction PropertyName="RotationSpeed" Value="-4.6" TargetName="ExaminePaperdoll"/>
                                            </b:EventTrigger>
                                            <b:EventTrigger EventName="LSButtonReleased" >
                                                <b:ChangePropertyAction PropertyName="RotationSpeed" Value="0" TargetName="ExaminePaperdoll"/>
                                            </b:EventTrigger>
                                        </b:Interaction.Triggers>
                                    </ls:LSButton>
                                </StackPanel>
                            </Grid>

                            <!--FOR CHARACTERS-->
                            <Grid x:Name="CharacterViewer" Visibility="Collapsed" Style="{StaticResource SplitScreenOverrideColumn}" MaxWidth="{StaticResource CSInfoWidth}" MaxHeight="{StaticResource CSInnerHeight}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                
                                <!--NAME & DESCRIPTION-->
                                <ContentControl Grid.Row="0" x:Name="NameTitles" Template="{StaticResource DetailedEntry}">
                                    <StackPanel Margin="0,0,0,12">
                                        <TextBlock Text="{Binding Name}" HorizontalAlignment="Center" FontSize="{StaticResource ScaledBigFontSize}" TextAlignment="Center" TextWrapping="Wrap"/>
                                        <TextBlock Text="{Binding Title}" Style="{StaticResource DetailedListText_c}" HorizontalAlignment="Center" TextWrapping="Wrap" TextAlignment="Center" Visibility="{Binding Title, Converter={StaticResource NullToCollapsedConverter}, ConverterParameter='EmptyString'}"/>
                                    </StackPanel>
                                </ContentControl>

                                <ScrollViewer Grid.Row="1">
                                    <StackPanel>
                                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                            <!--PORTRAIT HEALTH-->
                                            <ContentControl x:Name="PortraitHP" Template="{StaticResource DetailedEntry}" ls:MoveFocus.Focusable="True" Focusable="True" Width="164" Height="232" Margin="20,0" ToolTipService.Placement="Left">
                                                <ContentControl.ToolTip>
                                                    <ls:LSTooltip IsHitTestVisible="False" Content="{Binding DataContext.Stats.Health, ElementName=PortraitHP}"/>
                                                </ContentControl.ToolTip>
                                                <Grid x:Name="HealthbarPortrait">
                                                    <Grid.Resources>
                                                        <BitmapImage x:Key="frame">pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/character_image_frame.png</BitmapImage>
                                                    </Grid.Resources>
                                                    <ContentPresenter Margin="0,-36" VerticalAlignment="Top" HorizontalAlignment="Center" x:Name="portrait" ContentTemplate="{StaticResource CharacterPortraitTemplate}" Content="{Binding}"/>
                                                    <Path x:Name="HealthBar" Visibility="{Binding Stats.IsAlive, Converter={StaticResource BoolToVisibleConverter}, ConverterParameter='True'}" Stretch="None" Width="134" Height="200">
                                                        <Path.Data>
                                                            <RectangleGeometry Rect="0,0,134,200" RadiusX="30" RadiusY="30" />
                                                        </Path.Data>
                                                        <Path.Fill>
                                                            <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1" Opacity="0.6">
                                                                <GradientStop Color="Transparent" Offset="0"/>
                                                                <GradientStop Color="Transparent" Offset="{Binding Stats.Health.PercentValue, Mode=OneWay}"/>
                                                                <GradientStop Color="{StaticResource HBCol1}" Offset="{Binding Stats.Health.PercentValue, Mode=OneWay}"/>
                                                                <GradientStop Color="{StaticResource HBCol2}" Offset="{Binding Stats.Health.PercentValue, Mode=OneWay, Converter={StaticResource AddConverter}, ConverterParameter=0.16}"/>
                                                                <GradientStop Color="{StaticResource HBCol3}" Offset="1.0"/>
                                                            </LinearGradientBrush>
                                                        </Path.Fill>
                                                    </Path>
                                                    <Image x:Name="Frame" Source="{StaticResource frame}" Stretch="None" VerticalAlignment="Top" HorizontalAlignment="Center"/>
                                                    <Control x:Name="HealthText" Template="{StaticResource PortraitHealth}" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0,0,0,12" Background="Transparent">
                                                    </Control>
                                                </Grid>
                                            </ContentControl>

                                            <!--ARMOUR CLASS-->
                                            <ContentControl x:Name="ACInfo" Template="{StaticResource DetailedEntry}" ls:MoveFocus.Focusable="True" Focusable="True" Width="180" Height="232" Margin="20,0">
                                                <ContentControl.ToolTip>
                                                    <ls:LSTooltip Content="{Binding Path=DataContext.Stats.ArmorClass, ElementName=ACInfo}" ls:TooltipExtender.Owner="{Binding (ls:TooltipExtender.Owner), ElementName=ACInfo}"/>
                                                </ContentControl.ToolTip>
                                                <Grid Name="root" DataContext="{Binding Stats.ArmorClass}" Background="Transparent" HorizontalAlignment="Center" VerticalAlignment="Center">
                                                    <Grid.Resources>
                                                        <BitmapImage x:Key="ACShield">pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterPanel/EQSlots_AC.png</BitmapImage>
                                                    </Grid.Resources>
                                                    <Image Stretch="Uniform" Source="{StaticResource ACShield}">
                                                        <Image.Effect>
                                                            <DropShadowEffect BlurRadius="20" ShadowDepth="0" Opacity="1" Color="{StaticResource tint00}"/>
                                                        </Image.Effect>
                                                    </Image>
                                                    <StackPanel VerticalAlignment="Center" Margin="0,-18,0,0">
                                                        <TextBlock Text="{Binding Source='hc2ca2d88gc99cg4361g801fgd34ecdb85f19',Converter={StaticResource TranslatedStringConverter}}" FontSize="{StaticResource SmallFontSize}" HorizontalAlignment="Center"/>
                                                        <TextBlock FontSize="{StaticResource ScaledTitleFontSize}" Text="{Binding Value}" HorizontalAlignment="Center" Margin="0,-16"/>
                                                    </StackPanel>
                                                </Grid>
                                            </ContentControl>
                                        </StackPanel>

                                        <!--RACE TYPE INFO-->
                                        <!--FOR NPC-->
                                        <StackPanel Visibility="{Binding IsPlayableCharacter, Converter={StaticResource BoolToCollapsedConverter}}" DataContext="{Binding}">

                                            <ContentControl x:Name="RaceTypeInfo" Template="{StaticResource DetailedEntry}" ls:MoveFocus.Focusable="True" Focusable="True" Height="{StaticResource GenericIconHeight}" DataContext="{Binding}">
                                                <TextBlock x:Name="NPCType" Text="{Binding Stats.Race.Type}" Style="{StaticResource DetailedListText_c}" TextAlignment="Center" TextWrapping="Wrap"/>
                                            </ContentControl>

                                            <!--RACE INFO-->
                                            <ContentControl x:Name="NPCRaceInfo" Template="{StaticResource DetailedEntry}" ls:MoveFocus.Focusable="True" Focusable="True" Height="{StaticResource GenericRowHeight}">
                                                <TextBlock x:Name="NPCRace" HorizontalAlignment="Center" VerticalAlignment="Center" Style="{StaticResource SummaryListText_c}" TextAlignment="Center" TextWrapping="Wrap">
                                                    <TextBlock.Text>
                                                        <MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
                                                            <Binding Source="hd678d4eeg181fg499dg9e81g2146ab24e03a"/>
                                                            <Binding Path="Stats.Level.Value"/>
                                                            <Binding Path="Stats.Race.DisplayName"/>
                                                        </MultiBinding>
                                                    </TextBlock.Text>
                                                </TextBlock>
                                                <ContentControl.ToolTip>
                                                    <ls:LSTooltip IsHitTestVisible="False" Content="{Binding DataContext.Stats.Race.Description, ElementName=NPCRaceInfo}" ls:AttachedProperties.InheritedTag="{Binding DataContext.Stats.Race.DisplayName, ElementName=NPCRaceInfo}" ContentTemplate="{StaticResource HeaderBodyLocaStringTemplate}"/>
                                                </ContentControl.ToolTip>
                                            </ContentControl>
                                        </StackPanel>

                                        <!--FOR PLAYERS-->
                                        <StackPanel Visibility="{Binding IsPlayableCharacter, Converter={StaticResource BoolToVisibleConverter}}" DataContext="{Binding}">

                                            <!--RACE INFO-->
                                            <ContentControl x:Name="PlayerRaceInfo" Template="{StaticResource DetailedEntry}" ls:MoveFocus.Focusable="True" Focusable="True" Height="{Binding ActualHeight, ElementName=PlayerRace}" DataContext="{Binding}">
                                                <TextBlock x:Name="PlayerRace" Text="{Binding Stats.Race.DisplayName}" Style="{StaticResource DetailedListText_c}" TextAlignment="Center" TextWrapping="Wrap"/>
                                                <ContentControl.ToolTip>
                                                    <ls:LSTooltip IsHitTestVisible="False" Content="{Binding DataContext.Stats.Race.Description, ElementName=PlayerRaceInfo}" ls:AttachedProperties.InheritedTag="{Binding DataContext.Stats.Race.DisplayName, ElementName=PlayerRaceInfo}" ContentTemplate="{StaticResource HeaderBodyLocaStringTemplate}"/>
                                                </ContentControl.ToolTip>
                                            </ContentControl>

                                            <Control Template="{StaticResource PlayerMultiClass}" DataContext="{Binding}" />




                                        </StackPanel>


                                        <!--ABILITIES-->
                                        <StackPanel x:Name="AbilitiesRow" Orientation="Horizontal" Margin="0,12,0,0" HorizontalAlignment="Center">
                                            <ContentPresenter x:Name="AbilityStat0" ContentTemplate="{StaticResource StatsAbilitiesEntryTemplate}" Content="{Binding Stats.Abilities[0]}" Tag="580"/>
                                            <ContentPresenter x:Name="AbilityStat1" ContentTemplate="{StaticResource StatsAbilitiesEntryTemplate}" Content="{Binding Stats.Abilities[1]}" Tag="490"/>
                                            <ContentPresenter x:Name="AbilityStat2" ContentTemplate="{StaticResource StatsAbilitiesEntryTemplate}" Content="{Binding Stats.Abilities[2]}" Tag="400"/>
                                            <ContentPresenter x:Name="AbilityStat3" ContentTemplate="{StaticResource StatsAbilitiesEntryTemplate}" Content="{Binding Stats.Abilities[3]}" Tag="310"/>
                                            <ContentPresenter x:Name="AbilityStat4" ContentTemplate="{StaticResource StatsAbilitiesEntryTemplate}" Content="{Binding Stats.Abilities[4]}" Tag="220"/>
                                            <ContentPresenter x:Name="AbilityStat5" ContentTemplate="{StaticResource StatsAbilitiesEntryTemplate}" Content="{Binding Stats.Abilities[5]}" Tag="130"/>
                                        </StackPanel>

                                        <!-- FEATURES -->
                                        <StackPanel Name="FeaturesList">
                                            <ls:LSNineSliceImage x:Name="FeaturesTitle" Style="{StaticResource ListTitleBgStyle}" Margin="0,0,0,8" Focusable="False">
                                                <TextBlock Text="{Binding Source='h9f9bfc7dgf4cdg4198g83e3gcb974dd2e949', Converter={StaticResource TranslatedStringConverter}}"/>
                                            </ls:LSNineSliceImage>
                                            <Border>
                                                <Grid>
                                                    <b:Interaction.Behaviors>
                                                        <ls:CollectionFilterBehavior x:Name="AllCharacterFeaturesPredicate" ItemsSource="{Binding Stats.Passives}" Predicate="{Binding Stats.AllCharacterFeaturesPredicate}"/>
                                                        <ls:CollectionSortBehavior x:Name="AllCharacterFeaturesSorted" ItemsSource="{Binding FilteredItems, ElementName=AllCharacterFeaturesPredicate}" Comparer="{Binding Stats.PassivesSortComparer}"/>
                                                    </b:Interaction.Behaviors>
                                                    <ItemsControl x:Name="FeaturesHolder" ItemsSource="{Binding SortedItems, ElementName=AllCharacterFeaturesSorted}" ItemTemplate="{StaticResource FeaturesListItemTemplate}" Visibility="Visible" />
                                                </Grid>
                                            </Border>
                                        </StackPanel>


                                        <!--CONDITIONS-->
                                        <StackPanel Name="ConditionsList" Visibility="{Binding StatusEffects.Count, Converter={StaticResource CountToVisibilityConverter}}" >
                                            <ls:LSNineSliceImage x:Name="ConditionsTitle" Style="{StaticResource ListTitleBgStyle}" Margin="0,0,0,8" Focusable="False">
                                                <TextBlock Text="{Binding Source='h3baf1fe2g7d16g4d77gbc35gc17a90fb27d6', Converter={StaticResource TranslatedStringConverter}}"/>
                                            </ls:LSNineSliceImage>
                                            <ItemsControl x:Name="StatusHolder" ItemsSource="{Binding StatusEffects}" ItemTemplate="{StaticResource StatusListItemTemplate}" Background="Transparent"/>
                                        </StackPanel>

                                        <!-- RESISTANCES -->
                                        <StackPanel Name="ResistancesSection">
                                            <ls:LSNineSliceImage x:Name="ResistancesTitle" Style="{StaticResource ListTitleBgStyle}" Margin="0,0,0,8" Focusable="False">
                                                <TextBlock Text="{Binding Source='h98a4ccfbg20f4g4294g9bf7g624c95711539', Converter={StaticResource TranslatedStringConverter}}"/>
                                            </ls:LSNineSliceImage>
                                            <Control x:Name="ResistanceContainer" HorizontalAlignment="Center" Template="{StaticResource ResistanceListTemplate}"/>
                                        </StackPanel>

                                        <!--DETAILS-->
                                        <ls:LSNineSliceImage x:Name="DetailsTitle" Style="{StaticResource ListTitleBgStyle}" Margin="0,0,0,8" Focusable="False">
                                            <TextBlock Text="{Binding Source='h6f7a7018gd5f6g4c32g9386g6df0744d7ecd', Converter={StaticResource TranslatedStringConverter}}"/>
                                        </ls:LSNineSliceImage>

                                        <ContentControl Height="{StaticResource GenericRowHeight}" Template="{StaticResource DetailedEntry}" DataContext="{Binding Stats.Initiative}" ToolTip="{StaticResource PlacementParentDCTooltip}" ls:MoveFocus.Focusable="True" Focusable="True">
                                            <DockPanel>
                                                <Control Template="{StaticResource StatsDisplayName}" Style="{StaticResource ListLabelCntrlStyle}"/>
                                                <TextBlock Text="{Binding Value, StringFormat={}{0:+#;-#;+0}}" Style="{StaticResource ListValueStyle}"/>
                                            </DockPanel>
                                        </ContentControl>

                                        <ContentControl Height="{StaticResource GenericRowHeight}" Template="{StaticResource DetailedEntry}" DataContext="{Binding Stats.MovementResource}" ToolTip="{StaticResource PlacementParentDCTooltip}" ls:MoveFocus.Focusable="True" Focusable="True">
                                            <DockPanel>
                                                <TextBlock Text="{Binding Name}" Style="{StaticResource ListLabelStyle}"/>
                                                <TextBlock Text="{Binding MaxValue, Converter={StaticResource UnitConverter}, ConverterParameter='Distance Short'}" Style="{StaticResource ListValueStyle}"/>
                                            </DockPanel>
                                        </ContentControl>

                                        <ContentControl Height="{StaticResource GenericRowHeight}" Template="{StaticResource DetailedEntry}" Visibility="{Binding IsPlayableCharacter, Converter={StaticResource BoolToVisibleConverter}}" ls:MoveFocus.Focusable="True" Focusable="True">
                                            <DockPanel>
                                                <Control x:Name="DarkVisionRangeName" Template="{StaticResource StatsDisplayName}" DataContext="{Binding Stats.DarkVisionRange}" Style="{StaticResource ListLabelCntrlStyle}"/>
                                                <TextBlock Text="{Binding Stats.DarkVisionRange.Value, Converter={StaticResource UnitConverter}, ConverterParameter='Distance Short'}" Style="{StaticResource ListValueStyle}"/>
                                            </DockPanel>
                                        </ContentControl>

                                        <ContentControl Height="{StaticResource GenericRowHeight}" Template="{StaticResource DetailedEntry}" ls:MoveFocus.Focusable="True" Focusable="True">
                                            <DockPanel>
                                                <TextBlock Text="{Binding Source='hfc7ce51bga5d6g4711g8e19g3fcebf236de0', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource ListLabelStyle}"/>
                                                <Control Template="{StaticResource ObjectSizeTextTemplate}">
                                                    <Control.Resources>
                                                        <Style TargetType="TextBlock" BasedOn="{StaticResource ListValueStyle}"/>
                                                    </Control.Resources>
                                                </Control>
                                            </DockPanel>
                                        </ContentControl>

                                        <ContentControl Height="{StaticResource GenericRowHeight}" x:Name="weightStat" Template="{StaticResource DetailedEntry}" DataContext="{Binding Stats.Weight}" ls:MoveFocus.Focusable="True" Focusable="True" >
                                            <ContentControl.ToolTip>
                                                <ls:LSTooltip Content="{Binding ElementName=weightStat,Path=DataContext}"/>
                                            </ContentControl.ToolTip>
                                            <DockPanel>
                                                <Control Template="{StaticResource StatsDisplayName}" Style="{StaticResource ListLabelCntrlStyle}"/>
                                                <TextBlock Text="{Binding Value, Converter={StaticResource UnitConverter}, ConverterParameter='Weight Short'}" Style="{StaticResource ListValueStyle}"/>
                                            </DockPanel>
                                        </ContentControl>

                                        <ContentControl Height="{StaticResource GenericRowHeight}" Template="{StaticResource DetailedEntry}" ls:MoveFocus.Focusable="True" Focusable="True">
                                            <ContentControl.ToolTip>
                                                <ls:LSTooltip Content="{Binding Source='h97226633g565ag44c0gbd64g89e70c886cba',Converter={StaticResource TranslatedStringConverter}}"/>
                                            </ContentControl.ToolTip>
                                            <DockPanel>
                                                <TextBlock Text="{Binding Source='h3faf5e3cg719dg4b1cgb21egf2afeafb0eea', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource ListLabelStyle}"/>
                                                <TextBlock Text="{Binding EncumbranceStats.WeightMaximum, Converter={StaticResource UnitConverter}, ConverterParameter='Weight Short'}" Style="{StaticResource ListValueStyle}"/>
                                            </DockPanel>
                                        </ContentControl>
                                    </StackPanel>
                                </ScrollViewer>
                            </Grid>

                            <!--FOR ITEMS-->
                            <Grid x:Name="ItemViewer" Visibility="Collapsed" Style="{StaticResource SplitScreenOverrideColumn}">
                                <ls:LSScrollViewer Template="{StaticResource ScrollViewerTemplate}" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Visible" VerticalAlignment="Top" Height="{StaticResource CSInfoHeight}" BoundScrollUpEvent="UIScrollUp" BoundScrollDownEvent="UIScrollDown">
                                    <StackPanel>
                                        <ContentPresenter ls:TooltipExtender.Owner="{Binding DataContext.CurrentPlayer.SelectedCharacter, ElementName=Examine_c}" Content="{Binding .}" DataContext="{Binding .}" ContentTemplate="{StaticResource ItemsTooltip}" ls:TooltipExtender.IsOpen="True" ls:TooltipExtender.Content="{Binding .}" Margin="80,80,180,80"/>
                                        <StackPanel MaxWidth="{StaticResource CSInfoWidth}" MaxHeight="{StaticResource CSInnerHeight}">
                                            <!-- Health Bar -->
                                            <ContentPresenter x:Name="Health" ContentTemplate="{StaticResource StatsValueEntryTemplate}" Content="{Binding Stats.Health}" Tag="max" Visibility="{Binding IsValid, Converter={StaticResource BoolToVisibleConverter}}"/>
                                            <!-- RESISTANCES -->
                                            <StackPanel Name="ResistancesSectionIcons" Visibility="{Binding Stats.NumActiveResistances, Converter={StaticResource CountToVisibilityConverter}}">
                                                <ls:LSNineSliceImage x:Name="ResistancesTitleItems" Style="{StaticResource ListTitleBgStyle}" Margin="0,0,0,8" Focusable="False">
                                                    <TextBlock Text="{Binding Source='h98a4ccfbg20f4g4294g9bf7g624c95711539', Converter={StaticResource TranslatedStringConverter}}"/>
                                                </ls:LSNineSliceImage>
                                                <Control x:Name="ResistanceContainerItems" HorizontalAlignment="Center" Template="{StaticResource ResistanceListTemplate}"/>
                                            </StackPanel>
      
                                        </StackPanel>
                                     </StackPanel>
                                </ls:LSScrollViewer>
                            </Grid>
                        </Grid>
                    </ls:LSNineSliceImage>

                </Grid>

                <!--BUTTON PROMTPS-->
                <StackPanel VerticalAlignment="Bottom" HorizontalAlignment="Center" Orientation="Horizontal">

                    <ls:LSButton Style="{StaticResource ControllerButtonWBG}" VerticalAlignment="Center"
                         DataContext = "{Binding CurrentPlayer.UIData.InputEvents, Converter={StaticResource FindInputEventConverter}, ConverterParameter='UIShowInfo'}"
                         Content="{Binding Source='h557ee2acgaaf4g4b85g9a67g29f53570c4f0', Converter={StaticResource TranslatedStringConverter}}"
                         Command="{Binding DataContext.ToggleTooltipOnUIElement, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" 
                         CommandParameter="{Binding FocusedElement, ElementName=Examine_c}"/>

                    <ls:LSButton Style="{StaticResource ControllerButtonWBG}" VerticalAlignment="Center" 
                         DataContext="{Binding CurrentPlayer.UIData.InputEvents, Converter={StaticResource FindInputEventConverter}, ConverterParameter='UICancel'}"
                         Content="{Binding Source='h6fefa28bg2149g4cacga071gd95b236b2d0b', Converter={StaticResource TranslatedStringConverter}}"
                         Command="{Binding DataContext.CustomEvent, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" 
                         CommandParameter="CloseWidget"/>
                </StackPanel>
                <Grid.Triggers>
                    <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                        <BeginStoryboard Storyboard="{StaticResource OpenPanelAnim}" />
                    </EventTrigger>
                </Grid.Triggers>
            </Grid>

            <!--Check what we are Examining-->
            <ControlTemplate.Triggers>
                <DataTrigger Binding="{Binding CurrentPlayer.UIData.ExamineTarget.Type}" Value="Item">
                    <Setter TargetName="ItemViewer" Property="Visibility" Value="Visible"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding CurrentPlayer.UIData.ExamineTarget.Type}" Value="Character">
                    <Setter TargetName="CharacterViewer" Property="Visibility" Value="Visible"/>
                </DataTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

    </ls:UIWidget.Template>
    <b:Interaction.Triggers>
        <!--Refresh Tooltips-->
        <b:EventTrigger EventName="FocusChanged">
            <b:InvokeCommandAction Command="{Binding ShowTooltipOnUIElement}" CommandParameter="{Binding Path=FocusedElement, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}"/>
            <ls:LSPlaySound Sound="UI_Shared_Hover"/>
        </b:EventTrigger>
        <b:EventTrigger EventName="Loaded">
            <ls:LSPlaySound Sound="UI_HUD_Examine_Open"/>
            <b:InvokeCommandAction Command="{Binding EnableTooltipOnUIElement}"/>
        </b:EventTrigger>
    </b:Interaction.Triggers>
</ls:UIWidget>