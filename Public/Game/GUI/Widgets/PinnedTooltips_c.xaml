<ls:UIWidget x:Name="PinnedTooltips_c"
             ls:UIWidget.ContextName="PinnedTooltips"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
			 xmlns:b="http://schemas.microsoft.com/xaml/behaviors" 
             xmlns:ls="clr-namespace:ls;assembly=SharedGUI"
			 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:System="clr-namespace:System;assembly=mscorlib"
			 mc:Ignorable="d"
             d:DesignHeight="2160" d:DesignWidth="3840"
			 d:DataContext="{d:DesignInstance {x:Type ls:DCPinnedTooltips}, IsDesignTimeCreatable=True}"
             FocusDown="UIDown" FocusLeft="UILeft" FocusRight="UIRight" FocusUp="UIUp">

    <ls:UIWidget.Template>
        <ControlTemplate>
            <ControlTemplate.Resources>
                <ResourceDictionary>
                    <System:Double x:Key="ColumnWidth">840</System:Double>

                    <Storyboard x:Key="ScreenAppear" FillBehavior="Stop">
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="BackgroundCover"  Storyboard.TargetProperty="Opacity">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="0"/>
                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.8"/>
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PinnedContainer"  Storyboard.TargetProperty="Opacity">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="0"/>
                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.8"/>
                        </DoubleAnimationUsingKeyFrames>
                        <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="PinnedContainer" Storyboard.TargetProperty="Margin">
                            <SplineThicknessKeyFrame KeyTime="0:0:0.0" Value="-80,0,0,0" />
                            <SplineThicknessKeyFrame KeyTime="0:0:0.2" Value="0,0,0,0" />
                        </ThicknessAnimationUsingKeyFrames>
                    </Storyboard>

                    <Storyboard x:Key="TooltipsSlideLeftMain" FillBehavior="Stop">
                        <DoubleAnimation Storyboard.TargetName="PinnedContainerTopLevel" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" BeginTime="0:0:0.0" Duration="0:0:0.2" From="0" To="-840" />
                    </Storyboard>

                    <Storyboard x:Key="TooltipsSlideRightMain" FillBehavior="Stop">
                        <DoubleAnimation Storyboard.TargetName="PinnedContainerTopLevel" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" BeginTime="0:0:0.0" Duration="0:0:0.2" From="-1680" To="-840" />
                    </Storyboard>

                    <Storyboard x:Key="TooltipsSlideRightMainToStart" FillBehavior="Stop">
                        <DoubleAnimation Storyboard.TargetName="PinnedContainerTopLevel" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" BeginTime="0:0:0.0" Duration="0:0:0.2" From="-840" To="0" />
                    </Storyboard>

                    <Storyboard x:Key="TooltipsSlideRightSplit" FillBehavior="Stop">
                        <DoubleAnimation Storyboard.TargetName="PinnedContainerTopLevel" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" BeginTime="0:0:0.0" Duration="0:0:0.2" From="-840" To="0" />
                    </Storyboard>

                </ResourceDictionary>
            </ControlTemplate.Resources>

            <Grid x:Name="Root" HorizontalAlignment="Stretch" ClipToBounds="True">
                <b:Interaction.Triggers>
                    <b:EventTrigger EventName="Unloaded">
                        <b:InvokeCommandAction Command="{Binding RequestClearPinnedTooltipsCommand}"/>
                    </b:EventTrigger>
                </b:Interaction.Triggers>

                <Rectangle x:Name="BackgroundCover" Opacity="0.85" Fill="{StaticResource LS_PopUpBackgroundColorMedium}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />

                <!-- Scrollviewer prevents content being cut off in split screen when translating with the RenderTransform -->
                <ScrollViewer x:Name="ContentScrollview" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Disabled">
                    <StackPanel x:Name="PinnedContainerTopLevel" HorizontalAlignment="Left" Orientation="Horizontal" VerticalAlignment="Stretch" MaxHeight="{Binding ActualHeight, ElementName=PinnedTooltips_c}">

                        <StackPanel.RenderTransform>
                            <TranslateTransform x:Name="PinnedTooltipsOffset" X="0"/>
                        </StackPanel.RenderTransform>

                        <Grid x:Name="PinnedContainer" Background="{StaticResource LS_PanelBackground}" >

                            <ListBox x:Name="PinnedTooltips" ItemsSource="{Binding PinnedTooltips}" AlternationCount="{Binding PinnedTooltips.Count}" Margin="80,140,120,160" SelectedIndex="{Binding AlternationCount, ElementName=PinnedTooltips, Converter={StaticResource AddConverter}, ConverterParameter='-1'}" Visibility="{Binding PinnedTooltips.Count, Converter={StaticResource CountToVisibilityConverter}}" >

                                <ItemsControl.Resources>
                                    <Style TargetType="{x:Type ls:LSElementCopy}">
                                        <Setter Property="VerticalAlignment" Value="Top"/>
                                        <Setter Property="HorizontalAlignment" Value="Center"/>
                                    </Style>
                                    <Style x:Key="DefaultTooltip9Slice" TargetType="ls:LSNineSliceImage" BasedOn="{StaticResource DefaultTooltip9Slice}">
                                        <Setter Property="ImageSource" Value="{x:Null}" />
                                    </Style>
                                </ItemsControl.Resources>
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel x:Name="ListBoxContainer" Orientation="Horizontal"/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ListBox.ItemContainerStyle>
                                    <Style TargetType="ListBoxItem" BasedOn="{StaticResource {x:Type ListBoxItem}}">
                                        <Setter Property="Width" Value="{StaticResource ColumnWidth}"/>

                                        <Setter Property="Visibility" Value="Visible"/>
                                        <Setter Property="Opacity" Value="0.5"/>

                                        <Style.Triggers>
                                            <DataTrigger Value="True">
                                                <DataTrigger.Binding>
                                                    <MultiBinding Converter="{StaticResource EqualConverter}">
                                                        <Binding Path="(ItemsControl.AlternationIndex)" RelativeSource="{RelativeSource Mode=Self}" Converter="{StaticResource AddConverter}" ConverterParameter="1"/>
                                                        <Binding Path="(ItemsControl.AlternationCount)" RelativeSource="{RelativeSource AncestorType={x:Type ItemsControl}}"/>
                                                    </MultiBinding>
                                                </DataTrigger.Binding>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="ListBoxItem">
                                                            <Grid>
                                                                <ls:LSScrollViewer x:Name="ScrollViewer" BoundScrollUpEvent="UIScrollUp" BoundScrollDownEvent="UIScrollDown" Template="{StaticResource StretchingScrollViewerTemplate}" VerticalScrollBarVisibility="Auto" Margin="0,0,-30,0" GamepadScrollMultiplier="600">
                                                                    <ScrollViewer.Resources>
                                                                        <Style TargetType="ScrollBar" BasedOn="{StaticResource ControllerHintGoldScrollbar}"/>
                                                                        <GridLength x:Key="Left">0</GridLength>
                                                                        <GridLength x:Key="Right">0</GridLength>
                                                                    </ScrollViewer.Resources>
                                                                    <StackPanel>
                                                                        <ContentPresenter/>
                                                                    </StackPanel>
                                                                </ls:LSScrollViewer>
                                                            </Grid>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>

                                                <Setter Property="MaxHeight" Value="{Binding ActualHeight, ElementName=ListBoxContainer}"/>
                                                <Setter Property="Opacity" Value="1"/>
                                            </DataTrigger>

                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Value="True">
                                                        <Condition.Binding>
                                                            <MultiBinding Converter="{StaticResource LessThanOrEqualMultiConverter}">
                                                                <Binding Path="(ItemsControl.AlternationIndex)" RelativeSource="{RelativeSource Mode=Self}" Converter="{StaticResource AddConverter}" ConverterParameter="4"/>
                                                                <Binding Path="(ItemsControl.AlternationCount)" RelativeSource="{RelativeSource AncestorType={x:Type ItemsControl}}"/>
                                                            </MultiBinding>

                                                        </Condition.Binding>
                                                    </Condition>
                                                    <Condition Binding="{Binding DataContext.Layout, ElementName=PinnedTooltips_c}" Value="Common"/>
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                            </MultiDataTrigger>

                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Value="True">
                                                        <Condition.Binding>
                                                            <MultiBinding Converter="{StaticResource LessThanOrEqualMultiConverter}">
                                                                <Binding Path="(ItemsControl.AlternationIndex)" RelativeSource="{RelativeSource Mode=Self}" Converter="{StaticResource AddConverter}" ConverterParameter="3"/>
                                                                <Binding Path="(ItemsControl.AlternationCount)" RelativeSource="{RelativeSource AncestorType={x:Type ItemsControl}}"/>
                                                            </MultiBinding>
                                                        </Condition.Binding>
                                                    </Condition>
                                                    <Condition Binding="{Binding DataContext.Layout, ElementName=PinnedTooltips_c}" Value="Left"/>
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Value="True">
                                                        <Condition.Binding>
                                                            <MultiBinding Converter="{StaticResource LessThanOrEqualMultiConverter}">
                                                                <Binding Path="(ItemsControl.AlternationIndex)" RelativeSource="{RelativeSource Mode=Self}" Converter="{StaticResource AddConverter}" ConverterParameter="3"/>
                                                                <Binding Path="(ItemsControl.AlternationCount)" RelativeSource="{RelativeSource AncestorType={x:Type ItemsControl}}"/>
                                                            </MultiBinding>
                                                        </Condition.Binding>
                                                    </Condition>
                                                    <Condition Binding="{Binding DataContext.Layout, ElementName=PinnedTooltips_c}" Value="Right"/>
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ListBox.ItemContainerStyle>
                            </ListBox>
                        </Grid>

                        <Grid>
                            <ScrollViewer x:Name="ChildTooltipsContainer" HorizontalAlignment="Left" Width="{StaticResource ColumnWidth}" Margin="0,50,100,160" Template="{StaticResource OverlappingScrollViewerTemplate}" VerticalScrollBarVisibility="Auto">
                                <ScrollViewer.Resources>
                                    <Style x:Key="ScrollBarStyle" TargetType="ScrollBar" BasedOn="{StaticResource MinimalGoldScrollbar}"/>
                                    <GridLength x:Key="Left">0</GridLength>
                                    <GridLength x:Key="Right">0</GridLength>
                                </ScrollViewer.Resources>
                                <DockPanel x:Name="ChildTooltips" VerticalAlignment="Top">
                                    <b:Interaction.Behaviors>
                                        <ls:ListChildTooltipsBehavior SourceElement="{Binding SelectedItem, ElementName=PinnedTooltips}" SourceOwner="{Binding PinnedTooltips[0].Owner}">
                                            <ls:ListChildTooltipsBehavior.WrapperStyle>
                                                <Style TargetType="ContentControl">
                                                    <Setter Property="HorizontalAlignment" Value="Left" />
                                                    <Setter Property="Focusable" Value="True"/>
                                                    <Setter Property="ls:MoveFocus.Focusable" Value="True"/>
                                                    <Setter Property="DockPanel.Dock" Value="Top"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate x:Name="SideTooltips"  TargetType="{x:Type ContentControl}">
                                                                <Grid x:Name="Container" Opacity="1" Margin="0,0,0,-60">
                                                                    <Grid.RenderTransform>
                                                                        <TranslateTransform X="0"/>
                                                                    </Grid.RenderTransform>
                                                                    <b:Interaction.Triggers>
                                                                        <b:EventTrigger EventName="Loaded">
                                                                            <ls:SetMoveFocusAction TargetName="PinnedTooltips_c" FocusElement="{Binding ElementName=Root}"/>
                                                                        </b:EventTrigger>
                                                                    </b:Interaction.Triggers>

                                                                    <ContentPresenter Margin="52" HorizontalAlignment="Left" />

                                                                    <Control x:Name="Frame" Template="{StaticResource FocusableBorderTemplate}" Visibility="{Binding (ls:MoveFocus.IsFocused), RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}, Converter={StaticResource BoolToVisibleConverter}}" Margin="46" HorizontalAlignment="Left" />

                                                                    <Grid.Triggers>
                                                                        <EventTrigger RoutedEvent="Loaded">
                                                                            <BeginStoryboard x:Name="AppearTooltips">

                                                                                <Storyboard FillBehavior="Stop">
                                                                                    <DoubleAnimationUsingKeyFrames  Storyboard.TargetProperty="Opacity">
                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="0"/>
                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>

                                                                                    </DoubleAnimationUsingKeyFrames>

                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="-300" />
                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-300" />

                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="40" />
                                                                                        <EasingDoubleKeyFrame KeyTime="0:0:0.45" Value="0" />
                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                </Storyboard>
                                                                            </BeginStoryboard>
                                                                        </EventTrigger>
                                                                    </Grid.Triggers>
                                                                </Grid>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </ls:ListChildTooltipsBehavior.WrapperStyle>
                                        </ls:ListChildTooltipsBehavior>
                                    </b:Interaction.Behaviors>
                                </DockPanel>
                            </ScrollViewer>
                        </Grid>
                    </StackPanel>
                </ScrollViewer>

                <StackPanel x:Name="ButtonContainer" Orientation="Horizontal" Style="{StaticResource ButtonHint.Container.Left}" Visibility="{Binding PinnedTooltips.Count, Converter={StaticResource CountToVisibilityConverter}}" >

                    <ls:LSButton x:Name="PinBtn" ls:LSButton.BoundEvent="UIAccept" ContentTemplate="{StaticResource ControllerButtonHint}" Content="{Binding CurrentPlayer.UIData.InputEvents, ConverterParameter=UIAccept, Converter={StaticResource FindInputEventConverter}}" Tag="{Binding Source='hd0c08193ga7f2g4a7eg8225g63748c7b3096', Converter={StaticResource TranslatedStringConverter}}" Command="{Binding PinCopyCommand}" CommandParameter="{Binding FocusedElement.Content, ElementName=PinnedTooltips_c}" IsEnabled="{Binding FocusedElement, ElementName=PinnedTooltips_c, Converter={StaticResource NullToBoolFalseConverter}}">
                        <b:Interaction.Triggers>

                            <b:EventTrigger EventName="LSButtonPressed">
                                <b:Interaction.Behaviors>
                                    <b:ConditionBehavior>
                                        <b:ConditionalExpression>
                                            <b:ComparisonCondition LeftOperand="{Binding Path=(ItemsControl.AlternationCount), ElementName=PinnedTooltips}" Operator="GreaterThanOrEqual" RightOperand="2"/>
                                            <b:ComparisonCondition LeftOperand="{Binding Layout}" Operator="Equal" RightOperand="Common" />
                                        </b:ConditionalExpression>

                                    </b:ConditionBehavior>
                                </b:Interaction.Behaviors>
                                <b:ChangePropertyAction TargetName="PinnedContainerTopLevel" PropertyName="RenderTransform" >
                                    <b:ChangePropertyAction.Value>
                                        <TranslateTransform X="-840" />
                                    </b:ChangePropertyAction.Value>

                                </b:ChangePropertyAction>

                                <b:ControlStoryboardAction Storyboard="{StaticResource TooltipsSlideLeftMain}"/>
                            </b:EventTrigger>

                            <b:EventTrigger EventName="LSButtonPressed">
                                <b:Interaction.Behaviors>
                                    <b:ConditionBehavior>
                                        <b:ConditionalExpression>
                                            <b:ComparisonCondition LeftOperand="{Binding Path=(ItemsControl.AlternationCount), ElementName=PinnedTooltips}" Operator="GreaterThanOrEqual" RightOperand="1"/>
                                            <b:ComparisonCondition LeftOperand="{Binding Layout}" Operator="NotEqual" RightOperand="Common" />
                                        </b:ConditionalExpression>
                                    </b:ConditionBehavior>
                                </b:Interaction.Behaviors>
                                <b:ChangePropertyAction TargetName="PinnedContainerTopLevel" PropertyName="RenderTransform" >
                                    <b:ChangePropertyAction.Value>
                                        <TranslateTransform X="-840" />
                                    </b:ChangePropertyAction.Value>
                                </b:ChangePropertyAction>
                                <b:ControlStoryboardAction Storyboard="{StaticResource TooltipsSlideLeftMain}"/>
                            </b:EventTrigger>
                        </b:Interaction.Triggers>
                    </ls:LSButton>

                    <ls:LSButton x:Name="ClearBtn" ls:LSButton.BoundEvent="UIDelete" ContentTemplate="{StaticResource ControllerButtonHint}" Content="{Binding CurrentPlayer.UIData.InputEvents, ConverterParameter=UIDelete, Converter={StaticResource FindInputEventConverter}}" Tag="{Binding Source='h5cd0f19dg4036g4d1fgb4efg210600e4d683', Converter={StaticResource TranslatedStringConverter}}" Command="{Binding RequestClearPinnedTooltipsCommand}"/>

                    <ls:LSButton x:Name="RemoveBtn" ls:LSButton.BoundEvent="UICancel" ContentTemplate="{StaticResource ControllerButtonHint}" Content="{Binding CurrentPlayer.UIData.InputEvents, ConverterParameter=UICancel, Converter={StaticResource FindInputEventConverter}}" Tag="{Binding Source='h9d3b37a6gf7e3g40a8g87d3g21b1d1732512', Converter={StaticResource TranslatedStringConverter}}" Command="{Binding RemoveLastCopyCommand}">
                        <b:Interaction.Triggers>

                            <!-- Move tooltips left when there's more than 3 pinned tooltips full screen -->
                            <b:EventTrigger EventName="LSButtonPressed">
                                <b:Interaction.Behaviors>
                                    <b:ConditionBehavior>
                                        <b:ConditionalExpression>
                                            <b:ComparisonCondition LeftOperand="{Binding Path=(ItemsControl.AlternationCount), ElementName=PinnedTooltips}" Operator="GreaterThan" RightOperand="3"/>
                                            <b:ComparisonCondition LeftOperand="{Binding Layout}" Operator="Equal" RightOperand="Common" />
                                        </b:ConditionalExpression>
                                    </b:ConditionBehavior>
                                </b:Interaction.Behaviors>
                                <b:ChangePropertyAction TargetName="PinnedContainerTopLevel" PropertyName="RenderTransform" >
                                    <b:ChangePropertyAction.Value>
                                        <TranslateTransform X="-840" />
                                    </b:ChangePropertyAction.Value>

                                </b:ChangePropertyAction>
                                <b:ControlStoryboardAction Storyboard="{StaticResource TooltipsSlideRightMain}"/>
                            </b:EventTrigger>

                            <!-- Move tooltips left and correct the positions when there's 3 tooltips full screen -->
                            <b:EventTrigger EventName="LSButtonPressed">
                                <b:Interaction.Behaviors>
                                    <b:ConditionBehavior>
                                        <b:ConditionalExpression>
                                            <b:ComparisonCondition LeftOperand="{Binding Path=(ItemsControl.AlternationCount), ElementName=PinnedTooltips}" Operator="Equal" RightOperand="3"/>
                                            <b:ComparisonCondition LeftOperand="{Binding Layout}" Operator="Equal" RightOperand="Common" />
                                        </b:ConditionalExpression>
                                    </b:ConditionBehavior>
                                </b:Interaction.Behaviors>
                                <b:ChangePropertyAction TargetName="PinnedContainerTopLevel" PropertyName="RenderTransform" >
                                    <b:ChangePropertyAction.Value>
                                        <TranslateTransform X="0" />
                                    </b:ChangePropertyAction.Value>

                                </b:ChangePropertyAction>
                                <b:ControlStoryboardAction Storyboard="{StaticResource TooltipsSlideRightMainToStart}"/>
                            </b:EventTrigger>

                            <!-- Move tooltips left when there's more than 2 pinned tooltips split screen -->

                            <b:EventTrigger EventName="LSButtonPressed">
                                <b:Interaction.Behaviors>
                                    <b:ConditionBehavior>
                                        <b:ConditionalExpression>
                                            <b:ComparisonCondition LeftOperand="{Binding Path=(ItemsControl.AlternationCount), ElementName=PinnedTooltips}" Operator="GreaterThan" RightOperand="2"/>
                                            <b:ComparisonCondition LeftOperand="{Binding Layout}" Operator="NotEqual" RightOperand="Common" />
                                        </b:ConditionalExpression>
                                    </b:ConditionBehavior>
                                </b:Interaction.Behaviors>
                                <b:ChangePropertyAction TargetName="PinnedContainerTopLevel" PropertyName="RenderTransform" >
                                    <b:ChangePropertyAction.Value>
                                        <TranslateTransform X="-840" />
                                    </b:ChangePropertyAction.Value>
                                </b:ChangePropertyAction>
                                <b:ControlStoryboardAction Storyboard="{StaticResource TooltipsSlideRightMain}"/>
                            </b:EventTrigger>

                            <!-- Move tooltips left and correct the positions when there's 2 tooltips split screen -->
                            <b:EventTrigger EventName="LSButtonPressed">
                                <b:Interaction.Behaviors>
                                    <b:ConditionBehavior>
                                        <b:ConditionalExpression>
                                            <b:ComparisonCondition LeftOperand="{Binding Path=(ItemsControl.AlternationCount), ElementName=PinnedTooltips}" Operator="Equal" RightOperand="2"/>
                                            <b:ComparisonCondition LeftOperand="{Binding Layout}" Operator="NotEqual" RightOperand="Common" />
                                        </b:ConditionalExpression>
                                    </b:ConditionBehavior>
                                </b:Interaction.Behaviors>
                                <b:ChangePropertyAction TargetName="PinnedContainerTopLevel" PropertyName="RenderTransform" >
                                    <b:ChangePropertyAction.Value>
                                        <TranslateTransform X="0" />
                                    </b:ChangePropertyAction.Value>
                                </b:ChangePropertyAction>
                                <b:ControlStoryboardAction Storyboard="{StaticResource TooltipsSlideRightMainToStart}"/>
                            </b:EventTrigger>
                        </b:Interaction.Triggers>
                    </ls:LSButton>
                    <ls:LSInputBinding x:Name="PinTooltipBinding" Style="{StaticResource PinTooltipBindingStyle}" IsEnabled="False"/>
                </StackPanel>
            </Grid>

            <ControlTemplate.Triggers>

                <DataTrigger Binding="{Binding PinnedTooltips.Count}" Value="1">
                    <Setter TargetName="RemoveBtn" Property="Command" Value="{Binding RequestClearPinnedTooltipsCommand}"/>
                </DataTrigger>

                <DataTrigger Binding="{Binding Children.Count, ElementName=ChildTooltips}" Value="0">
                    <Setter TargetName="PinBtn" Property="IsEnabled" Value="False"/>
                </DataTrigger>

                <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                    <BeginStoryboard  x:Name="AppearStoryboard" Storyboard="{StaticResource ScreenAppear}" />
                </EventTrigger>

            </ControlTemplate.Triggers>

        </ControlTemplate>
    </ls:UIWidget.Template>


    <b:Interaction.Triggers>


        <b:EventTrigger EventName="MoveFocusUp">
            <ls:LSPlaySound Sound="UI_Shared_Panel_Select" />
        </b:EventTrigger>

        <b:EventTrigger EventName="MoveFocusDown">
            <ls:LSPlaySound Sound="UI_Shared_Panel_Select" />
        </b:EventTrigger>

        <b:EventTrigger EventName="MoveFocusLeft">
            <ls:LSPlaySound Sound="UI_Shared_Panel_Select" />
        </b:EventTrigger>

        <b:EventTrigger EventName="MoveFocusRight">
            <ls:LSPlaySound Sound="UI_Shared_Panel_Select" />
        </b:EventTrigger>
    </b:Interaction.Triggers>
</ls:UIWidget>
