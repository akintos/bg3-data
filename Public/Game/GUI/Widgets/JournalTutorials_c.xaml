<ls:UIWidget x:Name="JournalTutorials_c"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:ls="clr-namespace:ls;assembly=SharedGUI"
			 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
			 mc:Ignorable="d"
             FocusDown="UIDown" FocusLeft="UILeft" FocusRight="UIRight" FocusUp="UIUp"
             ls:UIWidget.ContextName="JournalTutorial" d:DataContext="{d:DesignInstance {x:Type ls:JournalTutorial}, IsDesignTimeCreatable=True}"
             d:DesignHeight="2160" d:DesignWidth="3840">
   
    <ls:UIWidget.Template>
        <ControlTemplate>
            <ControlTemplate.Resources>
                <ResourceDictionary>
                    <ResourceDictionary.MergedDictionaries>
                        <ResourceDictionary Source="../Library/JournalTemplates_c.xaml"/>
                    </ResourceDictionary.MergedDictionaries>
                    
                    <!-- Category item -->
                    <HierarchicalDataTemplate DataType="{x:Type ls:TutorialContainer}" ItemsSource="{Binding Tutorials}">
                        <ls:LSToggleButton x:Name="ExpanderButton" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" ls:MoveFocus.Focusable="True" Template="{StaticResource Journal.ListItemTemplate}" BoundEvent="">
                            <DockPanel Margin="20,0">
                                <Image x:Name="Arrow" DockPanel.Dock="Left" Source="{StaticResource ListArrowCollapsed}" Stretch="None" Margin="-18,-18,-8,-18" VerticalAlignment="Center"/>
                                <TextBlock x:Name="Title" DockPanel.Dock="Right" Text="{Binding SectionValue, Converter={StaticResource EnumTranslatedStringConverter}, ConverterParameter='h9de08869g5612g419fgbccbg4655074a1030'}" Style="{StaticResource Journal.BaseTextStyle}" Foreground="{StaticResource LS_accent100TxtColor}" FontSize="{StaticResource ScaledLargeFontSize}" HorizontalAlignment="Left"/>
                            </DockPanel>
                        </ls:LSToggleButton>
                        <HierarchicalDataTemplate.Triggers>
                            
                            <Trigger SourceName="ExpanderButton" Property="IsChecked" Value="True">
                                <Setter TargetName="Arrow" Property="Source" Value="{StaticResource ListArrowExpanded}"/>
                            </Trigger>
                            
                            <Trigger SourceName="ExpanderButton" Property="ls:MoveFocus.IsFocused" Value="True">
                                <Setter TargetName="Arrow" Property="Source" Value="{StaticResource ListArrowCollapsedH}"/>
                                <Setter TargetName="Title" Property="Foreground" Value="{StaticResource LS_tint100}"/>
                            </Trigger>
                            
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition SourceName="ExpanderButton" Property="IsChecked" Value="True"/>
                                    <Condition SourceName="ExpanderButton" Property="ls:MoveFocus.IsFocused" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Arrow" Property="Source" Value="{StaticResource ListArrowExpandedH}"/>
                            </MultiTrigger>

                            <!-- We can't disable it since it prevents focus, so change the event instead -->
                            <Trigger SourceName="ExpanderButton" Property="ls:MoveFocus.IsFocused" Value="True">
                                <Setter TargetName="ExpanderButton" Property="BoundEvent" Value="UIAccept"/>
                            </Trigger>

                        </HierarchicalDataTemplate.Triggers>
                    </HierarchicalDataTemplate>

                    <!-- Tutorial item -->
                    <HierarchicalDataTemplate DataType="{x:Type ls:TutorialView}">
                        <ContentControl x:Name="TutorialItemContent" Template="{StaticResource Journal.ListItemTemplate}" ls:MoveFocus.Focusable="True">
                            <DockPanel Margin="50,0">
                                <Image x:Name="img" DockPanel.Dock="Right" Margin="0,4,0,0" VerticalAlignment="Center" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/Journal/bullet_updated.png" Stretch="None" Width="38" Visibility="{Binding IsNewTutorial, Converter={StaticResource BoolToVisibleConverter}}"/>
                                <TextBlock x:Name="Text" DockPanel.Dock="Left" Text="{Binding Title}" Style="{StaticResource Journal.BaseTextStyle}" TextAlignment="Left" VerticalAlignment="Center"/>
                            </DockPanel>
                        </ContentControl>

                        <HierarchicalDataTemplate.Triggers>
                            <Trigger SourceName="TutorialItemContent" Property="ls:MoveFocus.IsFocused" Value="True">
                                <Setter TargetName="Text" Property="Foreground" Value="{StaticResource LS_tint100}"/>
                            </Trigger>
                        </HierarchicalDataTemplate.Triggers>

                    </HierarchicalDataTemplate>
                </ResourceDictionary>
            </ControlTemplate.Resources>

            <Grid ClipToBounds="True">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition x:Name="ColumnDef0" Width="1*"/>
                    <ColumnDefinition x:Name="ColumnDef1" Width="3*"/>
                    <ColumnDefinition x:Name="ColumnDef2" Width="4*"/>
                    <ColumnDefinition x:Name="ColumnDef3" Width="31*"/>
                    <ColumnDefinition x:Name="ColumnDef4" Width="1*"/>
                    <ColumnDefinition x:Name="ColumnDef5" Width="0"/>
                    <ColumnDefinition x:Name="ColumnDef6" Width="0"/>
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition Height="4*"/>
                    <RowDefinition Height="6*"/>
                    <RowDefinition Height="35*"/>
                    <RowDefinition Height="5*"/>
                </Grid.RowDefinitions>

                <Image Grid.Column="0" Grid.ColumnSpan="7" Grid.Row="0" Grid.RowSpan="4" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Source="{StaticResource CharacterSheetBackground}" Stretch="UniformToFill"/>

                <Control Grid.Row="0" Grid.ColumnSpan="7" x:Name="Navigation" HorizontalAlignment="Center" VerticalAlignment="Top" Style="{StaticResource Journal.NavigationStyle}"/>

                <Grid x:Name="MainPanel" Grid.Column="3" Grid.Row="1" Grid.RowSpan="2" Visibility="{Binding Path=Visibility, ElementName=SidePanel, Converter={StaticResource InvertVisibilityConverter}}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="3*"/>
                        <RowDefinition Height="17*"/>
                    </Grid.RowDefinitions>

                    <TextBlock x:Name="CategoryTitle" Grid.Row="0" Text="{Binding Source='h20907681g950fg42f3g844fg251c11592d4d', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource Journal.TitleStyle}" Margin="{StaticResource Journal.CategoryTitleMargin}" HorizontalAlignment="Left" VerticalAlignment="Top"/>

                    <TreeView x:Name="TutorialTreeView" Grid.Row="1" ItemsSource="{Binding TutorialsContainers}" BorderBrush="Transparent" >
                        <b:Interaction.Triggers>
                            <b:EventTrigger EventName="Loaded">
                                <ls:SetMoveFocusAction TargetName="JournalTutorials_c"/>
                            </b:EventTrigger>
                        </b:Interaction.Triggers>
                        <TreeView.ItemContainerStyle>
                            <Style TargetType="{x:Type TreeViewItem}">
                                <Setter Property="IsExpanded" Value="True"/>
                                <Setter Property="BorderBrush" Value="Transparent" />
                                <Setter Property="Background" Value="Transparent" />
                                <Setter Property="Padding" Value="0" />
                                <Setter Property="BorderThickness" Value="0" />
                                <Setter Property="HorizontalAlignment" Value="Stretch" />
                                <Setter Property="Width" Value="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType={x:Type ItemsPresenter}}}" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <StackPanel Name="Container">
                                                <ContentPresenter x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="Stretch" Margin="{StaticResource Journal.ListItemMargin}"/>
                                                <ItemsPresenter x:Name="ItemsHost" Margin="50,0,0,0" Visibility="{Binding Path=IsExpanded, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}, Converter={StaticResource BoolToVisibleConverter}}"/>
                                            </StackPanel>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </TreeView.ItemContainerStyle>
                        <TreeView.Template>
                            <ControlTemplate>
                                <ScrollViewer x:Name="ScrollViewer" Template="{StaticResource StretchingScrollViewerTemplate}" VerticalScrollBarVisibility="Visible">
                                    <ScrollViewer.Resources>
                                        <Style TargetType="ScrollBar" BasedOn="{StaticResource MinimalGoldScrollbar}"/>
                                        <GridLength x:Key="Left">0</GridLength>
                                        <GridLength x:Key="Right">0</GridLength>
                                    </ScrollViewer.Resources>
                                    <ItemsPresenter Margin="{StaticResource Journal.ScrollViewerMargin}">
                                        <ItemsPresenter.Width>
                                            <!-- Stretched content doesn't property shrink when shrinking a viewscroller -->
                                            <MultiBinding Converter="{StaticResource SubtractionMultipleConverter}">
                                                <Binding Path="ActualWidth" ElementName="ScrollViewer"/>
                                                <Binding Source="50"/>
                                            </MultiBinding>
                                        </ItemsPresenter.Width>
                                    </ItemsPresenter>
                                </ScrollViewer>
                            </ControlTemplate>
                        </TreeView.Template>
                    </TreeView>
                </Grid>

                <Grid x:Name="SidePanel" Grid.Column="2" Grid.ColumnSpan="2" Grid.Row="1" Grid.RowSpan="2" Visibility="Collapsed">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="3*"/>
                        <RowDefinition Height="17*"/>
                    </Grid.RowDefinitions>

                    <StackPanel x:Name="BookmarkBanner" Grid.Row="0" Orientation="Horizontal" Margin="{StaticResource Journal.BookmarkMargin}">
                        <TextBlock x:Name="NavCategory" Text="{Binding Source='h20907681g950fg42f3g844fg251c11592d4d', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource Journal.BookmarkStyle}" HorizontalAlignment="Center"/>
                        <TextBlock Text=">" Style="{StaticResource Journal.BookmarkStyle}" HorizontalAlignment="Center" Margin="10,0"/>
                        <TextBlock x:Name="NavPage" Text="{Binding Path=FocusedElement.DataContext.Title, ElementName=JournalTutorials_c}" Style="{StaticResource Journal.BookmarkStyle}"/>
                    </StackPanel>

                    <StackPanel Grid.Row="1">
                        <TextBlock x:Name="Title" Text="{Binding Path=FocusedElement.DataContext.Title, ElementName=JournalTutorials_c}" Style="{StaticResource Journal.TitleStyle}" Margin="0,0,0,50"/>
                        <!--No videos for now-->
                        <!--<ls:LSNineSliceImage x:Name="VideoBg" Grid.Row="2" DataContext="{Binding Path=FocusedElement.DataContext.Video, ElementName=JournalTutorials_c}" ImageSource="pack://application:,,,/GustavNoesisGUI;component/Assets/Journal_c/c_tutorialImageFrame.png" Slices="60" Padding="40" HorizontalAlignment="Stretch" Visibility="{Binding ., Converter={StaticResource StringToVisibilityConverter}}" Margin="50,0">
                            <ls:LSVideoPanel x:Name="Video" Video="{Binding .}"/>
                        </ls:LSNineSliceImage>-->

                        <ScrollViewer Template="{StaticResource StretchingScrollViewerTemplate}" Grid.Row="3" VerticalScrollBarVisibility="Visible">
                            <ScrollViewer.Resources>
                                <Style TargetType="ScrollBar" BasedOn="{StaticResource ControllerHintGoldScrollbar}"/>
                                <GridLength x:Key="Left">0</GridLength>
                                <GridLength x:Key="Right">0</GridLength>
                            </ScrollViewer.Resources>
                            <TextBlock x:Name="Description" Style="{StaticResource Journal.BaseTextStyle}" TextWrapping="Wrap">
                                <b:Interaction.Behaviors>
                                    <ls:CtxTransStringRunGeneratorBehavior LocaSource="{Binding Path=FocusedElement.DataContext.Description, ElementName=JournalTutorials_c}" NamedParamInputEvents="{Binding Path=DataContext.CurrentPlayer.UIData.InputEvents, ElementName=JournalTutorials_c}">
                                        <ls:CtxTransStringRunGeneratorBehavior.NamedParamContentStyle>
                                            <Style TargetType="ContentControl">
                                                <Setter Property="Margin" Value="{StaticResource ScaledInlineControllerHintMargin}" />
                                                <Setter Property="Template" Value="{StaticResource ControllerButton.ImageSwitcher}"/>
                                                <Setter Property="Width" Value="{StaticResource ScaledControllerHintSize}"/>
                                                <Setter Property="Height" Value="{StaticResource ScaledControllerHintSize}"/>
                                            </Style>
                                        </ls:CtxTransStringRunGeneratorBehavior.NamedParamContentStyle>
                                    </ls:CtxTransStringRunGeneratorBehavior>
                                </b:Interaction.Behaviors>
                            </TextBlock>
                        </ScrollViewer>
                    </StackPanel>
                </Grid>

                <StackPanel x:Name="ButtonHints" Grid.Column="0" Grid.ColumnSpan="7" Grid.Row="3" Style="{StaticResource ButtonHint.Container.Right}">
                    <ls:LSButton x:Name="ExpandBtn" ContentTemplate="{StaticResource ControllerButtonHint}" Content="{Binding CurrentPlayer.UIData.InputEvents, ConverterParameter=UIAccept, Converter={StaticResource FindInputEventConverter}}" Tag="{Binding Source='h96519a3dg3102g441dg8336g0c0e10f4c388', Converter={StaticResource TranslatedStringConverter}}" Visibility="Collapsed"/>
                    <ls:LSButton x:Name="SelectBtn" ls:LSButton.BoundEvent="UIAccept" ContentTemplate="{StaticResource ControllerButtonHint}" Content="{Binding CurrentPlayer.UIData.InputEvents, ConverterParameter=UIAccept, Converter={StaticResource FindInputEventConverter}}" Tag="{Binding Source='h04f38549g65b8g4b72g834eg87ee8863fdc5', Converter={StaticResource TranslatedStringConverter}}" Visibility="Collapsed">
                        <b:Interaction.Triggers>
                            <b:EventTrigger EventName="LSButtonPressed">
                                <b:ChangePropertyAction TargetName="JournalTutorials_c" PropertyName="FocusDown" Value=""/>
                                <b:ChangePropertyAction TargetName="JournalTutorials_c" PropertyName="FocusLeft" Value=""/>
                                <b:ChangePropertyAction TargetName="JournalTutorials_c" PropertyName="FocusRight" Value=""/>
                                <b:ChangePropertyAction TargetName="JournalTutorials_c" PropertyName="FocusUp" Value=""/>
                                <b:ControlStoryboardAction ControlStoryboardOption="Stop" Storyboard="{StaticResource Journal.FadeOutSidePanelAnim}"/>
                                <b:ControlStoryboardAction ControlStoryboardOption="Play" Storyboard="{StaticResource Journal.FadeInSidePanelAnim}"/>
                            </b:EventTrigger>
                        </b:Interaction.Triggers>
                    </ls:LSButton>
                    <ls:LSButton x:Name="CloseBtn" ls:LSButton.BoundEvent="UICancel" ContentTemplate="{StaticResource ControllerButtonHint}" Content="{Binding CurrentPlayer.UIData.InputEvents, ConverterParameter=UICancel, Converter={StaticResource FindInputEventConverter}}" Tag="{Binding Source='h6fefa28bg2149g4cacga071gd95b236b2d0b', Converter={StaticResource TranslatedStringConverter}}" Visibility="{Binding Path=Visibility, ElementName=BackBtn, Converter={StaticResource InvertVisibilityConverter}}"
                                 Command="{Binding CustomEvent}" CommandParameter="CloseWidget"/>
                    <ls:LSButton x:Name="BackBtn" ls:LSButton.BoundEvent="UICancel" ContentTemplate="{StaticResource ControllerButtonHint}" Content="{Binding CurrentPlayer.UIData.InputEvents, ConverterParameter=UICancel, Converter={StaticResource FindInputEventConverter}}" Tag="{Binding Source='hfe928c0dgb014g4eb2g8c52g6ed43b026e20', Converter={StaticResource TranslatedStringConverter}}" Visibility="{Binding Path=Visibility, ElementName=SidePanel}">
                        <b:Interaction.Triggers>
                            <b:EventTrigger EventName="LSButtonPressed">
                                <b:ChangePropertyAction TargetName="JournalTutorials_c" PropertyName="FocusDown" Value="UIDown"/>
                                <b:ChangePropertyAction TargetName="JournalTutorials_c" PropertyName="FocusLeft" Value="UILeft"/>
                                <b:ChangePropertyAction TargetName="JournalTutorials_c" PropertyName="FocusRight" Value="UIRight"/>
                                <b:ChangePropertyAction TargetName="JournalTutorials_c" PropertyName="FocusUp" Value="UIUp"/>
                                <b:ControlStoryboardAction ControlStoryboardOption="Stop" Storyboard="{StaticResource Journal.FadeInSidePanelAnim}"/>
                                <b:ControlStoryboardAction ControlStoryboardOption="Play" Storyboard="{StaticResource Journal.FadeOutSidePanelAnim}"/>
                            </b:EventTrigger>
                        </b:Interaction.Triggers>
                    </ls:LSButton>
                </StackPanel>

                <b:Interaction.Triggers>
                    <b:PropertyChangedTrigger Binding="{Binding FocusedElement.DataContext, ElementName=JournalTutorials_c}">
                        <b:InvokeCommandAction Command="{Binding ChangeSelectedTutorialCommand}" CommandParameter="{Binding FocusedElement.DataContext, ElementName=JournalTutorials_c}"/>
                    </b:PropertyChangedTrigger>
                </b:Interaction.Triggers>
            </Grid>

            <ControlTemplate.Triggers>
                <DataTrigger Binding="{Binding Path=FocusedElement.DataContext, ElementName=JournalTutorials_c, Converter={StaticResource TypeConverter}}" Value="ls.TutorialView">
                    <Setter TargetName="SelectBtn" Property="Visibility" Value="Visible"/>
                </DataTrigger>

                <DataTrigger Binding="{Binding Visibility, ElementName=SidePanel}" Value="Visible">
                    <Setter TargetName="Navigation" Property="IsEnabled" Value="False"/>
                    <Setter TargetName="Navigation" Property="Margin" Value="-50,0,0,0"/>
                    <Setter TargetName="SelectBtn" Property="Visibility" Value="Collapsed"/>
                </DataTrigger>

                <DataTrigger Binding="{Binding Layout}" Value="Common">
                    <Setter TargetName="ColumnDef0" Property="Width" Value="1*"/>
                    <Setter TargetName="ColumnDef1" Property="Width" Value="4*"/>
                    <Setter TargetName="ColumnDef2" Property="Width" Value="13*"/>
                    <Setter TargetName="ColumnDef3" Property="Width" Value="1*"/>
                    <Setter TargetName="ColumnDef4" Property="Width" Value="18*"/>
                    <Setter TargetName="ColumnDef5" Property="Width" Value="2*"/>
                    <Setter TargetName="ColumnDef6" Property="Width" Value="1*"/>

                    <Setter TargetName="Navigation" Property="Grid.ColumnSpan" Value="5"/>
                    <Setter TargetName="MainPanel" Property="Visibility" Value="Visible"/>
                    <Setter TargetName="MainPanel" Property="Grid.Column" Value="2"/>
                    <Setter TargetName="SidePanel" Property="Grid.Column" Value="4"/>
                    <Setter TargetName="SidePanel" Property="Grid.ColumnSpan" Value="1"/>
                    <Setter TargetName="ButtonHints" Property="Style" Value="{StaticResource ButtonHint.Container.Center}"/>
                    <Setter TargetName="BackBtn" Property="Visibility" Value="Collapsed"/>
                    <Setter TargetName="SelectBtn" Property="Visibility" Value="Collapsed"/>
                    <Setter TargetName="Navigation" Property="IsEnabled" Value="True"/>
                    <Setter TargetName="Navigation" Property="Margin" Value="{StaticResource Journal.NavigationMargin}"/>
                    <Setter TargetName="BookmarkBanner" Property="Visibility" Value="Collapsed"/>
                </DataTrigger>

                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=FocusedElement.DataContext, ElementName=JournalTutorials_c, Converter={StaticResource TypeConverter}}" Value="ls.TutorialView"/>
                        <Condition Binding="{Binding Layout}" Value="Common"/>
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="SidePanel" Property="Visibility" Value="Visible"/>
                </MultiDataTrigger>

                <DataTrigger Binding="{Binding Path=FocusedElement.DataContext, ElementName=JournalTutorials_c, Converter={StaticResource TypeConverter}}" Value="ls.TutorialContainer">
                    <Setter TargetName="ExpandBtn" Property="Visibility" Value="Visible"/>
                </DataTrigger>

                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=FocusedElement.DataContext, ElementName=JournalTutorials_c, Converter={StaticResource TypeConverter}}" Value="ls.TutorialContainer"/>
                        <Condition Binding="{Binding Path=FocusedElement.IsChecked, ElementName=JournalTutorials_c}" Value="True"/>
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="ExpandBtn" Property="Tag" Value="{Binding Source='h0abdb3d7g4b7ag4f00gbb71g5d9d3b1767e4', Converter={StaticResource TranslatedStringConverter}}"/>
                </MultiDataTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </ls:UIWidget.Template>

    <b:Interaction.Triggers>
        <b:EventTrigger EventName="Loaded">
            <ls:LSPlaySound Sound="UI_HUD_Controller_JournalSelection_Open"/>
        </b:EventTrigger>
        <b:EventTrigger EventName="Unloaded">
            <ls:LSPlaySound Sound="UI_HUD_Journal_Close"/>
        </b:EventTrigger>
        <b:EventTrigger EventName="FocusChanged">
            <ls:LSPlaySound Sound="UI_Shared_Hover" />
        </b:EventTrigger>
    </b:Interaction.Triggers>
</ls:UIWidget>