<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
			        xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
					xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:System="clr-namespace:System;assembly=mscorlib"
                    xmlns:ls="clr-namespace:ls;assembly=SharedGUI"
                    xmlns:noesis="clr-namespace:NoesisGUIExtensions;assembly=Noesis.GUI.Extensions"
					mc:Ignorable="d">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../Library/CharacterSheetTemplates.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <!-- Icons -->
    <BitmapImage x:Key="PrimaryAbilityIcon" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/SheetGeneral_c/c_ico_star.png" />
    <BitmapImage x:Key="BulletPointIconEmpty" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/SheetGeneral_c/c_ico_bullet_empty.png" />
    <BitmapImage x:Key="BulletPointIconFilled" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/SheetGeneral_c/c_ico_bullet.png" />

    <Style x:Key="EquipmentSlotStyle_c" TargetType="ListBoxItem">
        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <ContentControl x:Name="root" ToolTipService.Placement="Right" Focusable="False" ToolTipService.IsEnabled="{Binding Item,Converter={StaticResource NullToBoolFalseConverter}}">
                        <ContentControl.ToolTip>
                            <ls:LSTooltip IsHitTestVisible="False" Content="{Binding Path=DataContext.Item,ElementName=root}" />
                        </ContentControl.ToolTip>
                        <Grid HorizontalAlignment="Left" VerticalAlignment="Top" Width="{DynamicResource InvSlotSize}" Height="{DynamicResource InvSlotSize}">
                            <Control Style="{StaticResource EquipmentSlotTemplateStyle}" Focusable="False"/>

                            <!-- Highlight slot when hovered -->
                            <Image x:Name="SelectedImg" Source="{StaticResource InvSlot_Selector}" Visibility="Hidden" Stretch="Fill" IsHitTestVisible="False"/>

                            <!-- New item indication -->
                            <Control Style="{StaticResource NewInventoryCellItemStyle}"/>
							
							<Image x:Name="disabledCover" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/Equipment/nonActiveSlot_indicator.png" Visibility="{Binding IsEnabled , Converter={StaticResource BoolToHiddenConverter}}" RenderTransformOrigin="0.5, 0.5">
							</Image>
                            <Rectangle Fill="{StaticResource LS_DisabledSlotColor}" Visibility="{Binding IsEnabled , Converter={StaticResource BoolToHiddenConverter}}"/>
                        </Grid>
                    </ContentControl>


                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="SelectedImg" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Height" Value="{DynamicResource InvSlotSize}"/>
        <Setter Property="Width" Value="{DynamicResource InvSlotSize}"/>
        <Setter Property="Margin" Value="0 4 0 8"/>
        <Setter Property="Padding" Value="0"/>
    </Style>

    <ControlTemplate x:Key="CharacterSheetExpanderToggleButton" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Image x:Name="img" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/SheetGeneral_c/c_frame_listitem.png" Stretch="None"/>
            <ContentPresenter/>
            <Path Name="Arrow" Width="64" Data="M 0 12 L 12 0 L 24 12 Z" Fill="{DynamicResource LS_PrimaryColor}" HorizontalAlignment="Right" VerticalAlignment="Center"/>
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ls:LSListBoxItem}}, Path=IsSelected}" Value="True">
                <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/SheetGeneral_c/c_selector_listitem.png" TargetName="img"/>
            </DataTrigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="Arrow" Property="Data" Value="M 0 0 L 12 12 L 24 0 Z"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="Arrow" Property="Visibility" Value="Hidden"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ScrolllessListBox" TargetType="ls:LSListBox">
        <ItemsPresenter/>
    </ControlTemplate>

    <Style x:Key="ControllerEquipmentListBoxStyle" TargetType="ls:LSListBox" BasedOn="{StaticResource {x:Type ls:LSListBox}}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="KeyboardNavigation.DirectionalNavigation" Value="Continue"/>
    </Style>

    <Style x:Key="VerticalControllerEquipmentListBoxStyle" TargetType="ls:LSListBox" BasedOn="{StaticResource ControllerEquipmentListBoxStyle}">
        <Setter Property="ActionPrevEvent" Value="UIUp"/>
        <Setter Property="ActionNextEvent" Value="UIDown"/>
    </Style>

    <Style x:Key="HorizontalControllerEquipmentListBoxStyle" TargetType="ls:LSListBox" BasedOn="{StaticResource ControllerEquipmentListBoxStyle}">
        <Setter Property="ActionPrevEvent" Value="UILeft"/>
        <Setter Property="ActionNextEvent" Value="UIRight"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="VerticalControllerCharacterSheetListBoxStyle" TargetType="ls:LSListBox" BasedOn="{StaticResource {x:Type ls:LSListBox}}">
        <Setter Property="Template" Value="{StaticResource ScrolllessListBox}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="ActionPrevEvent" Value="UIUp"/>
        <Setter Property="ActionNextEvent" Value="UIDown"/>
        <Setter Property="KeyboardNavigation.DirectionalNavigation" Value="Continue"/>
        <Setter Property="AutoScrollSelectedIntoView" Value="True"/>
        <Setter Property="Visibility" Value="Visible"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Itemsource.Count}" Value="0">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CharacterSheetSectionHeaderStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="{DynamicResource LargeFontSize}" />
        <Setter Property="Foreground" Value="{DynamicResource LS_InactivePanelFontColor}" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Margin" Value="0,16,0,16" />
        <Setter Property="Focusable" Value="False" />
    </Style>

    <Style x:Key="AbilityValueStyle" TargetType="TextBlock" BasedOn="{StaticResource CharacterSheetBaseTextStyle}">
        <Setter Property="FontSize" Value="{DynamicResource BigFontSize}" />
        <Setter Property="Margin" Value="0,4,0,0"/>
        <Setter Property="TextAlignment" Value="Center" />
    </Style>

    <Style x:Key="AbilityNameStyle" TargetType="TextBlock" BasedOn="{StaticResource CharacterSheetBaseTextStyle}">
        <Setter Property="FontSize" Value="{DynamicResource LargeFontSize}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="8,4,0,0"/>
    </Style>

    <Style x:Key="SkillNameStyle" TargetType="TextBlock" BasedOn="{StaticResource CharacterSheetBaseTextStyle}">
        <Setter Property="Margin" Value="10,0,0,0"/>
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>
    <Style x:Key="SkillValueStyle" TargetType="TextBlock" BasedOn="{StaticResource CharacterSheetBaseTextStyle}">
        <Setter Property="Margin" Value="0,0,16,0"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <ControlTemplate x:Key="CharacterSheetDecorativeBoxFrame" TargetType="ContentControl">
        <ControlTemplate.Resources>
            <ImageSource x:Key="selectorSource">pack://application:,,,/GustavNoesisGUI;component/Assets/SheetGeneral_c/c_selector_listitem.png</ImageSource>
        </ControlTemplate.Resources>
        <Grid Width="772" MinHeight="72"  ToolTip="{StaticResource ManagedTooltip}" ToolTipService.IsEnabled="{Binding Path=ToolTip.Content , Converter={StaticResource NullToBoolFalseConverter}}">
            <ls:LSNineSliceImage x:Name="img" ImageSource="{DynamicResource selectorSource}" Slices="28,28,28,28" Focusable="False" Opacity="0.3"/>
            <ContentPresenter/>
            <ls:LSNineSliceImage x:Name="hl" ImageSource="{DynamicResource selectorSource}" Slices="28,28,28,28" Visibility="Hidden" Focusable="False"/>
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ls:LSListBoxItem}}, Path=IsSelected}" Value="True">
                <Setter Property="Visibility" Value="Visible" TargetName="hl"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="CharacterSheetItemsStyle" TargetType="ls:LSListBoxItem"  BasedOn="{StaticResource {x:Type ls:LSListBoxItem}}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Focusable" Value="True" />
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="Magenta" />
                <Setter Property="BorderBrush" Value="Transparent" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CharacterSheetProgressionsItemsStyle" TargetType="ListBoxItem"  BasedOn="{StaticResource {x:Type ListBoxItem}}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Focusable" Value="True" />
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="Transparent" />
            </Trigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Progressions.Count}" Value="1"/>
                    <Condition Binding="{Binding Progressions[0].Features.Boosts.Count}" Value="0"/>
                    <Condition Binding="{Binding Progressions[0].Features.Abilities.Count}" Value="0"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Visibility" Value="Collapsed"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>            
        </Style.Triggers>
    </Style>
    
    <DataTemplate x:Key="CharacterSheetAbilitiesTemplate">
        <ls:LSListBox Style="{StaticResource VerticalControllerCharacterSheetListBoxStyle}" ItemContainerStyle="{StaticResource CharacterSheetItemsStyle}" Margin="0,0,0,32">
            <ls:LSListBoxItem>
                <ls:LSListBox Style="{StaticResource VerticalControllerCharacterSheetListBoxStyle}" ItemContainerStyle="{StaticResource CharacterSheetItemsStyle}">
                    <ToggleButton x:Name="Expander" IsChecked="True" Template="{StaticResource CharacterSheetExpanderToggleButton}" IsEnabled="{Binding Path=Skills.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}">
                        <ContentControl ToolTip="{StaticResource ManagedTooltip}">
                            <StackPanel Orientation="Horizontal">
                                <Image DockPanel.Dock="Left" Stretch="None" Width="50" Margin="20,0,0,0">
                                    <Image.Style>
                                        <Style TargetType="Image">
                                            <Setter Property="Source" Value="{x:Null}"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsPrimary}" Value="True">
                                                    <Setter Property="Source" Value="{StaticResource PrimaryAbilityIcon}"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>
                                <TextBlock Text="{Binding Value}" Style="{StaticResource AbilityValueStyle}" Width="86" VerticalAlignment="Center"/>
                                <TextBlock Text="{Binding Name}" Style="{StaticResource AbilityNameStyle}" VerticalAlignment="Center"/>
                            </StackPanel>
                        </ContentControl>
                    </ToggleButton>
                </ls:LSListBox>
            </ls:LSListBoxItem>

            <ls:LSListBoxItem Visibility="{Binding IsChecked, Converter={StaticResource BoolToCollapsedConverter}, ElementName=Expander}">
                <ls:LSListBox ItemsSource="{Binding Skills}" Style="{StaticResource VerticalControllerCharacterSheetListBoxStyle}" ItemContainerStyle="{StaticResource CharacterSheetItemsStyle}">
                    <ls:LSListBox.ItemTemplate>
                        <DataTemplate>
                            <ContentControl Template="{StaticResource CharacterSheetDecorativeBoxFrame}" Focusable="False">
                                <DockPanel>
                                    <Image DockPanel.Dock="Left" Width="44" Margin="32,0,0,0" Stretch="None">
                                        <Image.Style>
                                            <Style TargetType="Image">
                                                <Setter Property="Source" Value="{StaticResource BulletPointIconEmpty}"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding ElementName=ToFill, Path=Text}" Value="FILL">
                                                        <Setter Property="Source" Value="{StaticResource BulletPointIconFilled}"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Image.Style>
                                    </Image>
                                    <TextBlock DockPanel.Dock="Right" Text="{Binding Value, StringFormat={}{0:+#;-#;-}}" Style="{StaticResource SkillValueStyle}" Margin="0,0,32,0"/>
                                    <TextBlock Text="{Binding Name}" Style="{StaticResource SkillNameStyle}"/>
                                    <TextBlock Name="ToFill" Visibility="Hidden" Text="{Binding Value, StringFormat={}{0:FILL;NOFILL;NOFILL}}"/>
                                </DockPanel>
                            </ContentControl>
                        </DataTemplate>
                    </ls:LSListBox.ItemTemplate>
                </ls:LSListBox>
            </ls:LSListBoxItem>

        </ls:LSListBox>
    </DataTemplate>

    <Style x:Key="ResistancesVariantIconsStyle" TargetType="ItemsControl">
        <Setter Property="MaxWidth" Value="180"/>
        <Setter Property="ItemsControl.ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsControl.ItemTemplate">
            <Setter.Value>
                <DataTemplate DataType="ls:VMResistance">
                    <Image Stretch="Uniform" Width="50" Style="{StaticResource ResistanceImage}" Margin="0,4,0,4"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="ResistancesTemplate">
        <ls:LSListBox x:Name="ResistancePanel" Style="{StaticResource VerticalControllerCharacterSheetListBoxStyle}" HorizontalAlignment="Center">
            <b:Interaction.Behaviors>
                <!-- Don't change this order! -->
                <ls:CollectionFilterBehavior x:Name="PredicateFullResistance" ItemsSource="{Binding Stats.Resistances}" Predicate="{Binding DataContext.Data.PredicateFullResistance, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}"/>
                <ls:CollectionFilterBehavior x:Name="PredicateNonMagicVulnerable" ItemsSource="{Binding Stats.Resistances}" Predicate="{Binding DataContext.Data.PredicateNonMagicVulnerable, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}"/>
                <ls:CollectionFilterBehavior x:Name="PredicateNonMagicResistant" ItemsSource="{Binding Stats.Resistances}" Predicate="{Binding DataContext.Data.PredicateNonMagicResistant, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}"/>
                <ls:CollectionFilterBehavior x:Name="PredicateNonMagicImmune" ItemsSource="{Binding Stats.Resistances}" Predicate="{Binding DataContext.Data.PredicateNonMagicImmune, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}"/>
                <ls:CollectionFilterBehavior x:Name="PredicateMagicVulnerable" ItemsSource="{Binding Stats.Resistances}" Predicate="{Binding DataContext.Data.PredicateMagicVulnerable, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}"/>
                <ls:CollectionFilterBehavior x:Name="PredicateMagicResistant" ItemsSource="{Binding Stats.Resistances}" Predicate="{Binding DataContext.Data.PredicateMagicResistant, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}"/>
                <ls:CollectionFilterBehavior x:Name="PredicateMagicImmune" ItemsSource="{Binding Stats.Resistances}" Predicate="{Binding DataContext.Data.PredicateMagicImmune, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}"/>
            </b:Interaction.Behaviors>
            <ls:LSListBox.Resources>
                <ImageSource x:Key="selectorSource">pack://application:,,,/GustavNoesisGUI;component/Assets/SheetGeneral_c/c_selector_listitem_resistance.png</ImageSource>
            </ls:LSListBox.Resources>

            <ls:LSListBoxItem Visibility="{Binding Path=(b:Interaction.Behaviors)[0].FilteredItems.Count, ElementName=ResistancePanel, Converter={StaticResource CountToVisibilityConverter}}" Margin="0,0,0,16">
                <ls:LSListBox ItemsSource="{Binding Path=(b:Interaction.Behaviors)[0].FilteredItems, ElementName=ResistancePanel}" Style="{StaticResource VerticalControllerCharacterSheetListBoxStyle}">
                    <ls:LSListBox.ItemTemplate>
                        <DataTemplate DataType="ls:VMResistance">
                            <ContentControl Template="{StaticResource CharacterSheetDecorativeBoxFrame}" HorizontalContentAlignment="Stretch">
                                <DockPanel VerticalAlignment="Center">
                                    <Image DockPanel.Dock="Left" Stretch="Uniform" Width="50" Margin="20,0,10,0" Style="{StaticResource ResistanceImage}"/>
                                    <TextBlock DockPanel.Dock="Right" Style="{StaticResource ResistanceValueStyle}" Margin="0,0,32,0"/>
                                    <TextBlock Style="{StaticResource ResistanceNameStyle}"/>
                                </DockPanel>
                            </ContentControl>
                        </DataTemplate>
                    </ls:LSListBox.ItemTemplate>
                </ls:LSListBox>
            </ls:LSListBoxItem>

            <!-- These 1 item listboxes are required to make navigation working -->
            <!-- Please kill it with fire once we have the new controller focusing -->

            <!-- Non-Magical Vulnerable -->
            <ls:LSListBoxItem x:Name="NonMagicVulnerable" Visibility="{Binding Path=(b:Interaction.Behaviors)[1].FilteredItems.Count, ElementName=ResistancePanel, Converter={StaticResource CountToVisibilityConverter}}">
                <ls:LSListBox Style="{StaticResource VerticalControllerCharacterSheetListBoxStyle}">
                    <ls:LSListBoxItem>
                        <ls:LSListBoxItem.ToolTip>
                            <ls:LSTooltip ContentTemplate="{StaticResource ResistanceTooltipNonmagicalTemplate}" Content="Vulnerable"/>
                        </ls:LSListBoxItem.ToolTip>
                        <ContentControl Template="{StaticResource CharacterSheetDecorativeBoxFrame}" HorizontalAlignment="Stretch">
                            <DockPanel VerticalAlignment="Center" >
                                <ItemsControl ItemsSource="{Binding Path=(b:Interaction.Behaviors)[1].FilteredItems, ElementName=ResistancePanel}"     DockPanel.Dock="Left" Margin="16,0,10,0" Style="{StaticResource ResistancesVariantIconsStyle}" VerticalAlignment="Center"/>
                                <TextBlock Text="{Binding Source='hb710bce5g9017g4c1bg9330g20a891ce14f6',Converter={StaticResource TranslatedStringConverter}}"                DockPanel.Dock="Right" Margin="0,0,30,0" VerticalAlignment="Center"/>
                                <TextBlock Text="{Binding Source='h06dca809gbc26g46b6gb7d4g0a0bb38eb247',Converter={StaticResource TranslatedStringConverter}}"                Style="{StaticResource ResistanceNameStyle}" VerticalAlignment="Center"/>
                            </DockPanel>
                        </ContentControl>
                    </ls:LSListBoxItem>
                </ls:LSListBox>
            </ls:LSListBoxItem>

            <!-- Non-Magical Resistant -->
            <ls:LSListBoxItem x:Name="NonMagicResistant" HorizontalAlignment="Stretch" Visibility="{Binding Path=(b:Interaction.Behaviors)[2].FilteredItems.Count, ElementName=ResistancePanel, Converter={StaticResource CountToVisibilityConverter}}">
                <ls:LSListBox Style="{StaticResource VerticalControllerCharacterSheetListBoxStyle}">
                    <ls:LSListBoxItem>
                        <ls:LSListBoxItem.ToolTip>
                            <ls:LSTooltip ContentTemplate="{StaticResource ResistanceTooltipNonmagicalTemplate}" Content="Resistant"/>
                        </ls:LSListBoxItem.ToolTip>
                        <ContentControl Template="{StaticResource CharacterSheetDecorativeBoxFrame}">
                            <DockPanel VerticalAlignment="Center" >
                                <ItemsControl ItemsSource="{Binding Path=(b:Interaction.Behaviors)[2].FilteredItems, ElementName=ResistancePanel}" DockPanel.Dock="Left" Margin="16,0,10,0" Style="{StaticResource ResistancesVariantIconsStyle}" VerticalAlignment="Center"/>
                                <TextBlock Text="{Binding Source='h27558299g1099g485eg95f0g4a319139f8f2',Converter={StaticResource TranslatedStringConverter}}"     DockPanel.Dock="Right" Margin="0,0,30,0" VerticalAlignment="Center"/>
                                <TextBlock Text="{Binding Source='h06dca809gbc26g46b6gb7d4g0a0bb38eb247',Converter={StaticResource TranslatedStringConverter}}"     Style="{StaticResource ResistanceNameStyle}" VerticalAlignment="Center"/>
                            </DockPanel>
                        </ContentControl>
                    </ls:LSListBoxItem>
                </ls:LSListBox>
            </ls:LSListBoxItem>

            <!-- Non-Magical Immune -->
            <ls:LSListBoxItem x:Name="NonMagicImmune" Visibility="{Binding Path=(b:Interaction.Behaviors)[3].FilteredItems.Count, ElementName=ResistancePanel, Converter={StaticResource CountToVisibilityConverter}}">
                <ls:LSListBox Style="{StaticResource VerticalControllerCharacterSheetListBoxStyle}">
                    <ls:LSListBoxItem>
                        <ls:LSListBoxItem.ToolTip>
                            <ls:LSTooltip ContentTemplate="{StaticResource ResistanceTooltipNonmagicalTemplate}" Content="Immune"/>
                        </ls:LSListBoxItem.ToolTip>
                        <ContentControl Template="{StaticResource CharacterSheetDecorativeBoxFrame}">
                            <DockPanel VerticalAlignment="Center" >
                                <ItemsControl ItemsSource="{Binding Path=(b:Interaction.Behaviors)[3].FilteredItems, ElementName=ResistancePanel}" DockPanel.Dock="Left" Margin="16,0,10,0" Style="{StaticResource ResistancesVariantIconsStyle}" VerticalAlignment="Center"/>
                                <TextBlock Text="{Binding Source='h1198786dg4063g4010g83d9g8cbd36553077',Converter={StaticResource TranslatedStringConverter}}"     DockPanel.Dock="Right" Margin="0,0,30,0" VerticalAlignment="Center"/>
                                <TextBlock Text="{Binding Source='h06dca809gbc26g46b6gb7d4g0a0bb38eb247',Converter={StaticResource TranslatedStringConverter}}"     Style="{StaticResource ResistanceNameStyle}" VerticalAlignment="Center"/>
                            </DockPanel>
                        </ContentControl>
                    </ls:LSListBoxItem>
                </ls:LSListBox>
            </ls:LSListBoxItem>

            <!-- Magical Vulnerable -->
            <ls:LSListBoxItem x:Name="MagicalVulnerable" Visibility="{Binding Path=(b:Interaction.Behaviors)[4].FilteredItems.Count, ElementName=ResistancePanel, Converter={StaticResource CountToVisibilityConverter}}">
                <ls:LSListBox Style="{StaticResource VerticalControllerCharacterSheetListBoxStyle}">
                    <ls:LSListBoxItem>
                        <ls:LSListBoxItem.ToolTip>
                            <ls:LSTooltip ContentTemplate="{StaticResource ResistanceTooltipMagicalTemplate}" Content="Vulnerable"/>
                        </ls:LSListBoxItem.ToolTip>
                        <ContentControl Template="{StaticResource CharacterSheetDecorativeBoxFrame}">
                            <DockPanel VerticalAlignment="Center" >
                                <ItemsControl ItemsSource="{Binding Path=(b:Interaction.Behaviors)[4].FilteredItems, ElementName=ResistancePanel}" DockPanel.Dock="Left" Margin="16,0,10,0" Style="{StaticResource ResistancesVariantIconsStyle}" VerticalAlignment="Center"/>
                                <TextBlock Text="{Binding Source='hb710bce5g9017g4c1bg9330g20a891ce14f6',Converter={StaticResource TranslatedStringConverter}}"     DockPanel.Dock="Right" Margin="0,0,30,0" VerticalAlignment="Center"/>
                                <TextBlock Text="{Binding Source='h9da3be37gadf4g4777ga7e6g6ef0c1f907b0',Converter={StaticResource TranslatedStringConverter}}"     Style="{StaticResource ResistanceNameStyle}" VerticalAlignment="Center"/>
                            </DockPanel>
                        </ContentControl>
                    </ls:LSListBoxItem>
                </ls:LSListBox>
            </ls:LSListBoxItem>

            <!-- Magical Resistant -->
            <ls:LSListBoxItem x:Name="MagicalResistant" Visibility="{Binding Path=(b:Interaction.Behaviors)[5].FilteredItems.Count, ElementName=ResistancePanel, Converter={StaticResource CountToVisibilityConverter}}">
                <ls:LSListBox Style="{StaticResource VerticalControllerCharacterSheetListBoxStyle}">
                    <ls:LSListBoxItem>
                        <ls:LSListBoxItem.ToolTip>
                            <ls:LSTooltip ContentTemplate="{StaticResource ResistanceTooltipMagicalTemplate}" Content="Resistant"/>
                        </ls:LSListBoxItem.ToolTip>
                        <ContentControl Template="{StaticResource CharacterSheetDecorativeBoxFrame}">
                            <DockPanel VerticalAlignment="Center" >
                                <ItemsControl ItemsSource="{Binding Path=(b:Interaction.Behaviors)[5].FilteredItems, ElementName=ResistancePanel}" DockPanel.Dock="Left" Margin="16,0,10,0" Style="{StaticResource ResistancesVariantIconsStyle}" VerticalAlignment="Center"/>
                                <TextBlock Text="{Binding Source='h27558299g1099g485eg95f0g4a319139f8f2',Converter={StaticResource TranslatedStringConverter}}"     DockPanel.Dock="Right" Margin="0,0,30,0" VerticalAlignment="Center"/>
                                <TextBlock Text="{Binding Source='h9da3be37gadf4g4777ga7e6g6ef0c1f907b0',Converter={StaticResource TranslatedStringConverter}}"     Style="{StaticResource ResistanceNameStyle}" VerticalAlignment="Center"/>
                            </DockPanel>
                        </ContentControl>
                    </ls:LSListBoxItem>
                </ls:LSListBox>
            </ls:LSListBoxItem>

            <!-- Magical Immune -->
            <ls:LSListBoxItem x:Name="MagicalImmune" Visibility="{Binding Path=(b:Interaction.Behaviors)[6].FilteredItems.Count, ElementName=ResistancePanel, Converter={StaticResource CountToVisibilityConverter}}">
                <ls:LSListBox Style="{StaticResource VerticalControllerCharacterSheetListBoxStyle}">
                    <ls:LSListBoxItem>
                        <ls:LSListBoxItem.ToolTip>
                            <ls:LSTooltip ContentTemplate="{StaticResource ResistanceTooltipMagicalTemplate}" Content="Immune"/>
                        </ls:LSListBoxItem.ToolTip>
                        <ContentControl Template="{StaticResource CharacterSheetDecorativeBoxFrame}">
                            <DockPanel VerticalAlignment="Center" >
                                <ItemsControl ItemsSource="{Binding Path=(b:Interaction.Behaviors)[6].FilteredItems, ElementName=ResistancePanel}" DockPanel.Dock="Left" Margin="16,0,10,0" Style="{StaticResource ResistancesVariantIconsStyle}" VerticalAlignment="Center"/>
                                <TextBlock Text="{Binding Source='h1198786dg4063g4010g83d9g8cbd36553077',Converter={StaticResource TranslatedStringConverter}}"     DockPanel.Dock="Right" Margin="0,0,30,0" VerticalAlignment="Center"/>
                                <TextBlock Text="{Binding Source='h9da3be37gadf4g4777ga7e6g6ef0c1f907b0',Converter={StaticResource TranslatedStringConverter}}"     Style="{StaticResource ResistanceNameStyle}" VerticalAlignment="Center"/>
                            </DockPanel>
                        </ContentControl>
                    </ls:LSListBoxItem>
                </ls:LSListBox>
            </ls:LSListBoxItem>
        </ls:LSListBox>
    </DataTemplate>

    <DataTemplate x:Key="CharacterSheetRaceTemplate">
        <ls:LSListBox Style="{StaticResource VerticalControllerCharacterSheetListBoxStyle}" ItemContainerStyle="{StaticResource CharacterSheetItemsStyle}" ActionPrevEvent="UIUp" ActionNextEvent="UIDown">
            <ls:LSListBoxItem>
                <ls:LSListBox Style="{StaticResource VerticalControllerCharacterSheetListBoxStyle}" ItemContainerStyle="{StaticResource CharacterSheetItemsStyle}" ActionPrevEvent="UIUp" ActionNextEvent="UIDown">
                    <ToggleButton x:Name="Expander" IsChecked="True" Template="{StaticResource CharacterSheetExpanderToggleButton}">
                        <ContentControl ToolTip="{StaticResource ManagedTooltip}" Focusable="False">
                            <TextBlock Margin="40,8,0,0" Foreground="{DynamicResource LS_PrimaryColor}" FontSize="{DynamicResource LargeFontSize}">
                                <b:Interaction.Behaviors>
                                    <ls:CtxTransStringRunGeneratorBehavior Source="{Binding NameCTS}" ParamRunStyle="{StaticResource TooltipUnitParamRun}"/>
                                </b:Interaction.Behaviors>
                            </TextBlock>
                        </ContentControl>
                    </ToggleButton>
                </ls:LSListBox>
            </ls:LSListBoxItem>

            <ls:LSListBoxItem x:Name="singleProgressionBoosts" Visibility="Collapsed">
                <ls:LSListBox ItemsSource="{Binding Features.Boosts}" Style="{StaticResource VerticalControllerCharacterSheetListBoxStyle}" ItemContainerStyle="{StaticResource CharacterSheetItemsStyle}">
                    <ls:LSListBox.ItemTemplate>
                        <DataTemplate>
                            <ContentControl Template="{StaticResource CharacterSheetDecorativeBoxFrame}">
                                <DockPanel>
                                    <Image Source="{StaticResource BulletPointIconFilled}" Stretch="None" Width="48" Margin="16,0,0,0"/>
                                    <TextBlock Foreground="{DynamicResource LS_PrimaryColor}" TextWrapping="Wrap" ToolTip="{StaticResource ManagedTooltip}" ToolTipService.Placement="Left" Margin="0,10,0,0">
                                        <b:Interaction.Behaviors>
                                            <ls:CtxTransStringRunGeneratorBehavior Source="{Binding NameCTS}" ParamRunStyle="{StaticResource TooltipUnitParamRun}"/>
                                        </b:Interaction.Behaviors>
                                    </TextBlock>
                                </DockPanel>
                            </ContentControl>
                        </DataTemplate>
                    </ls:LSListBox.ItemTemplate>
                </ls:LSListBox>
            </ls:LSListBoxItem>

            <ls:LSListBoxItem x:Name="singleProgressionAbilities" Visibility="Collapsed">
                <ls:LSListBox ItemsSource="{Binding Features.Abilities}" Style="{StaticResource VerticalControllerCharacterSheetListBoxStyle}" ItemContainerStyle="{StaticResource CharacterSheetItemsStyle}">
                    <ls:LSListBox.ItemTemplate>
                        <DataTemplate>
                            <ContentControl Template="{StaticResource CharacterSheetDecorativeBoxFrame}">
                                <DockPanel>
                                    <Image Source="{StaticResource BulletPointIconFilled}" Stretch="None" Width="48" Margin="16,0,0,0"/>
                                    <Control Template="{StaticResource AbilityText}" Margin="0,10,0,0"/>
                                </DockPanel>
                            </ContentControl>
                        </DataTemplate>
                    </ls:LSListBox.ItemTemplate>
                </ls:LSListBox>
            </ls:LSListBoxItem>

        </ls:LSListBox>

        <DataTemplate.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsChecked, ElementName=Expander}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="singleProgressionBoosts" Property="Visibility" Value="Visible"/>
                <Setter TargetName="singleProgressionAbilities" Property="Visibility" Value="Visible"/>
            </MultiDataTrigger>
        </DataTemplate.Triggers>

    </DataTemplate>

    <DataTemplate x:Key="CharacterSheetClassTemplate">
        <DataTemplate.Resources>
            <System:Double x:Key="MaxTextWidth">680</System:Double>
        </DataTemplate.Resources>
        <ls:LSListBox Style="{StaticResource VerticalControllerCharacterSheetListBoxStyle}" ItemContainerStyle="{StaticResource CharacterSheetItemsStyle}" ActionPrevEvent="UIUp" ActionNextEvent="UIDown">
            <ls:LSListBoxItem>
                <ls:LSListBox Style="{StaticResource VerticalControllerCharacterSheetListBoxStyle}"  ItemContainerStyle="{StaticResource CharacterSheetItemsStyle}" ActionPrevEvent="UIUp" ActionNextEvent="UIDown">
                    <ToggleButton x:Name="Expander" IsChecked="True" Template="{StaticResource CharacterSheetExpanderToggleButton}">
                        <TextBlock ToolTip="{StaticResource ManagedTooltip}" Text="{Binding Name}" Margin="40,6,0,0" Foreground="{DynamicResource LS_PrimaryColor}" FontSize="{DynamicResource LargeFontSize}" />
                    </ToggleButton>
                </ls:LSListBox>
            </ls:LSListBoxItem>

            <ls:LSListBoxItem x:Name="multipleProgressions" Visibility="Collapsed">
                <ls:LSListBox ItemsSource="{Binding Progressions}" Style="{StaticResource VerticalControllerCharacterSheetListBoxStyle}" ItemContainerStyle="{StaticResource CharacterSheetItemsStyle}">
                    <ls:LSListBox.ItemTemplate>
                        <DataTemplate>
                            <ContentControl Template="{StaticResource CharacterSheetDecorativeBoxFrame}">
                                <DockPanel>
                                    <Image Source="{StaticResource BulletPointIconFilled}" Stretch="None" Width="48" Margin="16,0,0,0"/>
                                    <TextBlock Foreground="{DynamicResource LS_PrimaryColor}" VerticalAlignment="Center" MaxWidth="{StaticResource MaxTextWidth}" TextWrapping="Wrap">
                                        <b:Interaction.Behaviors>
                                            <ls:CtxTransStringRunGeneratorBehavior Source="{Binding NameCTS}" ParamRunStyle="{StaticResource TooltipUnitParamRun}"/>
                                        </b:Interaction.Behaviors>
                                    </TextBlock>
                                </DockPanel>
                            </ContentControl>
                        </DataTemplate>
                    </ls:LSListBox.ItemTemplate>
                </ls:LSListBox>
            </ls:LSListBoxItem>

            <ls:LSListBoxItem x:Name="singleProgressionBoosts" Visibility="Collapsed">
                <ls:LSListBox ItemsSource="{Binding Progressions[0].Features.Boosts}" Style="{StaticResource VerticalControllerCharacterSheetListBoxStyle}" ItemContainerStyle="{StaticResource CharacterSheetItemsStyle}">
                    <ls:LSListBox.ItemTemplate>
                        <DataTemplate>
                            <ContentControl Template="{StaticResource CharacterSheetDecorativeBoxFrame}">
                                <DockPanel>
                                    <Image Source="{StaticResource BulletPointIconFilled}" Stretch="None" Width="48" Margin="16,0,0,0"/>
                                    <TextBlock Foreground="{DynamicResource LS_PrimaryColor}" MaxWidth="{StaticResource MaxTextWidth}" TextWrapping="Wrap" ToolTip="{StaticResource ManagedTooltip}" ToolTipService.Placement="Left" Margin="0,10,0,0" 
                                               LineHeight="{StaticResource DefaultFontSizeLineHeight}" LineStackingStrategy="BlockLineHeight" VerticalAlignment="Center">
                                        <b:Interaction.Behaviors>
                                            <ls:CtxTransStringRunGeneratorBehavior Source="{Binding NameCTS}" ParamRunStyle="{StaticResource TooltipUnitParamRun}"/>
                                        </b:Interaction.Behaviors>
                                    </TextBlock>
                                </DockPanel>
                            </ContentControl>
                        </DataTemplate>
                    </ls:LSListBox.ItemTemplate>
                </ls:LSListBox>
            </ls:LSListBoxItem>

            <ls:LSListBoxItem x:Name="singleProgressionAbilities" Visibility="Collapsed">
                <ls:LSListBox ItemsSource="{Binding Progressions[0].Features.Abilities}"
                                Style="{StaticResource VerticalControllerCharacterSheetListBoxStyle}" 
                                ItemContainerStyle="{StaticResource CharacterSheetItemsStyle}">
                    <ls:LSListBox.ItemTemplate>
                        <DataTemplate>
                            <ContentControl Template="{StaticResource CharacterSheetDecorativeBoxFrame}">
                                <DockPanel>
                                    <Image Source="{StaticResource BulletPointIconFilled}" Stretch="None" Width="48" Margin="16,0,0,0"/>
                                    <Control Template="{StaticResource AbilityText}" Margin="0,10,0,0" MaxWidth="{StaticResource MaxTextWidth}"/>
                                </DockPanel>
                            </ContentControl>
                        </DataTemplate>
                    </ls:LSListBox.ItemTemplate>
                </ls:LSListBox>
            </ls:LSListBoxItem>            
            
        </ls:LSListBox>

        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=Expander}" Value="False">
                <Setter TargetName="multipleProgressions" Property="Visibility" Value="Visible"/>
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsChecked, ElementName=Expander}" Value="False"/>
                    <Condition Binding="{Binding Progressions.Count}" Value="1"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="multipleProgressions" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="singleProgressionBoosts" Property="Visibility" Value="Visible"/>
                <Setter TargetName="singleProgressionAbilities" Property="Visibility" Value="Visible"/>
            </MultiDataTrigger>
        </DataTemplate.Triggers>
        
    </DataTemplate>

    <DataTemplate x:Key="CharacterSheetTagTemplate">
        <ls:LSListBox Style="{StaticResource VerticalControllerCharacterSheetListBoxStyle}" ItemContainerStyle="{StaticResource CharacterSheetItemsStyle}" ActionPrevEvent="UIUp" ActionNextEvent="UIDown">
            <ls:LSListBoxItem>
                <Grid>
                    <Image x:Name="img" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/SheetGeneral_c/c_frame_listitem.png" Stretch="None"/>
                    <TextBlock Text="{Binding Name}" Margin="90,10,0,0" Foreground="{DynamicResource LS_PrimaryColor}" FontSize="{DynamicResource LargeFontSize}"/>
                </Grid>
            </ls:LSListBoxItem>
        </ls:LSListBox>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ls:LSListBoxItem}}, Path=IsSelected}" Value="True">
                <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/SheetGeneral_c/c_selector_listitem.png" TargetName="img"/>
            </DataTrigger>
        </DataTemplate.Triggers>        
    </DataTemplate>

    <ControlTemplate x:Key="NameAndDescriptionTemplate">
        <StackPanel>
            <TextBlock x:Name="CharacterName" HorizontalAlignment="Center" Text="{Binding Name}"  Foreground="{DynamicResource LS_PrimaryColor}"  FontWeight="Bold"  FontSize="{DynamicResource TitleFontSize}"/>

            <StackPanel HorizontalAlignment="Center" Orientation="Horizontal" Margin="0 -16 0 0">
                <TextBlock Foreground="{DynamicResource LS_ActivePanelFontColor}">
                    <Run Text="{Binding Stats.Level.Name}"/>
                    <Run Text="{Binding Stats.Level.Value}"/>
                </TextBlock>
                <Control Margin="8,0,0,0" Template="{DynamicResource CharacterClassList}" DataContext="{Binding}" FontWeight="Normal"/>
            </StackPanel>
        </StackPanel>

        <ControlTemplate.Triggers>
            <DataTrigger Value="False">
                <DataTrigger.Binding>
                    <MultiBinding Converter="{StaticResource EqualConverter}">
                        <Binding RelativeSource="{RelativeSource AncestorType={x:Type ls:UIWidget}}" Path="DataContext.CurrentPlayer.UserId"/>
                        <Binding Path="OwnerUserID"/>
                    </MultiBinding>
                </DataTrigger.Binding>
                <Setter TargetName="CharacterName" Property="Foreground" Value="{StaticResource LS_guestTxtColor}"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="sheetElementHolder" TargetType="ls:LSListBoxItem">
        <Grid>
            <Image x:Name="Img" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/SheetGeneral_c/c_selector_listitem.png" Stretch="None" Opacity="0.3"/>
            <ContentPresenter Margin="0,8,0,0"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Opacity" Value="1" TargetName="Img"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <DataTemplate x:Key="PassiveItemTemplate">
        <ContentControl Template="{StaticResource CharacterSheetDecorativeBoxFrame}">
            <StackPanel Orientation="Horizontal">
                <Grid>
                    <Ellipse Fill="{Binding Icon}" Width="88" Height="88" Margin="8,0,8,0">
                        <Ellipse.Style>
                            <Style TargetType="Ellipse">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Icon}" Value="{x:Null}">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsToggled}" Value="False">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Ellipse.Style>
                    </Ellipse>
                    <Image Source="{StaticResource BulletPointIconFilled}" Stretch="None" Width="48" Margin="16,0,0,0">
                        <Image.Style>
                            <Style TargetType="Image">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsToggled}" Value="True">
                                        <Setter Property="Visibility" Value="Hidden"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                </Grid>
                <TextBlock Text="{Binding Name}" Foreground="{DynamicResource LS_PrimaryColor}" VerticalAlignment="Center"/>
            </StackPanel>

        </ContentControl>
    </DataTemplate>

    <!-- Spellbook -->
    <Style x:Key="SpellBookSlot" TargetType="ls:LSButton">
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ls:LSButton">
                    <Grid>
                        <Rectangle Fill="{Binding Icon}" Width="108" Height="108"/>
                        <TextBlock Text="{Binding SpellSlotLevel, Converter={StaticResource DecimalToRomanConverter}}" Margin="0,0,8,4" Foreground="{StaticResource LS_specialTxtColor}" VerticalAlignment="Bottom" HorizontalAlignment="Right" Height="35" FontSize="32" FontWeight="Bold" noesis:Text.Stroke="#FF000000" noesis:Text.StrokeThickness="5"/>
                        <Border x:Name="NotPreparedFrame" BorderBrush="#bcbcbc" Background="#aa000000" BorderThickness="0" Visibility="Hidden"/>
                        <Border x:Name="PreparedFrame" BorderBrush="#bcbcbc" BorderThickness="4" Visibility="Hidden"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding NeedsActivation}" Value="True"/>
                                <Condition Binding="{Binding Activated}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="Visibility" Value="Visible" TargetName="PreparedFrame"/>
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding NeedsActivation}" Value="True"/>
                                <Condition Binding="{Binding Activated}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="Visibility" Value="Visible" TargetName="NotPreparedFrame"/>
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="SpellTemplate">
        <ls:LSButton Style="{StaticResource SpellBookSlot}" Command="{Binding DataContext.ToggleCharacterAction, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="{Binding}" Focusable="False" ToolTip="{StaticResource ManagedTooltip}" ToolTipService.Placement="Right" ToolTipService.HorizontalOffset="88" ToolTipService.VerticalOffset="88" />
    </DataTemplate>
    
    <DataTemplate x:Key="SpellGroupTemplate" DataType="{x:Type ls:VMActionGroup}">
        <StackPanel Margin="20,6,0,4" >
            <Grid Width="724" HorizontalAlignment="Left">
                <Grid.Resources>
                    <ControlTemplate x:Key="slotsProgressBar" TargetType="ls:LSProgressBar">
                        <Border Name="PART_Track" ClipToBounds="True">
                            <StackPanel Orientation="Horizontal">
                                <Rectangle Name="PART_Indicator">
                                    <Rectangle.Fill>
                                        <ImageBrush x:Name="ImgValue" ImageSource="pack://application:,,,/GustavNoesisGUI;component/Assets/SpellBook_c/c_ico_spellSlot_available.png" TileMode="Tile" ViewportUnits="Absolute" Viewport="0,0,40,40" />
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Rectangle Name="PART_SubIndicator">
                                    <Rectangle.Fill>
                                        <ImageBrush x:Name="ImgCost" ImageSource="pack://application:,,,/GustavNoesisGUI;component/Assets/SpellBook_c/c_ico_spellSlot_available.png" TileMode="Tile" ViewportUnits="Absolute" Viewport="0,0,40,40" />
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Rectangle Name="PART_IndicatorRemaining">
                                    <Rectangle.Fill>
                                        <ImageBrush x:Name="ImgEmpty" ImageSource="pack://application:,,,/GustavNoesisGUI;component/Assets/SpellBook_c/c_ico_spellSlot_used.png" TileMode="Tile" ViewportUnits="Absolute" Viewport="0,0,40,40" />
                                    </Rectangle.Fill>
                                </Rectangle>
                            </StackPanel>
                        </Border>
                    </ControlTemplate>
                    <ControlTemplate x:Key="warlockSlotsProgressBar" TargetType="ls:LSProgressBar">
                        <Border Name="PART_Track" ClipToBounds="True">
                            <StackPanel Orientation="Horizontal">
                                <Rectangle Name="PART_Indicator">
                                    <Rectangle.Fill>
                                        <ImageBrush x:Name="ImgValue" ImageSource="pack://application:,,,/GustavNoesisGUI;component/Assets/SpellBook_c/c_ico_spellSlot_warlock.png" TileMode="Tile" ViewportUnits="Absolute" Viewport="0,0,40,40" />
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Rectangle Name="PART_SubIndicator">
                                    <Rectangle.Fill>
                                        <ImageBrush x:Name="ImgCost" ImageSource="pack://application:,,,/GustavNoesisGUI;component/Assets/SpellBook_c/c_ico_spellSlot_warlock.png" TileMode="Tile" ViewportUnits="Absolute" Viewport="0,0,40,40" />
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Rectangle Name="PART_IndicatorRemaining">
                                    <Rectangle.Fill>
                                        <ImageBrush x:Name="ImgEmpty" ImageSource="pack://application:,,,/GustavNoesisGUI;component/Assets/SpellBook_c/c_ico_spellSlot_used.png" TileMode="Tile" ViewportUnits="Absolute" Viewport="0,0,40,40" />
                                    </Rectangle.Fill>
                                </Rectangle>
                            </StackPanel>
                        </Border>
                    </ControlTemplate>
                </Grid.Resources>

                <TextBlock Text="{Binding Name}" Foreground="{DynamicResource LS_InfoColor1}" FontSize="{DynamicResource MediumFontSize}" HorizontalAlignment="Left"/>

                <ItemsControl ItemsSource="{Binding GroupResources}" HorizontalAlignment="Right" Focusable="False">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Horizontal"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <ls:LSProgressBar Minimum="0" Height="40">
                                <ls:LSProgressBar.Style>
                                    <Style TargetType="ls:LSProgressBar">
                                        <Setter Property="Maximum" Value="{Binding MaxValue}" />
                                        <Setter Property="Value" Value="{Binding Value}" />
                                        <Setter Property="SubValue" Value="0" />
                                        <Setter Property="Width" Value="{Binding MaxValue, Converter={StaticResource MultiplierConverter}, ConverterParameter=40}" />
                                        <Setter Property="Template" Value="{StaticResource slotsProgressBar}" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding TypeId}" Value="WarlockSpellSlot">
                                                <Setter Property="Template" Value="{StaticResource warlockSlotsProgressBar}" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ls:LSProgressBar.Style>
                            </ls:LSProgressBar>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </Grid>
            <Grid >
                <ls:LSListBox ItemsSource="{Binding Actions}" ItemTemplate="{StaticResource SpellTemplate}" >
                    <ls:LSListBox.Template>
                        <ControlTemplate TargetType="{x:Type ListBox}">
                            <ItemsPresenter />
                        </ControlTemplate>
                    </ls:LSListBox.Template>
                    <ls:LSListBox.ItemContainerStyle>
                        <Style TargetType="ls:LSListBoxItem" BasedOn="{StaticResource {x:Type ls:LSListBoxItem}}">
                            <Setter Property="BorderThickness" Value="0" />
                            <Setter Property="Padding" Value="0" />                            
                        </Style>
                    </ls:LSListBox.ItemContainerStyle>
                    <ls:LSListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <ls:LSGrid ContainerData="{Binding}" AutoIndex="True"
                                       Columns="6" Rows="1"
                                       ExtendedRows="False"
                                       CellWidth="{DynamicResource InvSlotSize}" CellHeight="{DynamicResource InvSlotSize}" 
                                       VerticalSpacing="{DynamicResource InvSpacing}" HorizontalSpacing="{DynamicResource InvSpacing}" 
                                       ActionUpEvent="UIUp" ActionDownEvent="UIDown" ActionRightEvent="UIRight" ActionLeftEvent="UILeft"/>
                        </ItemsPanelTemplate>
                    </ls:LSListBox.ItemsPanel>
                </ls:LSListBox>
            </Grid>
        </StackPanel>
    </DataTemplate>

    <ControlTemplate x:Key="SpellContentTemplate">
        <Grid VerticalAlignment="Top" HorizontalAlignment="Center" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"
              d:DataContext="{d:DesignInstance {x:Type ls:Character}, IsDesignTimeCreatable=True}">
            <ls:LSListBox x:Name="SpellGroupList" Margin="80,0,0,0" VirtualizingPanel.IsVirtualizing="True" VirtualizingPanel.ScrollUnit="Pixel" VirtualizingPanel.VirtualizationMode="Recycling"
                          ItemsSource="{Binding SpellsAndActions}"
                          AlternationCount="{Binding SpellsAndActions.Count}"
                          ItemTemplate="{StaticResource SpellGroupTemplate}"
                          ActionPrevEvent="UIUp" ActionNextEvent="UIDown">
                <ls:LSListBox.Template>
                    <ControlTemplate TargetType="{x:Type ls:LSListBox}">
                        <ls:LSScrollViewer Style="{DynamicResource BookmarkScrollViewer}" BookmarkSource="{Binding ElementName=SpellGroupList}" Padding="{TemplateBinding Padding}">
                            <ls:LSScrollViewer.Resources>
                                <GridLength x:Key="Top">50</GridLength>
                                <GridLength x:Key="Bottom">50</GridLength>
                            </ls:LSScrollViewer.Resources>
                            <ItemsPresenter />
                        </ls:LSScrollViewer>
                    </ControlTemplate>
                </ls:LSListBox.Template>
                <ls:LSListBox.ItemContainerStyle>
                    <Style TargetType="ls:LSListBoxItem" BasedOn="{StaticResource {x:Type ls:LSListBoxItem}}">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="Padding" Value="0"/>
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="BorderBrush" Value="Transparent"/>
                            </Trigger>
                            <DataTrigger Binding="{Binding Actions.Count}" Value="0">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ls:LSListBox.ItemContainerStyle>
                <ls:LSListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <ls:LSVirtualizingStackPanel Orientation="Vertical">
                            <b:Interaction.Triggers>
                                <b:EventTrigger EventName="Loaded">
                                    <b:ControlStoryboardAction Storyboard="{StaticResource AnimReset}"/>
                                </b:EventTrigger>
                                <b:TimerTrigger EventName="Loaded" MillisecondsPerTick="{Binding (ItemsControl.AlternationIndex), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContentControl}, AncestorLevel=4}, Converter={StaticResource MultiplierConverter}, ConverterParameter=100}" TotalTicks="1">
                                    <b:ControlStoryboardAction Storyboard="{StaticResource FadeContentIn}"/>
                                </b:TimerTrigger>
                            </b:Interaction.Triggers>
                        </ls:LSVirtualizingStackPanel>
                    </ItemsPanelTemplate>
                </ls:LSListBox.ItemsPanel>
                <b:Interaction.Triggers>
                    <b:EventTrigger EventName="LocalFocusChanged">
                        <ls:LSPlaySound Sound="UI_Shared_Hover" />
                    </b:EventTrigger>
                </b:Interaction.Triggers>
            </ls:LSListBox>
        </Grid>
    </ControlTemplate>

    <!-- Shared set of framing elements for various screens, e.g. Inventory, PartyCharacterSheet, CharacterOverview -->
    <ControlTemplate x:Key="StandardFraming" TargetType="ContentControl">
        <!-- Outer full screen grid adding black borders left and right if in non 16:9 ratio -->
        <ContentControl Template="{StaticResource StdFrameContentTemplate}" Background="{DynamicResource LS_PanelBackground}">
            <Grid x:Name="ContentFrame">
                <Image Source="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/mainpane_vignette.png" Stretch="Fill"/>
                <ContentPresenter/>
                <Control Template="{DynamicResource HeaderInspirationPointsGold}" VerticalAlignment="Top" HorizontalAlignment="Right" DataContext="{Binding CurrentPlayer}" Margin="0,24,120,0"/>
            </Grid>
        </ContentControl>

    </ControlTemplate>

    <Style x:Key="SelectedEquipmentSlotTextBlockStyle_c" TargetType="TextBlock" BasedOn="{StaticResource SelectedEquipmentSlotTextBlockStyle}">
        <Setter Property="FontSize" Value="{DynamicResource MediumFontSize}"/>
        <Setter Property="Foreground" Value="{DynamicResource LS_PrimaryColor}"/>
    </Style>

    <Style x:Key="EquipmentStatFont" TargetType="TextBlock">
        <Setter Property="FontSize" Value="{DynamicResource MediumFontSize}"/>
        <Setter Property="Foreground" Value="{DynamicResource LS_PrimaryColor}"/>
    </Style>

    <Style x:Key="PartyMemberStyle_c" TargetType="ListBoxItem" BasedOn="{StaticResource PartyMemberStyle}">
        <Setter Property="Margin" Value="5,0,10,0"/>
    </Style>


    <ControlTemplate x:Key="CarouselButtonTemplate" TargetType="ls:LSButton">
        <Grid>
            <Image x:Name="arrow" Source="{DynamicResource ButtonNormal}" Stretch="None"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="ls:MoveFocus.IsFocused" Value="True">
                <Setter Property="Source" Value="{DynamicResource ButtonHighlight}" TargetName="arrow"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Source" Value="{DynamicResource ButtonPressed}" TargetName="arrow"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Source" Value="{DynamicResource ButtonDisabled}" TargetName="arrow"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="CarouselTextStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="{DynamicResource MediumFontSize}"/>
        <Setter Property="FontWeight" Value="Regular"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="{DynamicResource LS_PrimaryColor}"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Tag, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Border}}}" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource LS_alertTxtColor}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ToggleMultiSelectButtonStyle" TargetType="ls:LSButton">
        <Setter Property="BoundEvent" Value="SpeakerSelect"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ls:LSButton">
                    <StackPanel x:Name="MultiSelectRoot" Orientation="Horizontal" Tag="{Binding Tag,RelativeSource={RelativeSource TemplatedParent}}">
                        <ContentPresenter ContentTemplate="{StaticResource ControllerButtonHint}" Content="{Binding CurrentPlayer.UIData.InputEvents, Converter={StaticResource FindInputEventConverter}, ConverterParameter='SpeakerSelect'}" Tag="{Binding Source=hd0c08193ga7f2g4a7eg8225g63748c7b3096,Converter={StaticResource TranslatedStringConverter}}"/>

                        <TextBlock x:Name="CountText" Text="{Binding Content.Count,RelativeSource={RelativeSource TemplatedParent},StringFormat={}({0})}" VerticalAlignment="Center" FontSize="{StaticResource BigFontSize}" Style="{StaticResource BtnHint.StrokedTextStyle}"/>
                        <b:Interaction.Triggers>
                            <b:EventTrigger EventName="Click" SourceObject="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                                <ls:ToggleListBoxItemSelected TargetObject="{Binding Tag,ElementName=MultiSelectRoot}"/>
                            </b:EventTrigger>
                            <b:PropertyChangedTrigger Binding="{Binding Tag,ElementName=MultiSelectRoot}">
                                <b:Interaction.Behaviors>
                                    <b:ConditionBehavior>
                                        <b:ConditionalExpression>
                                            <b:ComparisonCondition LeftOperand="{Binding Path=IsPressed, RelativeSource={RelativeSource TemplatedParent}}" Operator="Equal" RightOperand="True"/>
                                        </b:ConditionalExpression>
                                    </b:ConditionBehavior>
                                </b:Interaction.Behaviors>
                                <ls:ToggleListBoxItemSelected TargetObject="{Binding Tag,ElementName=MultiSelectRoot}"/>
                            </b:PropertyChangedTrigger>
                        </b:Interaction.Triggers>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Content" Value="0" >
                            <Setter TargetName="CountText" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>