<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
					xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
			        xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
                    xmlns:noesis="clr-namespace:NoesisGUIExtensions;assembly=Noesis.GUI.Extensions"
                    xmlns:ls="clr-namespace:ls;assembly=SharedGUI"
                    xmlns:System="clr-namespace:System;assembly=mscorlib"
					mc:Ignorable="d">

    <BitmapImage x:Key="LobbyReadyCheck" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/Lobby/lobby_tick.png"/>

    <BitmapImage x:Key="LobbyPortraitFrame" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/Lobby/lobby_portraitFrame_d.png"/>
    <BitmapImage x:Key="LobbyPortraitFrameSelected" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/Lobby/lobby_portraitFrame_h.png"/>
    <BitmapImage x:Key="LobbyClosedFrame" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/Lobby/lobby_slot_closed.png"/>
    <BitmapImage x:Key="LobbyOpenSlot" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/Lobby/lobbySlot_add_d.png"/>
    <BitmapImage x:Key="LobbyOpenSlotSelected" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/Lobby/lobbySlot_add_h.png"/>

    <Style x:Key="PanelBorderStyle" TargetType="Border">
        <Setter Property="Padding" Value="10,0"/>
        <Setter Property="BorderBrush" Value="{StaticResource LS_PanelBorder}"/>
        <Setter Property="BorderThickness" Value="4"/>
        <Setter Property="CornerRadius" Value="20"/>
        <Setter Property="Background" Value="{StaticResource LS_PanelBackdrop}"/>
    </Style>

    <ControlTemplate x:Key="PlayerImageTemplate">
        <ControlTemplate.Resources>
            <ImageSource x:Key="VolumeMuted">pack://application:,,,/GustavNoesisGUI;component/Assets/VoiceChat/ico_mic_disabled.png</ImageSource>
            <ImageSource x:Key="VolumeUnmuted">pack://application:,,,/GustavNoesisGUI;component/Assets/VoiceChat/ico_mic_d.png</ImageSource>
            <ImageSource x:Key="VolumeActive">pack://application:,,,/GustavNoesisGUI;component/Assets/VoiceChat/ico_mic_h.png</ImageSource>
            <ImageSource x:Key="VolumeBg">pack://application:,,,/GustavNoesisGUI;component/Assets/VoiceChat/mic_frameBG_d.png</ImageSource>
            <ImageSource x:Key="VolumeBgFocused">pack://application:,,,/GustavNoesisGUI;component/Assets/VoiceChat/mic_frameBG_h.png</ImageSource>
        </ControlTemplate.Resources>
        <StackPanel d:DataContext="{d:DesignInstance {x:Type ls:VMLobbyPlayerInfo}, IsDesignTimeCreatable=True}">
            <Grid>
                <Image x:Name="VolumeBackground" Stretch="None" VerticalAlignment="Center" HorizontalAlignment="Center" Source="{StaticResource VolumeBgFocused}"/>
                <Image x:Name="Volume" Stretch="None" VerticalAlignment="Center" HorizontalAlignment="Center" Source="{StaticResource VolumeUnmuted}"/>
            </Grid>
            <TextBlock Name="Index"  HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0 6 0 0" Foreground="{StaticResource LS_accent75TxtColor}"
                       Text="{Binding SlotIndex, Converter={StaticResource DecimalToRomanConverter}, ConverterParameter=true}"/>
            <ContentControl x:Name="CharBtn" Style="{DynamicResource FocusableContentControlStyle}" HorizontalAlignment="Center" Focusable="False" ls:MoveFocus.Focusable="False" ls:MoveFocus.IsFocused="True">
                <ls:LSNineSliceImage x:Name="IconContainer" HorizontalAlignment="Center"
                                     ImageSource="{StaticResource LobbyPortraitFrameSelected}" Slices="24,24,24,24" Width="200" Height="200">
                    <Rectangle x:Name="Icon" Fill="{Binding Player.CommunityIcon}" Height="152" Width="152"/>
                </ls:LSNineSliceImage>
            </ContentControl>
            <TextBlock x:Name="Name" HorizontalAlignment="Center" Margin="10 20 10 0" TextWrapping="Wrap" Text="{Binding Player.Name}"
                       FontSize="{StaticResource ScaledLargeFontSize}" Foreground="{StaticResource LS_tint100}"/>
            <TextBlock x:Name="Description" HorizontalAlignment="Center" Margin="0 20 0 0"
                       Text="{Binding Source='h336a8d4cga78dg439dg91d8g19932bdac7cb', Converter={StaticResource TranslatedStringConverter}}" 
                       Visibility="{Binding IsHost, Converter={StaticResource BoolToVisibleConverter}, ConverterParameter={StaticResource TrueValue}}"
                       FontSize="{StaticResource ScaledMediumFontSize}" Foreground="{StaticResource LS_baseTxtColor}"/>

        </StackPanel>
        <ControlTemplate.Triggers>
            <Trigger Property="ls:MoveFocus.IsFocused" Value="False">
                <Setter TargetName="Name" Property="Foreground" Value="{StaticResource LS_accent100TxtColor}"/>
                <Setter TargetName="IconContainer" Property="ImageSource" Value="{StaticResource LobbyPortraitFrame}"/>
                <Setter TargetName="CharBtn" Property="ls:MoveFocus.IsFocused" Value="False"/>
                <Setter TargetName="VolumeBackground" Property="Source" Value="{StaticResource VolumeBg}"/>
            </Trigger>
            <DataTrigger Binding="{Binding Player.VoiceChatTalking}" Value="True">
                <Setter TargetName="Volume" Property="Source" Value="{StaticResource VolumeActive}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Player.VoiceChatMuted}" Value="True">
                <Setter TargetName="Volume" Property="Source" Value="{StaticResource VolumeMuted}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Player}" Value="{x:Null}">
                <Setter TargetName="VolumeBackground" Property="Visibility" Value="Hidden"/>
                <Setter TargetName="Volume" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding State}" Value="Open">
                <Setter TargetName="Index" Property="Foreground" Value="{StaticResource LS_baseTxtColor}"/>
                <Setter TargetName="Name" Property="Foreground" Value="{StaticResource LS_baseTxtColor}"/>
                <Setter TargetName="Name" Property="Text" Value="{Binding Source='h6a84976cg0c34g40e9gbe49g97a2a05ab2e9', Converter ={StaticResource TranslatedStringConverter}}"/>
                <Setter TargetName="VolumeBackground" Property="Visibility" Value="Hidden"/>
                <Setter TargetName="Volume" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding State}" Value="Open"/>
                    <Condition Binding="{Binding (ls:MoveFocus.IsFocused), RelativeSource={RelativeSource Mode=Self}}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="Icon" Property="Fill">
                    <Setter.Value>
                        <ImageBrush Stretch="Fill" ImageSource="{StaticResource LobbyOpenSlotSelected}"/>
                    </Setter.Value>
                </Setter>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding State}" Value="Open"/>
                    <Condition Binding="{Binding (ls:MoveFocus.IsFocused), RelativeSource={RelativeSource Mode=Self}}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="Icon" Property="Fill">
                    <Setter.Value>
                        <ImageBrush Stretch="Fill" ImageSource="{StaticResource LobbyOpenSlot}"/>
                    </Setter.Value>
                </Setter>
            </MultiDataTrigger>
            <DataTrigger Binding="{Binding State}" Value="Closed">
                <Setter TargetName="Index" Property="Foreground" Value="{StaticResource LS_accent00TxtColor}"/>
                <Setter TargetName="Name" Property="Foreground" Value="{StaticResource LS_accent00TxtColor}"/>
                <Setter TargetName="Name" Property="Text" Value="{Binding Source='h45dd6ce3g3693g410dga878g190758499fbb', Converter ={StaticResource TranslatedStringConverter}}"/>
                <Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
                <Setter TargetName="IconContainer" Property="ImageSource" Value="{StaticResource LobbyClosedFrame}"/>
                <Setter TargetName="CharBtn" Property="ls:MoveFocus.IsFocused" Value="False"/>
                <Setter TargetName="VolumeBackground" Property="Visibility" Value="Hidden"/>
                <Setter TargetName="Volume" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="TitleText" TargetType="TextBlock">
        <Setter Property="FontSize" Value="{StaticResource ScaledTitleFontSize}"/>
        <Setter Property="Foreground" Value="{StaticResource LS_tint100}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="Margin" Value="10,60"/>
    </Style>

    <Style x:Key="DescriptionText" TargetType="TextBlock">
        <Setter Property="FontSize" Value="{StaticResource ScaledMiniFontSize}"/>
        <Setter Property="Foreground" Value="{StaticResource LS_baseTxtColor}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="TextAlignment" Value="Center"/>
    </Style>

</ResourceDictionary>