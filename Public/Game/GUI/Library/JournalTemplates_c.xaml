<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
			        xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
					xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:ls="clr-namespace:ls;assembly=SharedGUI"
                    xmlns:noesis="clr-namespace:NoesisGUIExtensions;assembly=Noesis.GUI.Extensions"
                    xmlns:System="clr-namespace:System;assembly=mscorlib"
					mc:Ignorable="d">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../Library/JournalTemplates.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    
    <BitmapImage x:Key="Journal.SelectionBackgroundImage" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/c_list_buttonBG_general.png"/>
    <BitmapImage x:Key="Journal.SelectionHighlightImage" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/c_list_buttonBG_h1.png"/>
    <BitmapImage x:Key="Journal.SelectionHighlightImage2" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/c_list_buttonBG_h2.png"/>
    
    <Thickness x:Key="Journal.SelectionBackgroundSlices">230,0,230,6</Thickness>
    <Thickness x:Key="Journal.SelectionHighlightSlices">44</Thickness>
    <Thickness x:Key="Journal.NavigationMargin">50,0,0,0</Thickness>
    <Thickness x:Key="Journal.BookmarkMargin">0,50,0,0</Thickness>
	<Thickness x:Key="Journal.CategoryTitleMargin">0,100,0,0</Thickness>
	<Thickness x:Key="Journal.ScrollViewerMargin">0,0,40,0</Thickness>
	<Thickness x:Key="Journal.ListItemMargin">0,0,0,0</Thickness>
	<Thickness x:Key="Journal.TextTopBottomMargin">0,12</Thickness>

    <!-- Keep these 2 in sync -->
    <Duration x:Key="Journal.AnimationFadeDuration">0:0:0.3</Duration>
    <KeyTime x:Key="Journal.AnimationFadeKeyTime">0:0:0.3</KeyTime>

    <Style x:Key="Journal.NavigationStyle" TargetType="Control">
        <Setter Property="Margin" Value="{StaticResource Journal.NavigationMargin}"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <StackPanel Orientation="Horizontal">
                        <ls:LSButton BoundEvent="UITabPrev" Tag=" " ContentTemplate="{StaticResource ControllerButtonHint}" Content="{Binding CurrentPlayer.UIData.InputEvents, ConverterParameter=UITabPrev, Converter={StaticResource FindInputEventConverter}}" 
                            ls:LSButton.EatInput="False" Width="{StaticResource ScaledControllerHintSize}" Height="{StaticResource ScaledControllerHintSize}" VerticalAlignment="Center">
                            <b:Interaction.Triggers>
                                <b:EventTrigger EventName="Click">
                                    <b:Interaction.Behaviors>
                                        <b:ConditionBehavior>
                                            <b:ConditionalExpression>
                                                <b:ComparisonCondition LeftOperand="{Binding Path=SelectedIndex, ElementName=Root}" Operator="GreaterThan" RightOperand="0"/>
                                            </b:ConditionalExpression>
                                        </b:ConditionBehavior>
                                    </b:Interaction.Behaviors>
                                    <b:ChangePropertyAction TargetName="Root" PropertyName="SelectedIndex"
                                            Value="{Binding SelectedIndex, ElementName=Root, Converter={StaticResource AddConverter}, ConverterParameter=-1}" />
                                </b:EventTrigger>
                            </b:Interaction.Triggers>
                        </ls:LSButton>

                        <ls:LSListBox x:Name="Root" HorizontalAlignment="Center" ItemContainerStyle="{StaticResource CarouselItemContainerStyle}" KeyboardNavigation.DirectionalNavigation="Cycle">
                            <b:Interaction.Triggers>

                                <b:PropertyChangedTrigger Binding="{Binding FocusedElement, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}">
                                    <b:Interaction.Behaviors>
                                        <b:ConditionBehavior>
                                            <b:ConditionalExpression>
                                                <b:ComparisonCondition LeftOperand="{Binding (ls:MoveFocus.IsKeyboardFocusWithin), ElementName=Root}" Operator="Equal" RightOperand="True"/>
                                            </b:ConditionalExpression>
                                        </b:ConditionBehavior>
                                    </b:Interaction.Behaviors>
                                    <b:ChangePropertyAction PropertyName="SelectedItem" Value="{Binding FocusedElement, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}"/>
                                </b:PropertyChangedTrigger>

                                <b:EventTrigger EventName="SelectionChanged">
                                    <b:InvokeCommandAction Command="{Binding DataContext.CustomEvent, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="{Binding Path=SelectedItem.Tag, ElementName=Root}"/>
                                </b:EventTrigger>
                            </b:Interaction.Triggers>

                            <ListBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Horizontal"/>
                                </ItemsPanelTemplate>
                            </ListBox.ItemsPanel>

                            <ls:LSListBoxItem Name="TabQuests" Tag="OpenJournalQuests" Content="h70f42b48g6d94g4fadga21egd28627f404d6"/>
                            <ls:LSListBoxItem Name="TabInspiration" Tag="OpenJournalInspiration" Content="h62619d26gd851g48a3g9c91ge21ad5928086"/>
                            <ls:LSListBoxItem Name="TabDialogues" Tag="OpenJournaldialogues" Content="hea248420gc700g4231g8a7fg7712b3e77464"/>
                            <ls:LSListBoxItem Name="TabTutorials" Tag="OpenJournalTutorials" Content="h20907681g950fg42f3g844fg251c11592d4d"/>

                        </ls:LSListBox>
                        <ls:LSButton BoundEvent="UITabNext" Tag=" " ContentTemplate="{StaticResource ControllerButtonHint}" Content="{Binding CurrentPlayer.UIData.InputEvents, ConverterParameter=UITabNext, Converter={StaticResource FindInputEventConverter}}" 
                            ls:LSButton.EatInput="False" Width="{StaticResource ScaledControllerHintSize}" Height="{StaticResource ScaledControllerHintSize}" VerticalAlignment="Center">
                            <b:Interaction.Triggers>
                                <b:EventTrigger EventName="Click">
                                    <b:ChangePropertyAction TargetName="Root" PropertyName="SelectedIndex"
                                            Value="{Binding SelectedIndex, ElementName=Root, Converter={StaticResource AddConverter}, ConverterParameter=1}" />
                                </b:EventTrigger>
                            </b:Interaction.Triggers>
                        </ls:LSButton>

                    </StackPanel>

                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=Name, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Value="JournalQuests_c">
                            <Setter TargetName="Root" Property="SelectedIndex" Value="0"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=Name, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Value="JournalInspiration_c">
                            <Setter TargetName="Root" Property="SelectedIndex" Value="1"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=Name, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Value="JournalDialogues_c">
                            <Setter TargetName="Root" Property="SelectedIndex" Value="2"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=Name, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Value="JournalTutorials_c">
                            <Setter TargetName="Root" Property="SelectedIndex" Value="3"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

	<Style x:Key="Journal.BaseTextStyle" TargetType="TextBlock">
		<Setter Property="Foreground" Value="{StaticResource LS_baseTxtColor}"/>
		<Setter Property="noesis:Text.Stroke" Value="{StaticResource LS_textStrokeColor}"/>
		<Setter Property="noesis:Text.StrokeThickness" Value="4"/>
        <Setter Property="FontSize" Value="{StaticResource ScaledDefaultFontSize}"/>
		<Setter Property="TextWrapping" Value="Wrap"/>
	</Style>

    <Style x:Key="Journal.HighlightedBaseTextStyle" TargetType="TextBlock" BasedOn="{StaticResource Journal.BaseTextStyle}">
        <Setter Property="Foreground" Value="{StaticResource LS_accent100TxtColor}"/>
    </Style>

	<Style x:Key="Journal.TitleStyle" TargetType="TextBlock" BasedOn="{StaticResource Journal.BaseTextStyle}">
		<Setter Property="Foreground" Value="{StaticResource LS_tint100}"/>
        <Setter Property="FontSize" Value="{StaticResource ScaledHugeFontSize}"/>
	</Style>

	<Style x:Key="Journal.BookmarkStyle" TargetType="TextBlock" BasedOn="{StaticResource Journal.BaseTextStyle}">
		<Setter Property="Foreground" Value="{StaticResource LS_accent25TxtColor}"/>
        <Setter Property="FontSize" Value="{StaticResource ScaledSmallFontSize}"/>
	</Style>

    <Style x:Key="Journal.ObjectiveStepStyle" TargetType="TextBlock" BasedOn="{StaticResource Journal.BaseTextStyle}">
		<Setter Property="Foreground" Value="{StaticResource LS_accent25TxtColor}"/>
		<Setter Property="FontSize" Value="{StaticResource ScaledSmallishFontSize}"/>
	</Style>

	<Storyboard x:Key="Journal.SelectionHighlightAnimation">
		<DoubleAnimation Storyboard.TargetName="Highlight1" Storyboard.TargetProperty="Opacity" From="1" To="0" Duration="0:0:3" AutoReverse="True" RepeatBehavior="Forever"/>
		<DoubleAnimation Storyboard.TargetName="Highlight2" Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:3" AutoReverse="True" RepeatBehavior="Forever"/>
	</Storyboard>

	<ControlTemplate x:Key="Journal.ListItemTemplate" TargetType="ContentControl">
        <ControlTemplate.Resources>
            <System:Double x:Key="HighlightMargin">36</System:Double>
        </ControlTemplate.Resources>
        <Grid>
            <Grid x:Name="Bg" VerticalAlignment="Top">
                <Rectangle x:Name="BgHighlight" Fill="#66FEDEA3" Visibility="Collapsed" />
                <ContentPresenter Margin="{StaticResource Journal.TextTopBottomMargin}"/>
            </Grid>
            <ls:LSNineSliceImage x:Name="Highlight1" ImageSource="{StaticResource Journal.SelectionHighlightImage}" Slices="{StaticResource Journal.SelectionHighlightSlices}" 
                                 Width="{Binding ActualWidth, ElementName=Bg, Converter={StaticResource AddConverter}, ConverterParameter={StaticResource HighlightMargin}}"
                                 Height="{Binding ActualHeight, ElementName=Bg, Converter={StaticResource AddConverter}, ConverterParameter={StaticResource HighlightMargin}}"
                                 Margin="-18" HorizontalAlignment="Stretch" VerticalAlignment="Center" Visibility="Collapsed"/>
			<ls:LSNineSliceImage x:Name="Highlight2" ImageSource="{StaticResource Journal.SelectionHighlightImage2}" Slices="{StaticResource Journal.SelectionHighlightSlices}" 
                                 Width="{Binding ActualWidth, ElementName=Bg, Converter={StaticResource AddConverter}, ConverterParameter={StaticResource HighlightMargin}}"
                                 Height="{Binding ActualHeight, ElementName=Bg, Converter={StaticResource AddConverter}, ConverterParameter={StaticResource HighlightMargin}}"
                                 Margin="-18" HorizontalAlignment="Stretch" VerticalAlignment="Center" Visibility="Collapsed"/>
		</Grid>

		<ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ls:MoveFocus.IsFocused" Value="True"/>
                    <Condition Property="IsEnabled" Value="True"/>
                </MultiTrigger.Conditions>

                <Setter TargetName="BgHighlight" Property="Visibility" Value="Visible"/>
                <Setter TargetName="Highlight1" Property="Visibility" Value="Visible"/>
                <Setter TargetName="Highlight2" Property="Visibility" Value="Visible"/>

                <MultiTrigger.EnterActions>
                    <BeginStoryboard x:Name="HighlightAnimation" Storyboard="{StaticResource Journal.SelectionHighlightAnimation}"/>
                </MultiTrigger.EnterActions>
                <MultiTrigger.ExitActions>
                    <StopStoryboard BeginStoryboardName="HighlightAnimation"/>
                </MultiTrigger.ExitActions>
            </MultiTrigger>
        </ControlTemplate.Triggers>
	</ControlTemplate>

    <Storyboard x:Key="Journal.FadeInSidePanelAnim" FillBehavior="Stop">
		<!-- Navigation -->
		<ThicknessAnimation Duration="{StaticResource Journal.AnimationFadeDuration}" From="{StaticResource Journal.NavigationMargin}" To="-50,0,0,0" Storyboard.TargetProperty="Margin" Storyboard.TargetName="Navigation">
			<ThicknessAnimation.EasingFunction>
				<CubicEase EasingMode="EaseOut"/>
			</ThicknessAnimation.EasingFunction>
		</ThicknessAnimation>
		<DoubleAnimation Duration="{StaticResource Journal.AnimationFadeDuration}" From="1" To="0.75" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Navigation">
			<DoubleAnimation.EasingFunction>
				<CubicEase EasingMode="EaseOut"/>
			</DoubleAnimation.EasingFunction>
		</DoubleAnimation>

		<!-- MainPanel -->
		<ThicknessAnimation Duration="{StaticResource Journal.AnimationFadeDuration}" From="0" To="-200,0,200,0" Storyboard.TargetProperty="Margin" Storyboard.TargetName="MainPanel">
			<ThicknessAnimation.EasingFunction>
				<CubicEase EasingMode="EaseOut"/>
			</ThicknessAnimation.EasingFunction>
		</ThicknessAnimation>
		<DoubleAnimation Duration="{StaticResource Journal.AnimationFadeDuration}" From="1" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MainPanel">
			<DoubleAnimation.EasingFunction>
				<CubicEase EasingMode="EaseOut"/>
			</DoubleAnimation.EasingFunction>
		</DoubleAnimation>
		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="MainPanel">
			<ObjectAnimationUsingKeyFrames.KeyFrames>
				<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="{StaticResource Journal.AnimationFadeKeyTime}" Value="{x:Static Visibility.Collapsed}"/>
			</ObjectAnimationUsingKeyFrames.KeyFrames>
		</ObjectAnimationUsingKeyFrames>

		<!-- SidePanel -->
		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="SidePanel">
			<ObjectAnimationUsingKeyFrames.KeyFrames>
				<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
			</ObjectAnimationUsingKeyFrames.KeyFrames>
		</ObjectAnimationUsingKeyFrames>
		<ThicknessAnimation Duration="{StaticResource Journal.AnimationFadeDuration}" From="200,0,-200,0" To="0" Storyboard.TargetProperty="Margin" Storyboard.TargetName="SidePanel">
			<ThicknessAnimation.EasingFunction>
				<CubicEase EasingMode="EaseOut"/>
			</ThicknessAnimation.EasingFunction>
		</ThicknessAnimation>
		<DoubleAnimation Duration="{StaticResource Journal.AnimationFadeDuration}" From="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SidePanel">
			<DoubleAnimation.EasingFunction>
				<CubicEase EasingMode="EaseOut"/>
			</DoubleAnimation.EasingFunction>
		</DoubleAnimation>

	</Storyboard>

    <Storyboard x:Key="Journal.FadeOutSidePanelAnim">
        <!-- Navigation -->
        <ThicknessAnimation Duration="{StaticResource Journal.AnimationFadeDuration}" From="-50,0,0,0" To="{StaticResource Journal.NavigationMargin}" Storyboard.TargetProperty="Margin" Storyboard.TargetName="Navigation">
            <ThicknessAnimation.EasingFunction>
                <CubicEase EasingMode="EaseOut"/>
            </ThicknessAnimation.EasingFunction>
        </ThicknessAnimation>
        <DoubleAnimation Duration="{StaticResource Journal.AnimationFadeDuration}" From="0.75" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Navigation">
            <DoubleAnimation.EasingFunction>
                <CubicEase EasingMode="EaseOut"/>
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>

        <!-- MainPanel -->
        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="MainPanel">
            <ObjectAnimationUsingKeyFrames.KeyFrames>
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames.KeyFrames>
        </ObjectAnimationUsingKeyFrames>
        <ThicknessAnimation Duration="{StaticResource Journal.AnimationFadeDuration}" From="-200,0,200,0" To="0" Storyboard.TargetProperty="Margin" Storyboard.TargetName="MainPanel">
            <ThicknessAnimation.EasingFunction>
                <CubicEase EasingMode="EaseOut"/>
            </ThicknessAnimation.EasingFunction>
        </ThicknessAnimation>
        <DoubleAnimation Duration="{StaticResource Journal.AnimationFadeDuration}" From="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MainPanel">
            <DoubleAnimation.EasingFunction>
                <CubicEase EasingMode="EaseOut"/>
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>

        <!-- SidePanel -->
        <ThicknessAnimation Duration="{StaticResource Journal.AnimationFadeDuration}" From="0" To="200,0,-200,0" Storyboard.TargetProperty="Margin" Storyboard.TargetName="SidePanel">
            <ThicknessAnimation.EasingFunction>
                <CubicEase EasingMode="EaseOut"/>
            </ThicknessAnimation.EasingFunction>
        </ThicknessAnimation>
        <DoubleAnimation Duration="{StaticResource Journal.AnimationFadeDuration}" From="1" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SidePanel">
            <DoubleAnimation.EasingFunction>
                <CubicEase EasingMode="EaseOut"/>
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>
        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="SidePanel">
            <ObjectAnimationUsingKeyFrames.KeyFrames>
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="{StaticResource Journal.AnimationFadeKeyTime}" Value="{x:Static Visibility.Collapsed}"/>
            </ObjectAnimationUsingKeyFrames.KeyFrames>
        </ObjectAnimationUsingKeyFrames>
    </Storyboard>

</ResourceDictionary>