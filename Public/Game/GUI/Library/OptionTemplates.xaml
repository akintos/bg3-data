<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
			        xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
					xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:System="clr-namespace:System;assembly=mscorlib"
                    xmlns:ls="clr-namespace:ls;assembly=SharedGUI"
                    xmlns:noesis="clr-namespace:NoesisGUIExtensions;assembly=Noesis.GUI.Extensions"
					mc:Ignorable="d">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="OptionTemplates_Shared.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <ControlTemplate x:Key="OptionRepeatButtonTemplate" TargetType="RepeatButton">
        <Grid>
            <Image x:Name="bg" Source="{StaticResource BtnSmallRound}" Stretch="None"/>
            <Image x:Name="img" Source="{DynamicResource ButtonNormal}" Stretch="None"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Source" Value="{DynamicResource ButtonHighlight}" TargetName="img"/>
                <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Buttons/btn_small_round_h.png" TargetName="bg"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Source" Value="{DynamicResource ButtonPressed}" TargetName="img"/>
                <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Buttons/btn_small_round_p.png" TargetName="bg"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Source" Value="{DynamicResource ButtonDisabled}" TargetName="img"/>
                <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Buttons/btn_small_round_disabled.png" TargetName="bg"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <Style x:Key="SliderRepeatButtonLeftStyle" TargetType="ls:LSRepeatButton">
        <Style.Resources>
            <ImageSource x:Key="ButtonNormal">pack://application:,,,/GustavNoesisGUI;component/Assets/Options/input_slider_arrowL_d.png</ImageSource>
            <ImageSource x:Key="ButtonHighlight">pack://application:,,,/GustavNoesisGUI;component/Assets/Options/input_slider_arrowL_h.png</ImageSource>
            <ImageSource x:Key="ButtonPressed">pack://application:,,,/GustavNoesisGUI;component/Assets/Options/input_slider_arrowL_h.png</ImageSource>
            <ImageSource x:Key="ButtonDisabled">pack://application:,,,/GustavNoesisGUI;component/Assets/Options/input_slider_arrowL_d.png</ImageSource>
        </Style.Resources>
        <Setter Property="Template" Value="{StaticResource OptionRepeatButtonTemplate}"/>
        <Setter Property="SoundID" Value="UI_HUD_Shared_Slider_LeftButton"/>
    </Style>

    <Style x:Key="SliderRepeatButtonRightStyle" TargetType="ls:LSRepeatButton">
        <Style.Resources>
            <ImageSource x:Key="ButtonNormal">pack://application:,,,/GustavNoesisGUI;component/Assets/Options/input_slider_arrowR_d.png</ImageSource>
            <ImageSource x:Key="ButtonHighlight">pack://application:,,,/GustavNoesisGUI;component/Assets/Options/input_slider_arrowR_h.png</ImageSource>
            <ImageSource x:Key="ButtonPressed">pack://application:,,,/GustavNoesisGUI;component/Assets/Options/input_slider_arrowR_h.png</ImageSource>
            <ImageSource x:Key="ButtonDisabled">pack://application:,,,/GustavNoesisGUI;component/Assets/Options/input_slider_arrowR_d.png</ImageSource>
        </Style.Resources>
        <Setter Property="Template" Value="{StaticResource OptionRepeatButtonTemplate}"/>
        <Setter Property="SoundID" Value="UI_HUD_Shared_Slider_RightButton"/>
    </Style>

    <Style x:Key="OptionSliderThumbStyle" TargetType="ls:LSThumb">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="SoundID" Value="UI_HUD_Shared_Slider_Thumb"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Grid>
                        <Image x:Name="img" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/Buttons/btn_hudNav_d.png" Stretch="None"/>
                        <Image x:Name="ico" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/Options/ico_scrubber_d.png" Stretch="None"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Buttons/btn_hudNav_h.png" TargetName="img"/>
                            <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Options/ico_scrubber_h.png" TargetName="ico"/>
                        </Trigger>
                        <Trigger Property="IsDragging" Value="True">
                            <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Buttons/btn_hudNav_p.png" TargetName="img"/>
                            <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Options/ico_scrubber_h.png" TargetName="ico"/>
                            <Setter Property="Margin" Value="0,2,0,-2" TargetName="ico"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Buttons/btn_hudNav_disabled.png" TargetName="img"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultSliderValueStyle" TargetType="TextBlock">
        <Setter Property="Margin" Value="0,0,-38,0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="TextAlignment" Value="Left"/>
        <Setter Property="Text" Value="{Binding Value, Converter={StaticResource RoundDownConverter}}"/>
        <Setter Property="Visibility" Value="{Binding ShowValue, Converter={StaticResource BoolToVisibleConverter}}"/>
    </Style>

    <Style x:Key="PointNClickSliderValueStyle" BasedOn="{StaticResource PointNClickSliderValueSharedStyle}" TargetType="TextBlock">
        <Setter Property="Margin" Value="0,0,0,100"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="TextAlignment" Value="Center"/>
    </Style>

    <Style x:Key="CameraPanningSpeedSliderValueStyle" TargetType="TextBlock">
        <Setter Property="Margin" Value="0,0,0,100"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="Visibility" Value="Visible"/>
        <!-- Default, 'Normal' case, less than 1, greater than -1 -->
        <Setter Property="Text" Value="{Binding Source='h6311cf93gc2fdg4dbbga861g2c7a44f394d8', Converter={StaticResource TranslatedStringConverter}}"/>

        <Style.Triggers>
            <!-- 'Slow' case: less than -1 -->
            <DataTrigger Binding="{Binding Value, Converter={StaticResource LessThanConverter}, ConverterParameter=-1}" Value="True">
                <Setter Property="Text" Value="{Binding Source='hc71f7bb4g5029g4e4bg9de5g637a4a3e34f7', Converter={StaticResource TranslatedStringConverter}}"/>
            </DataTrigger>
            <!-- 'Fast' case: more than 1 -->
            <DataTrigger Binding="{Binding Value, Converter={StaticResource GreaterThanConverter}, ConverterParameter=1}" Value="True">
                <Setter Property="Text" Value="{Binding Source='h51157197gd1b8g414bga9b8gd205000c0415', Converter={StaticResource TranslatedStringConverter}}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="FontSizeSliderValueStyle" BasedOn="{StaticResource FontSizeSliderValueSharedStyle}" TargetType="TextBlock">
        <Setter Property="Margin" Value="0,0,0,100"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="Tag" Value="{Binding Value, Converter={StaticResource RoundConverter}}"/>
    </Style>

    <ControlTemplate x:Key="OptionsSliderTemplate" TargetType="Slider">
        <Grid HorizontalAlignment="Center">
            <Image HorizontalAlignment="Center" VerticalAlignment="Center" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/Options/input_slider_d.png" Stretch="None" />

            <ls:LSRepeatButton x:Name="PART_DecreaseRepeatButton" HorizontalAlignment="Left" Style="{StaticResource SliderRepeatButtonLeftStyle}" Command="Slider.DecreaseLarge" />
            <ls:LSRepeatButton x:Name="PART_IncreaseRepeatButton" HorizontalAlignment="Right" Style="{StaticResource SliderRepeatButtonRightStyle}" Command="Slider.IncreaseLarge" />

            <Track Name="PART_Track" HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="40,0,40,0" Height="{TemplateBinding Height}">
                <Track.DecreaseRepeatButton>
                    <ls:LSRepeatButton x:Name="PART_TrackBefore" Style="{StaticResource Style.Slider.RepeatButton}" Command="Slider.DecreaseLarge"/>
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <ls:LSThumb Style="{StaticResource OptionSliderThumbStyle}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <ls:LSRepeatButton x:Name="PART_TrackAfter" Style="{StaticResource Style.Slider.RepeatButton}" Command="Slider.IncreaseLarge"/>
                </Track.IncreaseRepeatButton>
            </Track>
            <TextBlock x:Name="PART_ValueLabel" Style="{StaticResource DefaultSliderValueStyle}" Foreground="{DynamicResource LS_accent100TxtColor}" FontSize="{DynamicResource MediumFontSize}"/>
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Enabled}" Value="False">
                <Setter Property="Opacity" Value="{DynamicResource DisabledOpacity}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding OptionType}" Value="POINT_AND_CLICK_FREQUENCY">
                <Setter Property="Style" Value="{StaticResource PointNClickSliderValueStyle}" TargetName="PART_ValueLabel"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding OptionType}" Value="DIALOG_FONT_SIZE">
                <Setter Property="Style" Value="{StaticResource FontSizeSliderValueStyle}" TargetName="PART_ValueLabel"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding OptionType}" Value="OVERHEAD_FONT_SIZE">
                <Setter Property="Style" Value="{StaticResource FontSizeSliderValueStyle}" TargetName="PART_ValueLabel"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding OptionType}" Value="PANNING_SPEED">
                <Setter Property="Style" Value="{StaticResource CameraPanningSpeedSliderValueStyle}" TargetName="PART_ValueLabel"/>
            </DataTrigger>
            
            <DataTrigger Binding="{Binding OptionType}" Value="UIScaling">
                <Setter Property="Style" Value="{StaticResource FontSizeSliderValueStyle}" TargetName="PART_ValueLabel"/>
                <Setter Property="Text" Value="{Binding Value, Converter={StaticResource EnumTranslatedStringConverter}, ConverterParameter='h2e12e1f7g7318g4704ga3efgf4121ab0027a'}" TargetName="PART_ValueLabel"/>
            </DataTrigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTemplate">
        <ls:LSComboBox x:Name="comboBox" ItemsSource="{Binding ComboItems, Mode=OneWay}" SelectedItem="{Binding SelectedItem}" Foreground="{StaticResource LS_specialTxtColor}" Style="{DynamicResource ComboBoxStyle}" Text="{Binding SelectedItem.Name, Mode=OneWay}" IsEnabled="{Binding Enabled, Mode=OneWay}" SoundID="UI_HUD_Options_ComboBox"/>
    </ControlTemplate>

    <ControlTemplate x:Key="TickBoxTemplate">
        <ls:LSToggleButton Style="{DynamicResource TickBox}" IsChecked="{Binding Value}" Command="{Binding DataContext.OnChangeToggleButton, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" IsEnabled="{Binding Enabled}" SoundID="UI_HUD_Options_ToggleButton"/>
    </ControlTemplate>

    <ControlTemplate x:Key="SliderTemplate">
        <Slider x:Name="element" DataContext="{Binding}" Template="{StaticResource OptionsSliderTemplate}" Value="{Binding Value}" Minimum="{Binding Min}" Maximum="{Binding Max}" IsSnapToTickEnabled="False" 
                SmallChange="{Binding Max, Converter={StaticResource DivideAndRoundConverter}, ConverterParameter='40'}" LargeChange="{Binding Max, Converter={StaticResource DivideAndRoundConverter}, ConverterParameter='10'}" IsEnabled="{Binding Enabled}"/>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding OptionType}" Value="UIScaling">
                <Setter TargetName="element" Property="IsSnapToTickEnabled" Value="True"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="EditBoxTemplate">
        <ls:LSTextBox Text="{Binding Value}" MaxLength="{Binding MaxLength}" TextImmediateSourceUpdate="True" Foreground="{DynamicResource LS_ActivePanelFontColor}" FontSize="{DynamicResource BigFontSize}" TextAlignment="Center" Width="540"/>
    </ControlTemplate>

    <ControlTemplate x:Key="PasswordBoxTemplate">
        <ls:LSPasswordBox x:Name="PassBox" Text="{Binding Value}" IsEnabled="True" MaxLength="{Binding MaxLength}" Foreground="{DynamicResource LS_ActivePanelFontColor}" FontSize="{DynamicResource BigFontSize}" Width="540"/>
    </ControlTemplate>

    <DataTemplate x:Key="KeybindingTemplate">
        <Grid Margin="0,4,0,4" Width="2000">
            <Grid.Resources>
	            <Style TargetType="{x:Type ls:LSButton}" BasedOn="{StaticResource BaseButtonStyle}">
                    <Setter Property="FontSize" Value="{StaticResource BigFontSize}"/>
		            <Setter Property="Foreground" Value="{DynamicResource LS_accent100TxtColor}"/>
		            <Setter Property="ls:ButtonHelper.ImageSource" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Options/inputBox_keybinds_1.png"/>
		            <Style.Triggers>
			            <Trigger Property="IsMouseOver" Value="True">
				            <Setter Property="ls:ButtonHelper.ImageSource" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Options/inputBox_keybinds_1_active.png" />
			            </Trigger>
			            <Trigger Property="IsPressed" Value="True">
				            <Setter Property="ls:ButtonHelper.ImageSource" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Options/inputBox_keybinds_1_active.png"/>
			            </Trigger>
			            <Trigger Property="IsEnabled" Value="False">
				            <Setter Property="ls:ButtonHelper.ImageSource" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Options/inputBox_keybinds_1_active.png" />
			            </Trigger>
		            </Style.Triggers>
	            </Style>
            </Grid.Resources>
            <Image x:Name="highlight" Stretch="None" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/Options/listItem_bg_fullscreen.png"/>
            <TextBlock VerticalAlignment="Center" HorizontalAlignment="Left" Text="{Binding Text}" FontSize="{DynamicResource DefaultFontSize}" Foreground="{StaticResource LS_accent75TxtColor}" Margin="60,0,0,0"/>
            <ItemsControl VerticalAlignment="Center" HorizontalAlignment="Right" ItemsSource="{Binding Bindings}" Background="Transparent" ScrollViewer.HorizontalScrollBarVisibility="Disabled" Margin="0,0,60,0">

                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel IsItemsHost="True" Orientation="Horizontal"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <ls:LSButton Content="{Binding BindingString}" Command="{Binding DataContext.RequestKeybindingChange, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="{Binding}"/>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>

            </ItemsControl>

            <b:Interaction.Triggers>
                <b:EventTrigger EventName="MouseEnter">
                    <ls:LSPlaySound Sound="UI_HUD_Options_OptionHover"/>
                </b:EventTrigger>
            </b:Interaction.Triggers>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="OptionTemplate">
        <DataTemplate.Resources>
            <ImageSource x:Key="ItemBG">pack://application:,,,/GustavNoesisGUI;component/Assets/Options/li_bg.png</ImageSource>
            <ImageSource x:Key="ItemBGHL">pack://application:,,,/GustavNoesisGUI;component/Assets/Options/li_bg_active.png</ImageSource>
			<Thickness x:Key="SubOptionMargin">120,0,0,0</Thickness>
        </DataTemplate.Resources>
        <Grid x:Name="Container" Margin="0,4,0,4" MaxWidth="2000">
            <Grid.ColumnDefinitions>
                <ColumnDefinition x:Name="col0" Width="*"/>
                <ColumnDefinition x:Name="col1" Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Image x:Name="highlight" Grid.Column="0" Grid.ColumnSpan="2" Stretch="None" Source="{StaticResource ItemBG}"/>
            <TextBlock x:Name="label" Grid.Column="0" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="60,0,0,0" TextWrapping="Wrap" Text="{Binding Text}" FontSize="{StaticResource ScaledDefaultFontSize}" Foreground="{StaticResource LS_accent75TxtColor}"/>
            <Control x:Name="content" Grid.Column="1" VerticalAlignment="Center"  HorizontalAlignment="Right" Template="{StaticResource ComboBoxTemplate}" Margin="20,0,60,0"/>

            <b:Interaction.Triggers>
                <b:EventTrigger EventName="MouseEnter">
                    <ls:LSPlaySound Sound="UI_HUD_Options_OptionHover"/>
                </b:EventTrigger>
            </b:Interaction.Triggers>
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding ListItemType}" Value="ComboBox">
                <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}" TargetName="content"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding ListItemType}" Value="TickBox">
                <Setter Property="Template" Value="{StaticResource TickBoxTemplate}" TargetName="content"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding ListItemType}" Value="Slider">
                <Setter Property="Template" Value="{StaticResource SliderTemplate}" TargetName="content"/>
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding ListItemType}" Value="EditBox" />
                    <Condition Binding="{Binding HideValue}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Template" Value="{StaticResource EditBoxTemplate}" TargetName="content"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding ListItemType}" Value="EditBox" />
                    <Condition Binding="{Binding HideValue}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Template" Value="{StaticResource PasswordBoxTemplate}" TargetName="content"/>
            </MultiDataTrigger>

            <!-- Sub elements list -->
            <DataTrigger Binding="{Binding OptionType}" Value="AUTO_SAVES">
                <Setter Property="Margin" Value="{StaticResource SubOptionMargin}" TargetName="label"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding OptionType}" Value="PANNING_SPEED">
                <Setter Property="Margin" Value="{StaticResource SubOptionMargin}" TargetName="label"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding OptionType}" Value="FRAME_CAP">
                <Setter Property="Margin" Value="{StaticResource SubOptionMargin}" TargetName="label"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding OptionType}" Value="SHARPNESS_VALUE">
                <Setter Property="Margin" Value="{StaticResource SubOptionMargin}" TargetName="label"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding OptionType}" Value="SHOW_SPEAKER">
                <Setter Property="Margin" Value="{StaticResource SubOptionMargin}" TargetName="label"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding OptionType}" Value="TEXT_BACKGROUND_OPACITY">
                <Setter Property="Margin" Value="{StaticResource SubOptionMargin}" TargetName="label"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding OptionType}" Value="GAME_CAMERA_AUTO_ROTATION_SPEED">
                <Setter Property="Margin" Value="{StaticResource SubOptionMargin}" TargetName="label"/>
            </DataTrigger>

            <!-- UI where the options have less room -->
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ls:UIWidget}}, Path=ContextName}" Value="Lobby">
                <Setter TargetName="Container" Property="Tag" Value="Lobby"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ls:UIWidget}}, Path=ContextName}" Value="LobbyBrowser">
                <Setter TargetName="Container" Property="Tag" Value="Lobby"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding Path=Tag, ElementName=Container}" Value="Lobby">
                <Setter Property="Width" Value="1200" TargetName="Container"/>
                <Setter Property="Margin" TargetName="label" Value="40,0,0,0"/>
                <Setter Property="Margin" TargetName="content" Value="20,0,40,0"/>
            </DataTrigger>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="highlight" Property="Source" Value="{StaticResource ItemBGHL}"/>
            </Trigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <!-- Options -->
    <Style x:Key="OptionStyle" TargetType="ListBoxItem" BasedOn="{StaticResource {x:Type ListBoxItem}}">
        <Setter Property="ContentTemplate" Value="{StaticResource OptionTemplate}" />
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="IsSelected" Value="False"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding ListItemType}" Value="Keybinding">
                <Setter Property="ContentTemplate" Value="{StaticResource KeybindingTemplate}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding ListItemType}" Value="Button">
                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <ls:LSButton Margin="0,8,0,8" Style="{StaticResource BrownButtonStyle}" Content="{Binding Text}" Command="{Binding ButtonCommand.ActionCommand}" IsEnabled="{Binding Enabled, Mode=OneWay}"/>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding ListItemType}" Value="String">
                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <DataTemplate.Resources>
                                <ImageSource x:Key="SideDecorations">pack://application:,,,/GustavNoesisGUI;component/Assets/Options/decors_header.png</ImageSource>
                            </DataTemplate.Resources>

                            <StackPanel Margin="0,40,0,0" Orientation="Horizontal">
                                <Image Source="{StaticResource SideDecorations}" Stretch="None" VerticalAlignment="Center"/>
                                <TextBlock Text="{Binding Text}" FontWeight="Bold" Foreground="{StaticResource LS_tint100}" Margin="16,0"/>
                                <Image Source="{StaticResource SideDecorations}" Stretch="None" VerticalAlignment="Center">
                                    <Image.RenderTransform>
                                        <ScaleTransform ScaleX="-1" CenterX="42"/>
                                    </Image.RenderTransform>
                                </Image>
                            </StackPanel>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <!-- Option is hidden until we focus on task -->
            <DataTrigger Binding="{Binding OptionType}" Value="UIScaling">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="IsSelected" Value="True"/>
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="Background" Value="Transparent" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="Background" Value="Transparent" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="PreviewTextStyle" TargetType="TextBlock">
        <Setter Property="TextAlignment" Value="Center" />
        <Setter Property="Foreground" Value="{StaticResource LS_accent75TxtColor}" />
    </Style>

    <Style x:Key="OptionPreviewGridMarginStyle" TargetType="Grid">
        <Setter Property="Margin" Value="120,24,0,0"/>
    </Style>

    <DataTemplate x:Key="NavigationButtonTemplate" DataType="ls:LSButton">
        <Grid VerticalAlignment="Top">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="27"/>
                <ColumnDefinition Width="58"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="19"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="92"/>
            </Grid.RowDefinitions>
            <Image x:Name="iconEnabled" Grid.Column="1" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/ico_inventory_active.png" Stretch="Uniform"/>
            <Image x:Name="iconDisabled" Grid.Column="1" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/ico_inventory_active.png" Stretch="Uniform" Visibility="Collapsed"/>
            <TextBlock x:Name="label" Grid.Column="2" Text="{Binding Label ,Converter={StaticResource TranslatedStringConverter}}" MaxWidth="200" FontSize="{StaticResource SmallFontSize}" FontWeight="Bold" Foreground="{DynamicResource LS_accent75TxtColor}" HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Center" noesis:Text.StrokeThickness="4" noesis:Text.Stroke="{DynamicResource LS_tint00}"/>
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource LS_extraspecialTxtColor}" TargetName="label"/>
                <Setter Property="Visibility" Value="Collapsed" TargetName="iconEnabled"/>
                <Setter Property="Visibility" Value="Visible" TargetName="iconDisabled"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type ls:LSButton}}}" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource LS_accent100TxtColor}" TargetName="label"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IconId}" Value="5">
                <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Options/ico_video_d.png" TargetName="iconEnabled"/>
                <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Options/ico_video_h.png" TargetName="iconDisabled"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IconId}" Value="6">
                <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Options/ico_keybinds_d.png" TargetName="iconEnabled"/>
                <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Options/ico_keybinds_h.png" TargetName="iconDisabled"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IconId}" Value="7">
                <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Options/ico_gameplay_d.png" TargetName="iconEnabled"/>
                <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Options/ico_gameplay_h.png" TargetName="iconDisabled"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IconId}" Value="8">
                <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Options/ico_controller_d.png" TargetName="iconEnabled"/>
                <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Options/ico_controller_h.png" TargetName="iconDisabled"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IconId}" Value="9">
                <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Options/ico_audio_d.png" TargetName="iconEnabled"/>
                <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Options/ico_audio_h.png" TargetName="iconDisabled"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IconId}" Value="10">
                <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Options/ico_video_d.png" TargetName="iconEnabled"/>
                <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Options/ico_video_h.png" TargetName="iconDisabled"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IconId}" Value="11">
                <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Options/ico_video_d.png" TargetName="iconEnabled"/>
                <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Options/ico_video_h.png" TargetName="iconDisabled"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <ControlTemplate x:Key="OptionTopButtons">
        <Grid MaxWidth="3840">
            <ls:LSButton x:Name="CloseButtonTop" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="{StaticResource SmallCloseButtonDefaultMargin}" Style="{StaticResource SmallCloseButton}" SoundID="UI_HUD_Options_Close" Command="{Binding CancelCommand}" BoundEvent="ToggleInGameMenu"/>
            <StackPanel Orientation="Horizontal" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="162,44,126,0">
                <StackPanel.Resources>
                    <Style TargetType="ls:LSButton" >
                        <Setter Property="SoundID" Value="UI_HUD_Options_Panel"/>
                        <Setter Property="ContentTemplate" Value="{StaticResource NavigationButtonTemplate}"/>

                        <Setter Property="Command" Value="{Binding CustomEvent}"/>
                        <Setter Property="CommandParameter" Value="{Binding Content.EventString, RelativeSource={RelativeSource Mode=Self}}"/>

                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ls:LSButton">
                                    <Grid>
                                        <Image x:Name="img" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/Buttons/topNavBtn_inactive_d.png" Stretch="None" VerticalAlignment="Top" Margin="-6,0,-8,0"/>
                                        <ContentPresenter/>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Buttons/topNavBtn_inactive_h.png" TargetName="img"/>
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="True">
                                            <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Buttons/topNavBtn_inactive_p.png" TargetName="img"/>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Buttons/topNavBtn_active_d.png" TargetName="img"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </StackPanel.Resources>

                <ls:LSButton x:Name="gameplayButton" Content="{Binding Source={StaticResource gameplayOptionInfo}}"/>
                <ls:LSButton x:Name="keybindingButton" Content="{Binding Source={StaticResource keybindingOptionInfo}}"/>
                <ls:LSButton x:Name="controllerButton" Content="{Binding Source={StaticResource controllerOptionInfo}}" Visibility="Collapsed"/>
                <ls:LSButton x:Name="videoButton" Content="{Binding Source={StaticResource videoOptionInfo}}"/>
                <ls:LSButton x:Name="audioButton" Content="{Binding Source={StaticResource audioOptionInfo}}"/>
                <ls:LSButton x:Name="interfaceButton" Content="{Binding Source={StaticResource interfaceOptionInfo}}"/>
                <ls:LSButton x:Name="accessibilityButton" Content="{Binding Source={StaticResource accessibilityOptionInfo}}"/>
            </StackPanel>
        </Grid>

        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding ActiveOptionsID}" Value="AudioOptions">
                <Setter TargetName="audioButton" Property="IsEnabled" Value="False"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding ActiveOptionsID}" Value="GameOptions">
                <Setter TargetName="gameplayButton" Property="IsEnabled" Value="False"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding ActiveOptionsID}" Value="ControllerOptions">
                <Setter TargetName="controllerButton" Property="IsEnabled" Value="False"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding ActiveOptionsID}" Value="KeybindingOptions">
                <Setter TargetName="keybindingButton" Property="IsEnabled" Value="False"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding ActiveOptionsID}" Value="VideoOptions">
                <Setter TargetName="videoButton" Property="IsEnabled" Value="False"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding ActiveOptionsID}" Value="InterfaceOptions">
                <Setter TargetName="interfaceButton" Property="IsEnabled" Value="False"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding ActiveOptionsID}" Value="AccessibilityOptions">
                <Setter TargetName="accessibilityButton" Property="IsEnabled" Value="False"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <ControlTemplate x:Key="OptionBottomButtons">
        <ControlTemplate.Resources>
            <ImageSource x:Key="SideDecorations">pack://application:,,,/GustavNoesisGUI;component/Assets/Options/footer_decors_01.png</ImageSource>
            <ImageSource x:Key="BottomDecoration">pack://application:,,,/GustavNoesisGUI;component/Assets/Options/footer_decors_02.png</ImageSource>
        </ControlTemplate.Resources>
        <StackPanel VerticalAlignment="Bottom" HorizontalAlignment="Center" Margin="0,0,0,40">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                <Image Source="{StaticResource SideDecorations}" Stretch="None" VerticalAlignment="Center" Margin="-20,0"/>
                <ls:LSButton x:Name="CloseButtonBottom" HorizontalAlignment="Center" Style="{StaticResource BigBrownButtonStyle}" Content="{Binding Source='hfe928c0dgb014g4eb2g8c52g6ed43b026e20', Converter={StaticResource TranslatedStringConverter}}" SoundID="UI_HUD_Options_Close" Command="{Binding CustomEvent}" CommandParameter="CloseWidget">
                    <ls:LSButton.Resources>
                        <ImageBrush x:Key="IconNormal" ImageSource="pack://application:,,,/GustavNoesisGUI;component/Assets/Buttons/ico_btn_cross_d.png" Stretch="Fill"/>
                        <ImageBrush x:Key="IconPressed" ImageSource="pack://application:,,,/GustavNoesisGUI;component/Assets/Buttons/ico_btn_cross_d.png" Stretch="Fill"/>
                        <ImageBrush x:Key="IconHighlight" ImageSource="pack://application:,,,/GustavNoesisGUI;component/Assets/Buttons/ico_btn_cross_h.png" Stretch="Fill"/>
                        <ImageBrush x:Key="IconDisabled" ImageSource="pack://application:,,,/GustavNoesisGUI;component/Assets/Buttons/ico_btn_cross_d.png" Stretch="Fill"/>
                    </ls:LSButton.Resources>
                </ls:LSButton>
                <ls:LSButton HorizontalAlignment="Center" Style="{StaticResource BigBrownButtonStyle}" Content="{Binding Source='h25d571f7g0b5fg4c8agb2f9g6b3aab5225ce', Converter={StaticResource TranslatedStringConverter}}" SoundID="UI_HUD_Options_Default" Command="{Binding ResetOptionsToDefaultCommand}" >
                    <ls:LSButton.Resources>
                        <ImageBrush x:Key="IconNormal" ImageSource="pack://application:,,,/GustavNoesisGUI;component/Assets/Buttons/ico_reset_d.png" Stretch="Fill"/>
                        <ImageBrush x:Key="IconPressed" ImageSource="pack://application:,,,/GustavNoesisGUI;component/Assets/Buttons/ico_reset_d.png" Stretch="Fill"/>
                        <ImageBrush x:Key="IconHighlight" ImageSource="pack://application:,,,/GustavNoesisGUI;component/Assets/Buttons/ico_reset_d.png" Stretch="Fill"/>
                        <ImageBrush x:Key="IconDisabled" ImageSource="pack://application:,,,/GustavNoesisGUI;component/Assets/Buttons/ico_reset_d.png" Stretch="Fill"/>
                    </ls:LSButton.Resources>
                </ls:LSButton>
                <Image Source="{StaticResource SideDecorations}" Stretch="None" VerticalAlignment="Center" Margin="-20,0">
                    <Image.RenderTransform>
                        <ScaleTransform ScaleX="-1" CenterX="358"/>
                    </Image.RenderTransform>
                </Image>
            </StackPanel>
            <Image Source="{StaticResource BottomDecoration}" Stretch="None" HorizontalAlignment="Center"/>
        </StackPanel>
    </ControlTemplate>

    <ControlTemplate x:Key="PreviewOptionsTemplate">
        <Grid Background="{StaticResource LS_PanelBackground}">
            <Image Source="{StaticResource OptionsBackground}" Stretch="Fill"/>

            <Image Source="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/dialog_top.png" Stretch="None" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,-180,0,0"/>
            <Control Template="{StaticResource OptionTopButtons}" HorizontalAlignment="Stretch" VerticalAlignment="Top"/>

            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,184,0,0">

                <ListBox x:Name="Options" VerticalAlignment="Top" HorizontalAlignment="Center" AlternationCount="{Binding Options.Count}" ItemsSource="{Binding Options}" ItemContainerStyle="{StaticResource OptionStyle}" ScrollViewer.HorizontalScrollBarVisibility="Disabled" Margin="0,36,0,0">
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel Background="Transparent"/>
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>
                    <ListBox.Template>
                        <ControlTemplate>
                            <ScrollViewer HorizontalAlignment="Center" VerticalAlignment="Top" Padding="28,80,0,80" Height="1800" Width="Auto" Template="{StaticResource FlippedScrollViewerTemplate}" Background="Transparent">
                                <ScrollViewer.Resources>
                                    <Style x:Key="ScrollBarStyle" TargetType="ScrollBar" BasedOn="{StaticResource DecorativeGoldScrollBar}"/>
                                    <GridLength x:Key="Top">76</GridLength>
                                    <GridLength x:Key="Bottom">64</GridLength>
                                </ScrollViewer.Resources>
                                <ItemsPresenter/>
                            </ScrollViewer>
                        </ControlTemplate>
                    </ListBox.Template>
                </ListBox>

                <Image Source="pack://application:,,,/GustavNoesisGUI;component/Assets/Options/options_bgLine.png" Stretch="None" HorizontalAlignment="Center" VerticalAlignment="Center"/>

                <StackPanel x:Name="Preview" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,60,50,0" Width="1350" Orientation="Vertical" DataContext="{Binding ElementName=Options, Path=SelectedItem}">

                    <TextBlock ls:TextBlockFormatter.SourceText="{Binding Text}" HorizontalAlignment="Center" FontSize="{StaticResource ScaledBigFontSize}" Foreground="{StaticResource LS_accent100TxtColor}" TextAlignment="Center"/>

                    <Control HorizontalAlignment="Center" Template="{StaticResource OptionPreview}"/>

                    <TextBlock ls:TextBlockFormatter.SourceText="{Binding Description}" HorizontalAlignment="Center" MaxWidth="1280" Foreground="{StaticResource LS_accent75TxtColor}" TextAlignment="Center" TextWrapping="Wrap" Margin="0,48,0,0"/>

                    <ListBox ItemsSource="{Binding ComboItems}" Visibility="{Binding ShowComboItemsDescriptions, Converter={StaticResource BoolToVisibleConverter}}">
                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Vertical" Width="1350"/>
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>

                        <ListBox.ItemTemplate>
                            <DataTemplate DataType="{x:Type ls:VMEnumData}">
                                <DataTemplate.Resources>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="TextWrapping" Value="Wrap"/>
                                        <Setter Property="HorizontalAlignment" Value="Left"/>
                                    </Style>

                                    <ImageSource x:Key="SelectedOptionIcon">pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterPanel/ico_bullet_d.png</ImageSource>
                                </DataTemplate.Resources>

                                <StackPanel Orientation="Vertical" Margin="8,0,0,20" Width="1200">
                                    <StackPanel Orientation="Horizontal">
                                        <Image x:Name="SelectedIcon" Source="{StaticResource SelectedOptionIcon}" Stretch="None" Visibility="Hidden" VerticalAlignment="Top" Margin="0,12,0,0"/>
                                        <TextBlock ls:TextBlockFormatter.SourceText="{Binding Name}" Foreground="{StaticResource LS_accent75TxtColor}" FontSize="{StaticResource ScaledIntermediateFontSize}"/>
                                    </StackPanel>

                                    <TextBlock ls:TextBlockFormatter.SourceText="{Binding Description}" Foreground="{StaticResource LS_baseTxtColor}" FontSize="{StaticResource ScaledDefaultFontSize}"/>
                                </StackPanel>

                                <DataTemplate.Triggers>
                                    <DataTrigger Value="True">
                                        <DataTrigger.Binding>
                                            <MultiBinding Converter="{StaticResource EqualConverter}">
                                                <Binding Path=""/>
                                                <Binding Path="DataContext.SelectedItem" RelativeSource="{RelativeSource AncestorType={x:Type ListBox}}" />
                                            </MultiBinding>
                                        </DataTrigger.Binding>
                                        <Setter TargetName="SelectedIcon" Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </StackPanel>
            </StackPanel>

            <Control Name="BottomButtons" Template="{StaticResource OptionBottomButtons}"/>
        </Grid>

        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding SelectedItem.ListItemType, ElementName=Options}" Value="None">
                <Setter TargetName="Preview" Property="Visibility" Value="Hidden"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding SelectedItem.ListItemType, ElementName=Options}" Value="String">
                <Setter TargetName="Preview" Property="Visibility" Value="Hidden"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding SelectedIndex, ElementName=Options}" Value="-1">
                <Setter TargetName="Preview" Property="Visibility" Value="Hidden"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="KeybindingOptionsTemplate">
        <Grid>
            <Control Template="{StaticResource PreviewOptionsTemplate}"/>
            <Grid HorizontalAlignment="Center" VerticalAlignment="Center" Width="3840" Height="2160" Visibility="{Binding InputBindingVisible, Converter={StaticResource BoolToVisibleConverter}}" Background="{StaticResource LS_PanelBackground}">
                <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Orientation="Vertical">
                    <TextBlock Text="{Binding ActiveBindingKey}" TextAlignment="Center" Width="Auto" FontSize="{DynamicResource HugeFontSize}" Foreground="{StaticResource LS_tint100}" Background="Transparent" FontWeight="Bold" Margin="0,20,0,20"/>
                    <TextBlock Text="{Binding ActiveBindingName}" TextAlignment="Center" Width="Auto" FontSize="{DynamicResource HugeFontSize}" Foreground="{StaticResource LS_tint100}" Background="Transparent" FontWeight="Bold" Margin="0,20,0,20"/>
                    <StackPanel Orientation="Horizontal" Margin="10,0,10,0">
                        <ls:LSButton Style="{StaticResource BrownButtonStyle}" Content="{Binding Source='hd58c82e5ga514g4c6ag9f1eg29134bf7e78b', Converter={StaticResource TranslatedStringConverter}}" Command="{Binding ClearSingleBinding}" OverwriteClickSound="UI_Shared_Apply"/>
                        <ls:LSButton Style="{StaticResource BrownButtonStyle}" Content="{Binding Source='h675a55aegd07cg4ab0g862dg0c564197d478', Converter={StaticResource TranslatedStringConverter}}" Command="{Binding CancelSingleBinding}" OverwriteClickSound="UI_Shared_Closed_Click"/>
                        <ls:LSButton Style="{DynamicResource BigBlueButtonStyle}" Content="{Binding Source='hd9ef0e80g254cg4b35gb1e7gadfd05fe9f25', Converter={StaticResource TranslatedStringConverter}}" Command="{Binding ApplySingleBinding}" OverwriteClickSound="UI_Shared_Apply"/>
                    </StackPanel>
                </StackPanel>
            </Grid>
        </Grid>
    </ControlTemplate>

</ResourceDictionary>