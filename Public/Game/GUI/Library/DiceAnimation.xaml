<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:System="clr-namespace:System;assembly=mscorlib"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
					xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
			        xmlns:b="http://schemas.microsoft.com/xaml/behaviors"

                    xmlns:noesis="clr-namespace:NoesisGUIExtensions;assembly=Noesis.GUI.Extensions"
                    xmlns:ls="clr-namespace:ls;assembly=SharedGUI"
					mc:Ignorable="d">



    <System:TimeSpan x:Key="vfxAnimFrameTime">0:0:0.033</System:TimeSpan>
    <KeyTime x:Key="vfxAnimKeyTime1">0:0:0</KeyTime>


    <KeyTime x:Key="vfxAnimTextStartTime">0:0:0.42</KeyTime>
    <KeyTime x:Key="vfxAnimTextStopTime">0:0:1.95</KeyTime>

    <KeyTime x:Key="vfxAnimTrailStartTime">0:0:1.08</KeyTime>

    <KeyTime x:Key="vfxAnimTextATime1">0:0:1.37</KeyTime>
    <KeyTime x:Key="vfxAnimTextATime2">0:0:1.42</KeyTime>
    <KeyTime x:Key="vfxAnimTextATime2B">0:0:1.62</KeyTime>

    <KeyTime x:Key="vfxAnimDiceTextATime1">0:0:0.8</KeyTime>
    <KeyTime x:Key="vfxAnimDiceTextATime2">0:0:3.1</KeyTime>

    <KeyTime x:Key="vfxAnimTextPosTime1">0:0:1.13</KeyTime>
    <KeyTime x:Key="vfxAnimTextPosTime2">0:0:1.37</KeyTime>

    <KeyTime x:Key="vfxAnimTextScaleTime1">0:0:0.58</KeyTime>
    <KeyTime x:Key="vfxAnimTextScaleTime2">0:0:1.28</KeyTime>


    <KeyTime x:Key="vfxBucketTime1">0:0:0.07</KeyTime>
    <KeyTime x:Key="vfxBucketTime2">0:0:1.05</KeyTime>


    <KeyTime x:Key="HLAnimTime1">0:0:0.17</KeyTime>
    <KeyTime x:Key="HLAnimTime2">0:0:1.23</KeyTime>
    <KeyTime x:Key="HLAnimTime3">0:0:1.38</KeyTime>

    <KeyTime x:Key="vfxPopTime1">0:0:0.72</KeyTime>
    <KeyTime x:Key="vfxPopTime2">0:0:1.25</KeyTime>

    <!-- Common Active Roll text block style -->
    <Style x:Key="ActiveRollTextBlock" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource LS_extraspecialTxtColor}"/>
        <Setter Property="noesis:Text.Stroke" Value="{StaticResource LS_tint00}"/>
        <Setter Property="noesis:Text.StrokeThickness" Value="6"/>
        <Setter Property="IsEnabled" Value="True"/>
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
        <Setter Property="RenderTransform" >
            <Setter.Value>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform />
                </TransformGroup>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DCTextStyleBase" TargetType="TextBlock" BasedOn="{StaticResource ActiveRollTextBlock}">
        <Setter Property="Foreground" Value="{StaticResource LS_extraspecialTxtColor}"/>
        <Setter Property="RenderTransform" >
            <Setter.Value>
                <TransformGroup>
                    <ScaleTransform />
                    <TranslateTransform />
                </TransformGroup>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Success}" Value="True"/>
                    <Condition Binding="{Binding RollState}" Value="ResultReady"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Foreground" Value="{StaticResource LS_baseTxtColor}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Success}" Value="False"/>
                    <Condition Binding="{Binding RollState}" Value="ResultReady"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Foreground" Value="{StaticResource LS_extraspecialTxtColor}"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="BaseDieHolderStyle" TargetType="Grid">
        <Setter Property="Visibility" Value="Visible" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=Tag,RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Value="RevealResultAnimation">
                <Setter Property="Visibility" Value="Hidden" />
            </DataTrigger>

            <DataTrigger Binding="{Binding RollState}" Value="ResultReady">
                <Setter Property="Visibility" Value="Hidden" />
            </DataTrigger>


        </Style.Triggers>
    </Style>
    <!--#region Images-->

    <!-- Dice Images -->
    <Style x:Key="DieShadowStyle" TargetType="Path">
        <Setter Property="Data" Value="F1M0,-168.5a168.5,168.5,0,0,0,0,337a168.5,168.5,0,0,0,0,-337Z"/>
        <Setter Property="Opacity" Value="1"/>
        <Setter Property="Fill" >
            <Setter.Value>
                <RadialGradientBrush MappingMode="Absolute" RadiusX="155" RadiusY="155">
                    <GradientStop Offset="0" Color="#FF000000"/>
                    <GradientStop Offset="0.5" Color="#BA000000"/>
                    <GradientStop Offset="1" Color="#00000000"/>
                    <GradientStop Offset="0" Color="#FF000000"/>
                    <GradientStop Offset="0.35" Color="#CE000000"/>
                    <GradientStop Offset="0.71" Color="#9E000000"/>
                    <GradientStop Offset="0.85" Color="#4F000000"/>
                    <GradientStop Offset="1" Color="#00000000"/>
                </RadialGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="ShineStyle" TargetType="ls:AnimatedImage">
        <Setter Property="Template" Value="{StaticResource BaseAnimatedImage}" />
        <Setter Property="Width" Value="256"/>
        <Setter Property="Height" Value="256"/>
        <Setter Property="ClipSize" Value="256,256"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="LastFrame" Value="28"/>
        <Setter Property="RepeatBehavior" Value="1x"/>
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
        <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/ActiveRoll/VFX/d20Shine.png"/>
        <Setter Property="Time" Value="{StaticResource vfxAnimFrameTime}"/>
    </Style>

    <!--Note: This fontsize IS hardcoded because it needs to match the dice art-->
    <Style x:Key="DieTextStyle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="#Quadraat Offc Pro,pack://application:,,,/GustavNoesisGUI;component/Assets/Fonts/#Quadraat Offc Pro"/>
        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType=ls:UIWidget},Path=DataContext.CurrentDiceStyle.FontColour}"/>
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="FontWeight" Value="DemiBold"/>
        <Setter Property="FontSize" Value="62"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ls:UIWidget},Path=DataContext.CurrentDiceStyle.FontColour,FallbackValue=''}" Value="">
                <Setter Property="Foreground" Value="#EEEEEE"/>
                <Setter Property="FontWeight" Value="Bold"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="DiceTemplate" TargetType="ContentControl">
        <ControlTemplate.Resources>
            <Storyboard x:Key="GlowResultAnim">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ResultTxtGlow">
                    <DiscreteDoubleKeyFrame KeyTime="0:0:0.0" Value="0"/>
                    <LinearDoubleKeyFrame KeyTime="0:0:0.68" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ResultTxt">
                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ResultTxtGlow">
                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                </ObjectAnimationUsingKeyFrames>

                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="triangle">
                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                </ObjectAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="FailResultAnim">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ResultTxtFail">
                    <DiscreteDoubleKeyFrame KeyTime="0:0:0.01" Value="0"/>
                    <LinearDoubleKeyFrame KeyTime="0:0:0.9" Value="0"/>
                    <LinearDoubleKeyFrame KeyTime="0:0:0.9" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ResultTxt">
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.9" Value="{x:Static Visibility.Visible}"/>
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ResultTxtFail">
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.9" Value="{x:Static Visibility.Visible}"/>
                </ObjectAnimationUsingKeyFrames>

                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="triangle">
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.9" Value="{x:Static Visibility.Visible}"/>
                </ObjectAnimationUsingKeyFrames>
            </Storyboard>
            <Style TargetType="ls:AnimatedImage">
                <Setter Property="Template" Value="{StaticResource BaseAnimatedImage}" />
                <Setter Property="ClipSize" Value="256,256"/>
                <Setter Property="Margin" Value="0"/>
                <Setter Property="RepeatBehavior" Value="1x"/>
                <Setter Property="LastFrame" Value="20"/>
            </Style>
        </ControlTemplate.Resources>
        <Grid HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,4,0">
            <ls:AnimatedImage x:Name="DiceImg" Frame="{Binding DataContext.FinalResult, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" RenderTransformOrigin="0.5,0.5">
                <ls:AnimatedImage.Source>
                    <MultiBinding Converter="{StaticResource DiceImageSourceConverter}" >
                        <Binding Path="DataContext.CurrentDiceStyle" RelativeSource="{RelativeSource AncestorType={x:Type ls:UIWidget}}"/>
                        <Binding Source="/d20"/>
                    </MultiBinding>
                </ls:AnimatedImage.Source>
            </ls:AnimatedImage>

            <Grid x:Name="NumberResultSection">
                <Image x:Name="triangle" Visibility="Hidden" Stretch="None">
                    <Image.Source>
                        <MultiBinding Converter="{StaticResource DiceImageSourceConverter}" >
                            <Binding Path="DataContext.CurrentDiceStyle" RelativeSource="{RelativeSource AncestorType={x:Type ls:UIWidget}}"/>
                            <Binding Source="/d20_faceCover"/>
                        </MultiBinding>
                    </Image.Source>
                </Image>

                <TextBlock Text="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed" x:Name="ResultTxt" Opacity="1" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,4,0,0" noesis:Text.Stroke="#9F000000" noesis:Text.StrokeThickness="2" Style="{StaticResource DieTextStyle}" />
                <TextBlock Text="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed"  x:Name="ResultTxtGlow" Opacity="0" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,4,0,0" noesis:Text.Stroke="#9F000000" noesis:Text.StrokeThickness="2" Style="{StaticResource DieTextStyle}" Foreground="{StaticResource LS_extraspecialTxtColor}" Effect="{StaticResource TextGlow}" />
                <TextBlock Text="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed" x:Name="ResultTxtFail" Opacity="0" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,4,0,0" noesis:Text.Stroke="#FF000000" noesis:Text.StrokeThickness="4" Style="{StaticResource DieTextStyle}" Foreground="{StaticResource LS_alertTxtColor}" />
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Value="False">
                <DataTrigger.Binding>
                    <MultiBinding Converter="{StaticResource EqualConverter}">
                        <Binding Path="DataContext.FinalResult" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type ls:UIWidget}}"/>
                        <Binding Path="Content" RelativeSource="{RelativeSource Mode=Self}"/>
                    </MultiBinding>
                </DataTrigger.Binding>
                <Setter TargetName="ResultTxt" Property="Visibility" Value="Visible" />
                <Setter TargetName="triangle" Property="Visibility" Value="Visible" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DataContext.FinalResult, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Value="0">
                <Setter TargetName="DiceImg" Property="Frame" Value="{Binding Content}"/>
                <Setter TargetName="NumberResultSection" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <MultiDataTrigger >
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding DataContext.CurrentDiceStyle.Icon1, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Value="True"/>
                    <Condition Binding="{Binding DataContext.FinalResult, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Value="1"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="NumberResultSection" Property="Visibility" Value="Collapsed" />
            </MultiDataTrigger>
            <MultiDataTrigger >
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding DataContext.CurrentDiceStyle.Icon20, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Value="True"/>
                    <Condition Binding="{Binding DataContext.FinalResult, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Value="20"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="NumberResultSection" Property="Visibility" Value="Collapsed" />
            </MultiDataTrigger>
            <DataTrigger Binding="{Binding Content, Converter={StaticResource LessThanConverter},ConverterParameter=1}" Value="True">
                <Setter TargetName="ResultTxt" Property="Visibility" Value="Visible" />
            </DataTrigger>
            <Trigger Property="Tag" Value="GlowResult">
                <Trigger.EnterActions>
                    <BeginStoryboard x:Name="GlowResultBS" Storyboard="{StaticResource GlowResultAnim}"/>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <StopStoryboard BeginStoryboardName="GlowResultBS"/>
                </Trigger.ExitActions>
            </Trigger>

            <Trigger Property="Tag" Value="FailResult">
                <Trigger.EnterActions>
                    <BeginStoryboard x:Name="FailResultBS" Storyboard="{StaticResource FailResultAnim}"/>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <StopStoryboard BeginStoryboardName="FailResultBS"/>
                </Trigger.ExitActions>
            </Trigger>

            <EventTrigger RoutedEvent="FrameworkElement.Unloaded">
                <StopStoryboard BeginStoryboardName="GlowResultBS"/>
                <StopStoryboard BeginStoryboardName="FailResultBS"/>
            </EventTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--#endregion-->

    <Storyboard x:Key="DiceAdvantageIntro" BeginTime="0:0:0.4" >
        <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="d20" >
            <SplineThicknessKeyFrame KeyTime="0:0:0.0" Value="0,0,0,0" />
            <SplineThicknessKeyFrame KeyTime="0:0:0.3" Value="0,0,260,0" />

            <EasingThicknessKeyFrame KeyTime="0:0:0.3" Value="0,0,260,0">
                <EasingThicknessKeyFrame.EasingFunction>
                    <CubicEase EasingMode="EaseOut"/>
                </EasingThicknessKeyFrame.EasingFunction>
            </EasingThicknessKeyFrame>
        </ThicknessAnimationUsingKeyFrames>

        <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="d20B" >
            <SplineThicknessKeyFrame KeyTime="0:0:0.0" Value="0,0,0,0" />
            <EasingThicknessKeyFrame KeyTime="0:0:0.3" Value="260,0,0,0">
                <EasingThicknessKeyFrame.EasingFunction>
                    <CubicEase EasingMode="EaseOut"/>
                </EasingThicknessKeyFrame.EasingFunction>
            </EasingThicknessKeyFrame>
        </ThicknessAnimationUsingKeyFrames>
    </Storyboard>

    <!--#region Main Animation Storyboard-->
    <Storyboard x:Key="MainStoryBoardIntro">
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="prompt">
            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
            <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0">
                <EasingDoubleKeyFrame.EasingFunction>
                    <ExponentialEase EasingMode="EaseOut"/>
                </EasingDoubleKeyFrame.EasingFunction>
            </EasingDoubleKeyFrame>
            <EasingDoubleKeyFrame KeyTime="0:0:0.7" Value="1">
                <EasingDoubleKeyFrame.EasingFunction>
                    <ExponentialEase EasingMode="EaseOut"/>
                </EasingDoubleKeyFrame.EasingFunction>
            </EasingDoubleKeyFrame>
        </DoubleAnimationUsingKeyFrames>

        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Tag" Storyboard.TargetName="prompt">
            <DiscreteObjectKeyFrame KeyTime="0" Value=""/>
            <DiscreteObjectKeyFrame KeyTime="0:0:0.4" Value="PlaySound"/>
        </ObjectAnimationUsingKeyFrames>

    </Storyboard>
    <!--#endregion-->

    <!--#region Wait Phase Animation Storyboards-->
    <!--#region SmallRing-->
    <Storyboard x:Key="WaitPhaseSmallRings">
        <DoubleAnimationUsingKeyFrames RepeatBehavior="Forever" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="targetRing">
            <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0"/>
            <EasingDoubleKeyFrame KeyTime="0:0:1.5" Value="-45">
                <EasingDoubleKeyFrame.EasingFunction>
                    <QuarticEase EasingMode="EaseOut"/>
                </EasingDoubleKeyFrame.EasingFunction>
            </EasingDoubleKeyFrame>
            <EasingDoubleKeyFrame KeyTime="0:0:2.5" Value="-45"/>
            <EasingDoubleKeyFrame KeyTime="0:0:3" Value="-90">
                <EasingDoubleKeyFrame.EasingFunction>
                    <QuarticEase EasingMode="EaseOut"/>
                </EasingDoubleKeyFrame.EasingFunction>
            </EasingDoubleKeyFrame>
            <EasingDoubleKeyFrame KeyTime="0:0:4" Value="-90"/>
            <EasingDoubleKeyFrame KeyTime="0:0:4.5" Value="-135">
                <EasingDoubleKeyFrame.EasingFunction>
                    <QuarticEase EasingMode="EaseOut"/>
                </EasingDoubleKeyFrame.EasingFunction>
            </EasingDoubleKeyFrame>
            <EasingDoubleKeyFrame KeyTime="0:0:5.5" Value="-135"/>
            <EasingDoubleKeyFrame KeyTime="0:0:6" Value="-180">
                <EasingDoubleKeyFrame.EasingFunction>
                    <QuarticEase EasingMode="EaseOut"/>
                </EasingDoubleKeyFrame.EasingFunction>
            </EasingDoubleKeyFrame>
            <EasingDoubleKeyFrame KeyTime="0:0:7" Value="-180"/>
            <EasingDoubleKeyFrame KeyTime="0:0:7.5" Value="-225">
                <EasingDoubleKeyFrame.EasingFunction>
                    <QuarticEase EasingMode="EaseOut"/>
                </EasingDoubleKeyFrame.EasingFunction>
            </EasingDoubleKeyFrame>
            <EasingDoubleKeyFrame KeyTime="0:0:8.5" Value="-225"/>
            <EasingDoubleKeyFrame KeyTime="0:0:9" Value="-270">
                <EasingDoubleKeyFrame.EasingFunction>
                    <QuarticEase EasingMode="EaseOut"/>
                </EasingDoubleKeyFrame.EasingFunction>
            </EasingDoubleKeyFrame>
            <EasingDoubleKeyFrame KeyTime="0:0:10" Value="-270"/>
            <EasingDoubleKeyFrame KeyTime="0:0:10.5" Value="-315">
                <EasingDoubleKeyFrame.EasingFunction>
                    <QuarticEase EasingMode="EaseOut"/>
                </EasingDoubleKeyFrame.EasingFunction>
            </EasingDoubleKeyFrame>
            <EasingDoubleKeyFrame KeyTime="0:0:11.5" Value="-315"/>
            <EasingDoubleKeyFrame KeyTime="0:0:12" Value="-360">
                <EasingDoubleKeyFrame.EasingFunction>
                    <QuarticEase EasingMode="EaseOut"/>
                </EasingDoubleKeyFrame.EasingFunction>
            </EasingDoubleKeyFrame>
        </DoubleAnimationUsingKeyFrames>
    </Storyboard>
    <!--#endregion-->
    <!--#region Jump-->
    <ParallelTimeline x:Key="WaitingDieJump">
        <DoubleAnimationUsingKeyFrames BeginTime="0:0:0.5" Duration="0:0:3" RepeatBehavior="Forever" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
            <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
            <EasingDoubleKeyFrame KeyTime="0:0:0.75" Value="1.3">
                <EasingDoubleKeyFrame.EasingFunction>
                    <CubicEase EasingMode="EaseOut"/>
                </EasingDoubleKeyFrame.EasingFunction>
            </EasingDoubleKeyFrame>
            <EasingDoubleKeyFrame KeyTime="0:0:1.25" Value="1">
                <EasingDoubleKeyFrame.EasingFunction>
                    <CubicEase EasingMode="EaseIn"/>
                </EasingDoubleKeyFrame.EasingFunction>
            </EasingDoubleKeyFrame>
            <EasingDoubleKeyFrame KeyTime="0:0:1.5" Value="1.1">
                <EasingDoubleKeyFrame.EasingFunction>
                    <CubicEase EasingMode="EaseOut"/>
                </EasingDoubleKeyFrame.EasingFunction>
            </EasingDoubleKeyFrame>
            <EasingDoubleKeyFrame KeyTime="0:0:1.75" Value="1">
                <EasingDoubleKeyFrame.EasingFunction>
                    <CubicEase EasingMode="EaseIn"/>
                </EasingDoubleKeyFrame.EasingFunction>
            </EasingDoubleKeyFrame>
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames BeginTime="0:0:0.5" Duration="0:0:3" RepeatBehavior="Forever" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
            <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
            <EasingDoubleKeyFrame KeyTime="0:0:0.75" Value="1.3">
                <EasingDoubleKeyFrame.EasingFunction>
                    <CubicEase EasingMode="EaseOut"/>
                </EasingDoubleKeyFrame.EasingFunction>
            </EasingDoubleKeyFrame>
            <EasingDoubleKeyFrame KeyTime="0:0:1.25" Value="1">
                <EasingDoubleKeyFrame.EasingFunction>
                    <CubicEase EasingMode="EaseIn"/>
                </EasingDoubleKeyFrame.EasingFunction>
            </EasingDoubleKeyFrame>
            <EasingDoubleKeyFrame KeyTime="0:0:1.5" Value="1.1">
                <EasingDoubleKeyFrame.EasingFunction>
                    <CubicEase EasingMode="EaseOut"/>
                </EasingDoubleKeyFrame.EasingFunction>
            </EasingDoubleKeyFrame>
            <EasingDoubleKeyFrame KeyTime="0:0:1.75" Value="1">
                <EasingDoubleKeyFrame.EasingFunction>
                    <CubicEase EasingMode="EaseIn"/>
                </EasingDoubleKeyFrame.EasingFunction>
            </EasingDoubleKeyFrame>
        </DoubleAnimationUsingKeyFrames>
        <ObjectAnimationUsingKeyFrames BeginTime="0:0:0.3" Duration="0:0:3" Storyboard.TargetProperty="Visibility" RepeatBehavior="Forever" Storyboard.TargetName="Shine">
            <DiscreteObjectKeyFrame KeyTime="0:0:0.58" Value="{x:Static Visibility.Visible}"/>
            <DiscreteObjectKeyFrame KeyTime="0:0:2.02" Value="{x:Static Visibility.Hidden}"/>
        </ObjectAnimationUsingKeyFrames>
    </ParallelTimeline>
    <Storyboard x:Key="WaitPhaseDieJump">
        <Storyboard Children="{StaticResource WaitingDieJump}" Storyboard.TargetName="d20"/>
        <Storyboard Children="{StaticResource WaitingDieJump}" Storyboard.TargetName="d20B"/>
    </Storyboard>
    <!--#endregion-->

    <!--#region Roll Animation Storyboards-->



    <!--#endregion-->

    <Storyboard x:Key="FailDCAnim">
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.Children[0].ScaleX" Storyboard.TargetName="textBlockTargetNumber">
            <DiscreteDoubleKeyFrame KeyTime="0:0:0.45" Value="1"/>
            <SplineDoubleKeyFrame KeySpline="0.486,0.329 0.681,0.879" KeyTime="0:0:0.7" Value="1.6"/>
            <SplineDoubleKeyFrame KeySpline="0.333,0 0.667,1" KeyTime="0:0:0.9" Value="1.6"/>
            <SplineDoubleKeyFrame KeySpline="0.333,0 0.667,1" KeyTime="0:0:1.8" Value="1.4"/>
            <SplineDoubleKeyFrame KeySpline="0.333,0 0.667,1" KeyTime="0:0:2" Value="1.4"/>
            <SplineDoubleKeyFrame KeySpline="0.333,0 0.667,1" KeyTime="0:0:2.32" Value="1.4"/>
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.Children[0].ScaleY" Storyboard.TargetName="textBlockTargetNumber">
            <DiscreteDoubleKeyFrame KeyTime="0:0:0.45" Value="1"/>
            <SplineDoubleKeyFrame KeySpline="0.486,0.329 0.681,0.879" KeyTime="0:0:0.7" Value="1.6"/>
            <SplineDoubleKeyFrame KeySpline="0.333,0 0.667,1" KeyTime="0:0:0.9" Value="1.6"/>
            <SplineDoubleKeyFrame KeySpline="0.333,0 0.667,1" KeyTime="0:0:1.8" Value="1.4"/>
            <SplineDoubleKeyFrame KeySpline="0.333,0 0.667,1" KeyTime="0:0:2" Value="1.4"/>
            <SplineDoubleKeyFrame KeySpline="0.333,0 0.667,1" KeyTime="0:0:2.32" Value="1.4"/>
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.Children[1].Y" Storyboard.TargetName="textBlockTargetNumber">
            <DiscreteDoubleKeyFrame KeyTime="0:0:0.85" Value="0"/>
            <SplineDoubleKeyFrame KeySpline="0.333,0 0.751,0" KeyTime="0:0:1.83" Value="-20"/>
            <SplineDoubleKeyFrame KeySpline="0.333,0.009 0.833,1" KeyTime="0:0:1.9" Value="190"/>
            <SplineDoubleKeyFrame KeySpline="0.333,0 0.667,0.966" KeyTime="0:0:2.25" Value="-20"/>
            <SplineDoubleKeyFrame KeySpline="0.333,0.091 0.651,0.929" KeyTime="0:0:2.32" Value="0"/>
        </DoubleAnimationUsingKeyFrames>
        <ColorAnimation BeginTime="0:0:1.45" Duration="0:0:0.45" Storyboard.TargetName="textBlockTargetNumber" Storyboard.TargetProperty="Foreground.Color" To="#FFFE2664"/>
    </Storyboard>

    <Storyboard x:Key="FailButtonAnimation" >
        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FailButtons">
            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
        </ObjectAnimationUsingKeyFrames>

        <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="FailButtons">
            <DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
            <DiscreteBooleanKeyFrame KeyTime="0:0:3" Value="True"/>
        </BooleanAnimationUsingKeyFrames>

        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ContinueBtn">
            <DiscreteDoubleKeyFrame KeyTime="0:0:3.58" Value="0"/>
            <SplineDoubleKeyFrame KeySpline="0.333,0 0.667,1" KeyTime="0:0:3.95" Value="1"/>
        </DoubleAnimationUsingKeyFrames>
        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ContinueBtn">
            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
            <DiscreteObjectKeyFrame KeyTime="0:0:3.58" Value="{x:Static Visibility.Visible}"/>
        </ObjectAnimationUsingKeyFrames>

        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="RerollPaneBg">
            <DiscreteDoubleKeyFrame KeyTime="0:0:3.58" Value="0"/>
            <SplineDoubleKeyFrame KeySpline="0.333,0 0.667,1" KeyTime="0:0:3.95" Value="1"/>
        </DoubleAnimationUsingKeyFrames>
        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="RerollPaneBg">
            <DiscreteObjectKeyFrame KeyTime="0:0:3.38" Value="{x:Static Visibility.Visible}"/>
        </ObjectAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.Y" Storyboard.TargetName="RerollPaneBg">
            <DiscreteDoubleKeyFrame KeyTime="0:0:3.58" Value="20"/>
            <SplineDoubleKeyFrame KeySpline="0.333,0 0.667,1" KeyTime="0:0:3.93" Value="0"/>
        </DoubleAnimationUsingKeyFrames>


        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="RerollPaneContent">
            <DiscreteDoubleKeyFrame KeyTime="0:0:3.78" Value="0"/>
            <SplineDoubleKeyFrame KeySpline="0.333,0 0.667,1" KeyTime="0:0:4.15" Value="1"/>
        </DoubleAnimationUsingKeyFrames>
        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="RerollPaneContent">
            <DiscreteObjectKeyFrame KeyTime="0:0:3.58" Value="{x:Static Visibility.Visible}"/>
        </ObjectAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.Y" Storyboard.TargetName="RerollPaneContent">
            <DiscreteDoubleKeyFrame KeyTime="0:0:3.78" Value="20"/>
            <SplineDoubleKeyFrame KeySpline="0.333,0 0.667,1" KeyTime="0:0:4.15" Value="0"/>
        </DoubleAnimationUsingKeyFrames>


        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="TryAgainPaneBg">
            <DiscreteDoubleKeyFrame KeyTime="0:0:3.58" Value="0"/>
            <SplineDoubleKeyFrame KeySpline="0.333,0 0.667,1" KeyTime="0:0:3.95" Value="1"/>
        </DoubleAnimationUsingKeyFrames>
        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="TryAgainPaneBg">
            <DiscreteObjectKeyFrame KeyTime="0:0:3.38" Value="{x:Static Visibility.Visible}"/>
        </ObjectAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.Y" Storyboard.TargetName="TryAgainPaneBg">
            <DiscreteDoubleKeyFrame KeyTime="0:0:3.58" Value="20"/>
            <SplineDoubleKeyFrame KeySpline="0.333,0 0.667,1" KeyTime="0:0:3.93" Value="0"/>
        </DoubleAnimationUsingKeyFrames>

        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="TryAgainPaneContent">
            <DiscreteDoubleKeyFrame KeyTime="0:0:3.78" Value="0"/>
            <SplineDoubleKeyFrame KeySpline="0.333,0 0.667,1" KeyTime="0:0:4.15" Value="1"/>
        </DoubleAnimationUsingKeyFrames>
        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="TryAgainPaneContent">
            <DiscreteObjectKeyFrame KeyTime="0:0:3.58" Value="{x:Static Visibility.Visible}"/>
        </ObjectAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.Y" Storyboard.TargetName="TryAgainPaneContent">
            <DiscreteDoubleKeyFrame KeyTime="0:0:3.78" Value="20"/>
            <SplineDoubleKeyFrame KeySpline="0.333,0 0.667,1" KeyTime="0:0:4.15" Value="0"/>
        </DoubleAnimationUsingKeyFrames>

    </Storyboard>

    <Storyboard  x:Key="BonussesTitle.FadeOut">
        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="BonussesTitle" Storyboard.TargetProperty="(UIElement.Opacity)">
            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
            <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0"/>
        </DoubleAnimationUsingKeyFrames>
    </Storyboard>

    <Storyboard  x:Key="toplist.FadeOut">
        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="BonussesTitle" Storyboard.TargetProperty="(UIElement.Opacity)">

            <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0"/>
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="TopNavigationList" Storyboard.TargetProperty="(UIElement.Opacity)">
            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
            <EasingDoubleKeyFrame KeyTime="0:0:1.5" Value="1"/>
            <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0"/>
        </DoubleAnimationUsingKeyFrames>

        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TopNavigationList" Storyboard.TargetProperty="(UIElement.Visibility)" >
            <DiscreteObjectKeyFrame KeyTime="0:0:2.01" Value="{x:Static Visibility.Collapsed}"/>
        </ObjectAnimationUsingKeyFrames>

    </Storyboard>

    <Storyboard  x:Key="BoostList.FadeOut">
        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="BoostList" Storyboard.TargetProperty="(UIElement.Opacity)">
            <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="0"/>
        </DoubleAnimationUsingKeyFrames>
    </Storyboard>

    <Storyboard x:Key="SuccessButtonAnimation" Storyboard.TargetName="SuccessButtons">
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)">
            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
            <EasingDoubleKeyFrame KeyTime="0:0:1.5" Value="0"/>
            <EasingDoubleKeyFrame KeyTime="0:0:2" Value="1"/>
        </DoubleAnimationUsingKeyFrames>

        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" >
            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
        </ObjectAnimationUsingKeyFrames>

        <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsEnabled)" >
            <DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
            <DiscreteBooleanKeyFrame KeyTime="0:0:2" Value="True"/>
        </BooleanAnimationUsingKeyFrames>

        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" >
            <EasingDoubleKeyFrame KeyTime="0" Value="-14"/>
            <EasingDoubleKeyFrame KeyTime="0:0:1.5" Value="-4"/>
            <EasingDoubleKeyFrame KeyTime="0:0:2" Value="-14"/>
        </DoubleAnimationUsingKeyFrames>
    </Storyboard>
    <!--#endregion-->

    <!--#region Success-->
    <Storyboard x:Key="successFadeD20">
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Dice">
            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
            <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
            <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0">
                <EasingDoubleKeyFrame.EasingFunction>
                    <CircleEase EasingMode="EaseOut"/>
                </EasingDoubleKeyFrame.EasingFunction>
            </EasingDoubleKeyFrame>
        </DoubleAnimationUsingKeyFrames>

        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DieShadowHolder">
            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
            <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
            <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0">
                <EasingDoubleKeyFrame.EasingFunction>
                    <CircleEase EasingMode="EaseOut"/>
                </EasingDoubleKeyFrame.EasingFunction>
            </EasingDoubleKeyFrame>
        </DoubleAnimationUsingKeyFrames>

        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="textBlockResult">
            <DiscreteDoubleKeyFrame KeyTime="0:0:1.07" Value="0"/>
            <LinearDoubleKeyFrame KeyTime="0:0:1.75" Value="1"/>
        </DoubleAnimationUsingKeyFrames>
        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="textBlockResult">
            <DiscreteObjectKeyFrame KeyTime="0:0:1.07" Value="{x:Static Visibility.Visible}"/>
        </ObjectAnimationUsingKeyFrames>
        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PopExplVfx1">
            <DiscreteObjectKeyFrame KeyTime="0:0:0.92" Value="{x:Static Visibility.Visible}"/>
            <DiscreteObjectKeyFrame KeyTime="0:0:1.45" Value="{x:Static Visibility.Hidden}"/>
        </ObjectAnimationUsingKeyFrames>
        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PopExplVfx2">
            <DiscreteObjectKeyFrame KeyTime="0:0:1.07" Value="{x:Static Visibility.Visible}"/>
            <DiscreteObjectKeyFrame KeyTime="0:0:1.6" Value="{x:Static Visibility.Hidden}"/>
        </ObjectAnimationUsingKeyFrames>
        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PopExplVfx3">
            <DiscreteObjectKeyFrame KeyTime="0:0:0.85" Value="{x:Static Visibility.Visible}"/>
            <DiscreteObjectKeyFrame KeyTime="0:0:1.38" Value="{x:Static Visibility.Hidden}"/>
        </ObjectAnimationUsingKeyFrames>
        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PopExplVfx4">
            <DiscreteObjectKeyFrame KeyTime="0:0:0.25" Value="{x:Static Visibility.Visible}"/>
            <DiscreteObjectKeyFrame KeyTime="0:0:0.78" Value="{x:Static Visibility.Hidden}"/>
        </ObjectAnimationUsingKeyFrames>
    </Storyboard>

    <!--#endregion-->




    <Style x:Key="DiceBgStyle" TargetType="Path">
        <Setter Property="Fill" Value="{StaticResource LS_specialTxtColor}" />
    </Style>

    <Style x:Key="bucketEdgeVfx" TargetType="ls:AnimatedImage">
        <Setter Property="Template" Value="{StaticResource BaseAnimatedImage}" />
        <Setter Property="ClipSize" Value="228,212"/>
        <Setter Property="RepeatBehavior" Value="1x"/>
        <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/ActiveRoll/VFX/bucketEdge.png"/>

        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Time" Value="{StaticResource vfxAnimFrameTime}"/>
        <Setter Property="Visibility" Value="Hidden"/>
        <Style.Triggers>
            <Trigger Property="AnimationEnded" Value="True">
                <Setter Property="Visibility" Value="Hidden"/>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="d20StartRoll" TargetType="ls:AnimatedImage">
        <Setter Property="Template" Value="{StaticResource BaseAnimatedImage}" />
        <Setter Property="ClipSize" Value="256,256"/>
        <Setter Property="Width" Value="256"/>
        <Setter Property="Height" Value="256"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="RepeatBehavior" Value="Forever"/>
        <Setter Property="Time" Value="{StaticResource vfxAnimFrameTime}"/>
        <Setter Property="Visibility" Value="Hidden"/>
        <Style.Triggers>
            <Trigger Property="AnimationEnded" Value="True">
                <Setter Property="Visibility" Value="Hidden"/>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="d20EndRoll" TargetType="ls:AnimatedImage">
        <Setter Property="Template" Value="{StaticResource BaseAnimatedImage}" />
        <Setter Property="ClipSize" Value="256,256"/>
        <Setter Property="Width" Value="256"/>
        <Setter Property="Height" Value="256"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="LastFrame" Value="10"/>
        <Setter Property="HoldLastFrame" Value="True"/>
        <Setter Property="RepeatBehavior" Value="1x"/>
        <Setter Property="Tag" Value="1"/>
        <Setter Property="Time" Value="{StaticResource vfxAnimFrameTime}"/>
        <Setter Property="Visibility" Value="Hidden"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=Tag,RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True">
                <Setter Property="Source">
                    <Setter.Value>
                        <MultiBinding Converter="{StaticResource DiceImageSourceConverter}">
                            <Binding Path="DataContext.CurrentDiceStyle" RelativeSource="{RelativeSource AncestorType={x:Type ls:UIWidget}}"/>
                            <Binding Source="/d20_"/>
                            <Binding Path="Tag" RelativeSource="{RelativeSource Mode=Self}"/>
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <Trigger Property="Tag" Value="1">
                <Setter Property="LastFrame" Value="18"/>
            </Trigger>
            <Trigger Property="Tag" Value="2">
                <Setter Property="LastFrame" Value="16"/>
            </Trigger>
            <Trigger Property="Tag" Value="3">
                <Setter Property="LastFrame" Value="12"/>
            </Trigger>
            <Trigger Property="Tag" Value="4">
                <Setter Property="LastFrame" Value="17"/>
            </Trigger>
            <Trigger Property="Tag" Value="5">
                <Setter Property="LastFrame" Value="14"/>
            </Trigger>
            <Trigger Property="Tag" Value="6">
                <Setter Property="LastFrame" Value="18"/>
            </Trigger>
            <Trigger Property="Tag" Value="7">
                <Setter Property="LastFrame" Value="16"/>
            </Trigger>
            <Trigger Property="Tag" Value="8">
                <Setter Property="LastFrame" Value="12"/>
            </Trigger>
            <Trigger Property="Tag" Value="9">
                <Setter Property="LastFrame" Value="17"/>
            </Trigger>
            <Trigger Property="Tag" Value="10">
                <Setter Property="LastFrame" Value="14"/>
            </Trigger>
            <Trigger Property="Tag" Value="11">
                <Setter Property="LastFrame" Value="18"/>
            </Trigger>
            <Trigger Property="Tag" Value="12">
                <Setter Property="LastFrame" Value="16"/>
            </Trigger>
            <Trigger Property="Tag" Value="13">
                <Setter Property="LastFrame" Value="12"/>
            </Trigger>
            <Trigger Property="Tag" Value="14">
                <Setter Property="LastFrame" Value="17"/>
            </Trigger>
            <Trigger Property="Tag" Value="15">
                <Setter Property="LastFrame" Value="14"/>
            </Trigger>
            <Trigger Property="Tag" Value="16">
                <Setter Property="LastFrame" Value="18"/>
            </Trigger>
            <Trigger Property="Tag" Value="17">
                <Setter Property="LastFrame" Value="16"/>
            </Trigger>
            <Trigger Property="Tag" Value="18">
                <Setter Property="LastFrame" Value="12"/>
            </Trigger>
            <Trigger Property="Tag" Value="19">
                <Setter Property="LastFrame" Value="17"/>
            </Trigger>
            <Trigger Property="Tag" Value="20">
                <Setter Property="LastFrame" Value="14"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="d20ExplosionVfx" TargetType="ls:AnimatedImage">
        <Setter Property="Template" Value="{StaticResource BaseAnimatedImage}" />
        <Setter Property="ClipSize" Value="178,184"/>
        <Setter Property="Margin" Value="-20"/>
        <Setter Property="RepeatBehavior" Value="Forever"/>
        <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/ActiveRoll/VFX/d20Explosion.png"/>

        <Setter Property="Time" Value="{StaticResource vfxAnimFrameTime}"/>
        <Setter Property="Visibility" Value="Hidden"/>
        <Style.Triggers>
            <Trigger Property="AnimationEnded" Value="True">
                <Setter Property="Visibility" Value="Hidden"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="popExplosionVfx" TargetType="ls:AnimatedImage">
        <Setter Property="Template" Value="{StaticResource BaseAnimatedImage}" />
        <Setter Property="ClipSize" Value="216,240"/>
        <Setter Property="RepeatBehavior" Value="1x"/>
        <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/ActiveRoll/VFX/popExplosion.png"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Time" Value="{StaticResource vfxAnimFrameTime}"/>
        <Setter Property="Visibility" Value="Hidden"/>
        <Style.Triggers>
            <Trigger Property="AnimationEnded" Value="True">
                <Setter Property="Visibility" Value="Hidden"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="trailVfx" TargetType="ls:AnimatedImage">
        <Setter Property="Template" Value="{StaticResource BaseAnimatedImage}" />
        <Setter Property="ClipSize" Value="232,520"/>
        <Setter Property="RepeatBehavior" Value="1x"/>
        <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/ActiveRoll/VFX/trail.png"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Time" Value="{StaticResource vfxAnimFrameTime}"/>
        <Setter Property="Visibility" Value="Hidden"/>
        <Style.Triggers>
            <Trigger Property="ls:AnimatedImage.AnimationEnded" Value="True">
                <Setter Property="Visibility" Value="Hidden"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <System:Int32 x:Key="TUT_RerollID">14</System:Int32>


    <ControlTemplate x:Key="TargettedEffect" TargetType="ls:LSLineControl">

        <Grid >
            <Border x:Name="AnimationVfxHolder" HorizontalAlignment="Center" BorderThickness="4"  Width="300" Margin="-150,0,0,0">
                <b:Interaction.Triggers>
                    <b:DataTrigger Binding="{Binding Path=(ls:SequenceBehavior.PlayElement), RelativeSource={RelativeSource AncestorType=ls:OverlayConnection}}" Value="True">
                        <b:ControlStoryboardAction ControlStoryboardOption="Play">
                            <b:ControlStoryboardAction.Storyboard>
                                <Storyboard>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="AnimationVfxHolder" Storyboard.TargetProperty="Tag">
                                        <DiscreteObjectKeyFrame KeyTime="{StaticResource vfxAnimTrailStartTime}" Value="StartTrail"/>
                                        <DiscreteObjectKeyFrame KeyTime="{StaticResource vfxAnimTextATime2}" Value="CountResult"/>
                                    </ObjectAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="modVal">
                                        <DiscreteDoubleKeyFrame KeyTime="{StaticResource vfxAnimTextStartTime}" Value="1"/>
                                        <SplineDoubleKeyFrame KeySpline="0.333,0 0.667,1" KeyTime="{StaticResource vfxAnimTextATime1}" Value="1"/>
                                        <SplineDoubleKeyFrame KeySpline="0.333,0 0.833,1" KeyTime="{StaticResource vfxAnimTextATime2}" Value="0"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="modVal">
                                        <DiscreteObjectKeyFrame KeyTime="{StaticResource vfxAnimTextStartTime}" Value="{x:Static Visibility.Visible}"/>
                                        <DiscreteObjectKeyFrame KeyTime="{StaticResource vfxAnimTextStopTime}" Value="{x:Static Visibility.Hidden}"/>
                                    </ObjectAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].ScaleX" Storyboard.TargetName="modVal">
                                        <DiscreteDoubleKeyFrame KeyTime="{StaticResource vfxAnimTextStartTime}" Value="0.4"/>
                                        <SplineDoubleKeyFrame KeySpline="0.167,0.167 0.667,1" KeyTime="{StaticResource vfxAnimTextScaleTime1}" Value="1.5"/>
                                        <LinearDoubleKeyFrame KeyTime="{StaticResource vfxAnimTextScaleTime2}" Value="1"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].ScaleY" Storyboard.TargetName="modVal">
                                        <DiscreteDoubleKeyFrame KeyTime="{StaticResource vfxAnimTextStartTime}" Value="0.4"/>
                                        <SplineDoubleKeyFrame KeySpline="0.167,0.167 0.667,1" KeyTime="{StaticResource vfxAnimTextScaleTime1}" Value="1.5"/>
                                        <LinearDoubleKeyFrame KeyTime="{StaticResource vfxAnimTextScaleTime2}" Value="1"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Tag" Storyboard.TargetName="modVal">
                                        <DiscreteObjectKeyFrame KeyTime="{StaticResource vfxAnimTextScaleTime1}" Value="PlaySound"/>
                                    </ObjectAnimationUsingKeyFrames>

                                    <DoubleAnimationUsingKeyFrames  Storyboard.TargetName="modVal" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[1].(TranslateTransform.Y)">
                                        <LinearDoubleKeyFrame KeyTime="{StaticResource vfxAnimTextStartTime}" Value="{Binding ActualHeight,RelativeSource={RelativeSource AncestorType=ls:LSLineControl}}"/>
                                        <LinearDoubleKeyFrame KeyTime="{StaticResource vfxAnimTextPosTime1}" Value="{Binding ActualHeight,RelativeSource={RelativeSource AncestorType=ls:LSLineControl}}"/>
                                        <SplineDoubleKeyFrame KeySpline="0.03,0.138 0.97,0.862" KeyTime="{StaticResource vfxAnimTextPosTime2}" Value="0"/>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </b:ControlStoryboardAction.Storyboard>
                        </b:ControlStoryboardAction>

                    </b:DataTrigger>

                    <b:DataTrigger Binding="{Binding Path=Tag,ElementName=AnimationVfxHolder}" Value="CountResult">
                        <b:InvokeCommandAction Command="{Binding DataContext.AddToResultNumberCommand,RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="{Binding Path=Source.DataContext,RelativeSource={RelativeSource AncestorType=ls:OverlayConnection}}"/>
                        <b:ChangePropertyAction TargetObject="{Binding Path=Source,RelativeSource={RelativeSource AncestorType=ls:OverlayConnection}}" PropertyName="IsEnabled" Value="False"/>
                        <b:InvokeCommandAction Command="{Binding DataContext.PlaySoundEventOnElement, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}">
                            <b:InvokeCommandAction.CommandParameter>
                                <MultiBinding Converter="{StaticResource PassThroughConverter}">
                                    <Binding Path="Source" Mode="OneWay" RelativeSource="{RelativeSource AncestorType=ls:OverlayConnection}"/>
                                    <Binding Source="UI_HUD_DiceRoll_Bonus_NumberAdded"/>
                                </MultiBinding>
                            </b:InvokeCommandAction.CommandParameter>
                        </b:InvokeCommandAction>
                    </b:DataTrigger>
                    <b:DataTrigger Binding="{Binding Path=Tag,ElementName=AnimationVfxHolder}" Value="StartTrail">
                        <b:ChangePropertyAction TargetName="trail" PropertyName="Visibility" Value="Visible"/>
                    </b:DataTrigger>
                    <b:DataTrigger Binding="{Binding Path=(ls:AnimatedImage.AnimationEnded),ElementName=trail}" Value="True">
                        <b:ChangePropertyAction TargetName="trail" PropertyName="Visibility" Value="Hidden"/>
                    </b:DataTrigger>
                </b:Interaction.Triggers>
                <Grid x:Name="holder">
                    <ls:AnimatedImage Style="{StaticResource trailVfx}" x:Name="trail" VerticalAlignment="Bottom" />
                    <Grid x:Name="modVal" VerticalAlignment="Top" RenderTransformOrigin="0.5,0" Opacity="0" Visibility="Hidden">
                        <Grid.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleX="0.4" ScaleY="0.4" />
                                <TranslateTransform Y="0"/>
                            </TransformGroup>
                        </Grid.RenderTransform>
                        <TextBlock x:Name="modValText" FontSize="{StaticResource GiganticFontSize}" Effect="{StaticResource TextGlow}" Foreground="{StaticResource LS_specialTxtColor}" RenderTransformOrigin="0.5,0.5" TextAlignment="Center" Text="{Binding Path=Source.DataContext.MinBonusValue,RelativeSource={RelativeSource AncestorType=ls:OverlayConnection}, StringFormat={}{0:+#;-#;+0}}" Margin="0,-40,20,0">
                            <TextBlock.RenderTransform>
                                <TransformGroup>
                                    <RotateTransform Angle="{Binding Path=(UIElement.RenderTransform).(TransformGroup.Children)[0].(RotateTransform.Angle) , RelativeSource={RelativeSource AncestorType=ls:LSLineControl}, Converter={StaticResource MultiplierConverter },ConverterParameter=-1}"/>
                                </TransformGroup>
                            </TextBlock.RenderTransform>
                        </TextBlock>
                        <b:Interaction.Triggers>
                            <b:DataTrigger Binding="{Binding Tag, ElementName=modVal}" Value="PlaySound">
                                <b:InvokeCommandAction Command="{Binding DataContext.PlaySoundEventOnElement, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}">
                                    <b:InvokeCommandAction.CommandParameter>
                                        <MultiBinding Converter="{StaticResource PassThroughConverter}">
                                            <Binding Path="Source" Mode="OneWay" RelativeSource="{RelativeSource AncestorType=ls:OverlayConnection}"/>
                                            <Binding Source="UI_HUD_DiceRoll_Bonus_NumberGlow"/>
                                        </MultiBinding>
                                    </b:InvokeCommandAction.CommandParameter>
                                </b:InvokeCommandAction>
                            </b:DataTrigger>
                        </b:Interaction.Triggers>
                    </Grid>

                </Grid>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=Source.DataContext,RelativeSource={RelativeSource AncestorType=ls:OverlayConnection}, Converter={StaticResource TypeConverter}}" Value="ls.VMBoost">
                <Setter TargetName="modValText" Property="Text" Value="{Binding Path=Source.DataContext.Value,RelativeSource={RelativeSource AncestorType=ls:OverlayConnection}, StringFormat={}{0:+#;-#;+0}}"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="TargettedDiceEffect" TargetType="ls:LSLineControl">
        <Grid >
            <Border x:Name="AnimationVfxHolder" HorizontalAlignment="Center"  Width="300"  Margin="-150,0,0,0">
                <b:Interaction.Triggers>
                    <b:DataTrigger Binding="{Binding Path=(ls:SequenceBehavior.PlayElement), RelativeSource={RelativeSource AncestorType=ls:OverlayConnection}}" Value="True">
                        <b:ControlStoryboardAction ControlStoryboardOption="Play">
                            <b:ControlStoryboardAction.Storyboard>
                                <Storyboard>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="AnimationVfxHolder" Storyboard.TargetProperty="Tag">
                                        <DiscreteObjectKeyFrame KeyTime="{StaticResource vfxAnimTextPosTime1}" Value="StartTrail"/>
                                        <DiscreteObjectKeyFrame KeyTime="{StaticResource vfxAnimTextATime2}" Value="CountResult"/>
                                    </ObjectAnimationUsingKeyFrames>

                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="modVal">
                                        <DiscreteObjectKeyFrame KeyTime="{StaticResource vfxAnimKeyTime1}" Value="{x:Static Visibility.Visible}"/>
                                        <!--<DiscreteObjectKeyFrame KeyTime="{StaticResource vfxAnimTextStopTime}" Value="{x:Static Visibility.Hidden}"/>-->
                                    </ObjectAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].ScaleX" Storyboard.TargetName="DieAnim">
                                        <DiscreteDoubleKeyFrame KeyTime="{StaticResource vfxAnimKeyTime1}" Value="0.4"/>
                                        <LinearDoubleKeyFrame KeyTime="{StaticResource vfxAnimTextScaleTime1}" Value="1.5"/>
                                        <LinearDoubleKeyFrame KeyTime="{StaticResource vfxAnimTextScaleTime2}" Value="1"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].ScaleY" Storyboard.TargetName="DieAnim">
                                        <DiscreteDoubleKeyFrame KeyTime="{StaticResource vfxAnimKeyTime1}" Value="0.4"/>
                                        <LinearDoubleKeyFrame KeyTime="{StaticResource vfxAnimTextScaleTime1}" Value="1.5"/>
                                        <LinearDoubleKeyFrame KeyTime="{StaticResource vfxAnimTextScaleTime2}" Value="1"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Tag" Storyboard.TargetName="DieAnim">
                                        <DiscreteObjectKeyFrame KeyTime="{StaticResource vfxAnimKeyTime1}" Value="PlaySound"/>
                                    </ObjectAnimationUsingKeyFrames>

                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DieAnim">
                                        <DiscreteDoubleKeyFrame KeyTime="{StaticResource vfxAnimKeyTime1}" Value="1"/>
                                        <SplineDoubleKeyFrame KeySpline="0.333,0 0.667,1" KeyTime="{StaticResource vfxAnimTextPosTime2}" Value="1"/>
                                        <SplineDoubleKeyFrame KeySpline="0.333,0 0.833,1" KeyTime="{StaticResource vfxAnimTextStopTime}" Value="0"/>
                                    </DoubleAnimationUsingKeyFrames>

                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" BeginTime="0:0:0.1" Storyboard.TargetName="modValText">
                                        <DiscreteDoubleKeyFrame KeyTime="{StaticResource vfxAnimKeyTime1}" Value="0"/>
                                        <SplineDoubleKeyFrame KeySpline="0.333,0 0.667,1" KeyTime="{StaticResource vfxAnimDiceTextATime1}" Value="1"/>
                                        <SplineDoubleKeyFrame KeySpline="0.333,0 0.833,1" KeyTime="{StaticResource vfxAnimDiceTextATime2}" Value="0"/>
                                    </DoubleAnimationUsingKeyFrames>

                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].ScaleX" Storyboard.TargetName="modVal">
                                        <DiscreteDoubleKeyFrame KeyTime="{StaticResource vfxAnimKeyTime1}" Value="0.4"/>
                                        <LinearDoubleKeyFrame KeyTime="{StaticResource vfxAnimTextScaleTime1}" Value="1.5"/>
                                        <LinearDoubleKeyFrame KeyTime="{StaticResource vfxAnimTextScaleTime2}" Value="1"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].ScaleY" Storyboard.TargetName="modVal">
                                        <DiscreteDoubleKeyFrame KeyTime="{StaticResource vfxAnimKeyTime1}" Value="0.4"/>
                                        <LinearDoubleKeyFrame KeyTime="{StaticResource vfxAnimTextScaleTime1}" Value="1.5"/>
                                        <LinearDoubleKeyFrame KeyTime="{StaticResource vfxAnimTextScaleTime2}" Value="1"/>
                                    </DoubleAnimationUsingKeyFrames>

                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Tag" BeginTime="0:0:0.1" Storyboard.TargetName="modValText">
                                        <DiscreteObjectKeyFrame KeyTime="{StaticResource vfxAnimTextScaleTime1}" Value="PlaySound"/>
                                    </ObjectAnimationUsingKeyFrames>

                                    <DoubleAnimation From="0" To="360" Duration="0:0:0.6" RepeatBehavior="2x" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="DieAnim"/>


                                    <DoubleAnimationUsingKeyFrames BeginTime="0:0:0.2" Storyboard.TargetName="modVal" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[1].(TranslateTransform.Y)">
                                        <LinearDoubleKeyFrame KeyTime="{StaticResource vfxAnimKeyTime1}" Value="{Binding ActualHeight,RelativeSource={RelativeSource AncestorType=ls:LSLineControl}}"/>
                                        <LinearDoubleKeyFrame KeyTime="{StaticResource vfxAnimTextPosTime1}" Value="{Binding ActualHeight,RelativeSource={RelativeSource AncestorType=ls:LSLineControl}}"/>
                                        <SplineDoubleKeyFrame KeySpline="0.333,0 0.64,0.038" KeyTime="{StaticResource vfxAnimTextPosTime2}" Value="0"/>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </b:ControlStoryboardAction.Storyboard>
                        </b:ControlStoryboardAction>

                    </b:DataTrigger>

                    <b:DataTrigger Binding="{Binding Path=Tag,ElementName=AnimationVfxHolder}" Value="CountResult">
                        <b:InvokeCommandAction Command="{Binding DataContext.AddToResultNumberCommand,RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="{Binding Path=Source.DataContext,RelativeSource={RelativeSource AncestorType=ls:OverlayConnection}}"/>
                        <b:ChangePropertyAction TargetObject="{Binding Path=Source,RelativeSource={RelativeSource AncestorType=ls:OverlayConnection}}" PropertyName="IsEnabled" Value="False"/>
                        <b:InvokeCommandAction Command="{Binding DataContext.PlaySoundEventOnElement, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}">
                            <b:InvokeCommandAction.CommandParameter>
                                <MultiBinding Converter="{StaticResource PassThroughConverter}">
                                    <Binding Path="Source" Mode="OneWay" RelativeSource="{RelativeSource AncestorType=ls:OverlayConnection}"/>
                                    <Binding Source="UI_HUD_DiceRoll_Bonus_NumberAdded"/>
                                </MultiBinding>
                            </b:InvokeCommandAction.CommandParameter>
                        </b:InvokeCommandAction>
                    </b:DataTrigger>
                    <b:DataTrigger Binding="{Binding Path=Tag,ElementName=AnimationVfxHolder}" Value="StartTrail">
                        <b:ChangePropertyAction TargetName="trail" PropertyName="Visibility" Value="Visible"/>
                    </b:DataTrigger>
                    <b:DataTrigger Binding="{Binding Path=(ls:AnimatedImage.AnimationEnded),ElementName=trail}" Value="True">
                        <b:ChangePropertyAction TargetName="trail" PropertyName="Visibility" Value="Hidden"/>
                    </b:DataTrigger>
                </b:Interaction.Triggers>
                <Grid x:Name="holder" Background="Transparent">
                    <ls:AnimatedImage Style="{StaticResource trailVfx}" x:Name="trail" VerticalAlignment="Bottom" />
                    <Control Opacity="0" x:Name="DieAnim" VerticalAlignment="Top" Margin="0,-68,0,0"  DataContext="{Binding Path=Source.DataContext,RelativeSource={RelativeSource AncestorType=ls:OverlayConnection}}" RenderTransformOrigin="0.5,0.5" Template="{StaticResource DiceImage}">
                        <Control.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleX="0.4" ScaleY="0.4"/>
                                <SkewTransform/>
                                <RotateTransform/>
                                <TranslateTransform  Y="{Binding ActualHeight,RelativeSource={RelativeSource AncestorType=ls:LSLineControl}}"/>
                            </TransformGroup>
                        </Control.RenderTransform>
                        <Control.Effect>
                            <DropShadowEffect ShadowDepth="0" Color="{StaticResource specialColor}" Opacity="2" BlurRadius="16"/>
                        </Control.Effect>
                        <b:Interaction.Triggers>
                            <b:DataTrigger Binding="{Binding Tag, ElementName=DieAnim}" Value="PlaySound">
                                <b:InvokeCommandAction Command="{Binding DataContext.PlaySoundEventOnElement, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}">
                                    <b:InvokeCommandAction.CommandParameter>
                                        <MultiBinding Converter="{StaticResource PassThroughConverter}">
                                            <Binding Path="Source" Mode="OneWay" RelativeSource="{RelativeSource AncestorType=ls:OverlayConnection}"/>
                                            <Binding Source="UI_HUD_DiceRoll_Bonus_DiceRoll"/>
                                        </MultiBinding>
                                    </b:InvokeCommandAction.CommandParameter>
                                </b:InvokeCommandAction>
                            </b:DataTrigger>
                        </b:Interaction.Triggers>
                    </Control>

                    <Grid x:Name="modVal"  RenderTransformOrigin="0.5,0" Opacity="1" Visibility="Hidden">
                        <Grid.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform  />
                                <TranslateTransform Y="0"/>
                            </TransformGroup>
                        </Grid.RenderTransform>

                        <TextBlock x:Name="modValText" VerticalAlignment="Top"  FontSize="{StaticResource GiganticFontSize}" Opacity="0" Foreground="{StaticResource LS_specialTxtColor}" RenderTransformOrigin="0.5,0.5" TextAlignment="Center" Text="{Binding Path=Source.DataContext.MinBonusValue,RelativeSource={RelativeSource AncestorType=ls:OverlayConnection}, StringFormat={}{0:+#;-#;+0}}" Margin="0,-40,20,0" Effect="{StaticResource TextGlow}">
                            <TextBlock.RenderTransform>
                                <TransformGroup>
                                    <RotateTransform Angle="{Binding Path=(UIElement.RenderTransform).(TransformGroup.Children)[0].(RotateTransform.Angle) , RelativeSource={RelativeSource AncestorType=ls:LSLineControl}, Converter={StaticResource MultiplierConverter },ConverterParameter=-1}"/>
                                </TransformGroup>
                            </TextBlock.RenderTransform>
                        </TextBlock>
                        <b:Interaction.Triggers>
                            <b:DataTrigger Binding="{Binding Tag, ElementName=modValText}" Value="PlaySound">
                                <b:InvokeCommandAction Command="{Binding DataContext.PlaySoundEventOnElement, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}">
                                    <b:InvokeCommandAction.CommandParameter>
                                        <MultiBinding Converter="{StaticResource PassThroughConverter}">
                                            <Binding Path="Source" Mode="OneWay" RelativeSource="{RelativeSource AncestorType=ls:OverlayConnection}"/>
                                            <Binding Source="UI_HUD_DiceRoll_Bonus_NumberGlow"/>
                                        </MultiBinding>
                                    </b:InvokeCommandAction.CommandParameter>
                                </b:InvokeCommandAction>
                            </b:DataTrigger>
                        </b:Interaction.Triggers>
                    </Grid>
                </Grid>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=Source.DataContext,RelativeSource={RelativeSource AncestorType=ls:OverlayConnection}, Converter={StaticResource TypeConverter}}" Value="ls.VMBoost">
                <Setter TargetName="modValText" Property="Text" Value="{Binding Path=Source.DataContext.Value,RelativeSource={RelativeSource AncestorType=ls:OverlayConnection}, StringFormat={}{0:+#;-#;+0}}"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style TargetType="ls:OverlayConnection">
        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate TargetType="ls:OverlayConnection">
                    <Grid >
                        <Grid x:Name="ElementOverlay" VerticalAlignment="Top" HorizontalAlignment="Left" Width="230" >
                            <b:Interaction.Triggers>
                                <b:DataTrigger Binding="{Binding Path=(ls:SequenceBehavior.PlayElement), RelativeSource={RelativeSource AncestorType=ls:OverlayConnection}}" Value="True">
                                    <b:ControlStoryboardAction ControlStoryboardOption="Play">
                                        <b:ControlStoryboardAction.Storyboard>
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="bucketLeft">
                                                    <DiscreteObjectKeyFrame KeyTime="{StaticResource vfxBucketTime1}" Value="{x:Static Visibility.Visible}"/>
                                                    <DiscreteObjectKeyFrame KeyTime="{StaticResource vfxBucketTime2}" Value="{x:Static Visibility.Hidden}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="bucketRight">
                                                    <DiscreteObjectKeyFrame KeyTime="{StaticResource vfxBucketTime1}" Value="{x:Static Visibility.Visible}"/>
                                                    <DiscreteObjectKeyFrame KeyTime="{StaticResource vfxBucketTime2}" Value="{x:Static Visibility.Hidden}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="pop">
                                                    <DiscreteObjectKeyFrame KeyTime="{StaticResource vfxPopTime1}" Value="{x:Static Visibility.Visible}"/>
                                                    <DiscreteObjectKeyFrame KeyTime="{StaticResource vfxPopTime2}" Value="{x:Static Visibility.Hidden}"/>
                                                </ObjectAnimationUsingKeyFrames>

                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ElementOverlay" Storyboard.TargetProperty="Tag">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.0" Value="BlinkHl"/>
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.07" Value="PlayBonusTypeSound"/>
                                                    <DiscreteObjectKeyFrame KeyTime="{StaticResource vfxAnimTextATime2}" Value="SetTargetAngle"/>
                                                    <DiscreteObjectKeyFrame KeyTime="{StaticResource vfxAnimTextATime2B}" Value="SetTargetAngle2"/>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </b:ControlStoryboardAction.Storyboard>
                                    </b:ControlStoryboardAction>

                                </b:DataTrigger>
                                <b:DataTrigger Binding="{Binding ElementName=ElementOverlay, Path=Tag}" Value="PlayBonusTypeSound">
                                    <b:Interaction.Behaviors>
                                        <b:ConditionBehavior>
                                            <b:ConditionalExpression>
                                                <b:ComparisonCondition LeftOperand="{Binding Path=Source.DataContext.Value,RelativeSource={RelativeSource AncestorType=ls:OverlayConnection}}" Operator="GreaterThanOrEqual" RightOperand="0"/>
                                            </b:ConditionalExpression>
                                        </b:ConditionBehavior>
                                    </b:Interaction.Behaviors>
                                    <ls:LSPlaySound Sound="UI_HUD_DiceRoll_BonusType_SetPositive"/>
                                </b:DataTrigger>
                                <b:DataTrigger Binding="{Binding ElementName=ElementOverlay, Path=Tag}" Value="PlayBonusTypeSound">
                                    <b:Interaction.Behaviors>
                                        <b:ConditionBehavior>
                                            <b:ConditionalExpression>
                                                <b:ComparisonCondition LeftOperand="{Binding Path=Source.DataContext.Value,RelativeSource={RelativeSource AncestorType=ls:OverlayConnection}}" Operator="LessThan" RightOperand="0"/>
                                            </b:ConditionalExpression>
                                        </b:ConditionBehavior>
                                    </b:Interaction.Behaviors>
                                    <ls:LSPlaySound Sound="UI_HUD_DiceRoll_BonusType_SetNegative"/>
                                </b:DataTrigger>
                                <b:DataTrigger Binding="{Binding ElementName=ElementOverlay, Path=Tag}" Value="BlinkHl">
                                    <b:ChangePropertyAction TargetObject="{Binding Path=Source,RelativeSource={RelativeSource AncestorType=ls:OverlayConnection}}" PropertyName="Tag" Value="BlinkHl"/>
                                </b:DataTrigger>

                                <b:DataTrigger Binding="{Binding ElementName=ElementOverlay, Path=Tag}" Value="SetTargetAngle">
                                    <b:Interaction.Behaviors>
                                        <b:ConditionBehavior>
                                            <b:ConditionalExpression>
                                                <b:ComparisonCondition LeftOperand="{Binding ElementName=LineEffect,Path=Tag}" Operator="Equal" RightOperand="IsFlatBonus"/>
                                            </b:ConditionalExpression>
                                        </b:ConditionBehavior>
                                    </b:Interaction.Behaviors>
                                    <b:ChangePropertyAction TargetObject="{Binding Path=Target,RelativeSource={RelativeSource AncestorType=ls:OverlayConnection}}" PropertyName="Tag" Value="{Binding Path=(UIElement.RenderTransform).(TransformGroup.Children)[0].(RotateTransform.Angle),ElementName=LineEffect}"/>
                                </b:DataTrigger>


                                <b:DataTrigger Binding="{Binding ElementName=ElementOverlay, Path=Tag}" Value="SetTargetAngle2">
                                    <b:Interaction.Behaviors>
                                        <b:ConditionBehavior>
                                            <b:ConditionalExpression>
                                                <b:ComparisonCondition LeftOperand="{Binding ElementName=LineEffect,Path=Tag}" Operator="Equal" RightOperand="IsDieRollBonus"/>
                                            </b:ConditionalExpression>
                                        </b:ConditionBehavior>
                                    </b:Interaction.Behaviors>
                                    <b:ChangePropertyAction TargetObject="{Binding Path=Target,RelativeSource={RelativeSource AncestorType=ls:OverlayConnection}}" PropertyName="Tag" Value="{Binding Path=(UIElement.RenderTransform).(TransformGroup.Children)[0].(RotateTransform.Angle),ElementName=LineEffect}"/>
                                </b:DataTrigger>
                            </b:Interaction.Triggers>
                            <Grid.RenderTransform>
                                <TranslateTransform X="{Binding Path=SourcePos.x,RelativeSource={RelativeSource AncestorType=ls:OverlayConnection}}" Y="{Binding Path=SourcePos.y,RelativeSource={RelativeSource AncestorType=ls:OverlayConnection}}"/>
                            </Grid.RenderTransform>
                            <ls:AnimatedImage Style="{StaticResource bucketEdgeVfx}" HorizontalAlignment="Left" x:Name="bucketLeft" Margin="-72,-100,0,0"/>
                            <ls:AnimatedImage Style="{StaticResource bucketEdgeVfx}" HorizontalAlignment="Right" x:Name="bucketRight" Margin="0,-100,-72,0" RenderTransformOrigin="0.5,0">
                                <ls:AnimatedImage.RenderTransform>
                                    <ScaleTransform ScaleX="-1"/>
                                </ls:AnimatedImage.RenderTransform>
                            </ls:AnimatedImage>

                            <ls:AnimatedImage Style="{StaticResource popExplosionVfx}" x:Name="pop" Margin="0,-160,0,0"/>
                        </Grid>
                        <ls:LSLineControl x:Name="LineEffect" Tag="IsFlatBonus" Template="{StaticResource TargettedEffect}" X1="{Binding Path=TargetCenterPos.x,RelativeSource={RelativeSource AncestorType=ls:OverlayConnection}}" Y1="{Binding Path=TargetPos.y,RelativeSource={RelativeSource AncestorType=ls:OverlayConnection}}" X2="{Binding Path=SourceCenterPos.x,RelativeSource={RelativeSource AncestorType=ls:OverlayConnection}}" Y2="{Binding Path=SourcePos.y,RelativeSource={RelativeSource AncestorType=ls:OverlayConnection}}">

                        </ls:LSLineControl>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=Source.DataContext.DiceTypeSet.Amount, RelativeSource={RelativeSource Mode=Self},Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True">
                            <Setter TargetName="LineEffect" Property="Template" Value="{StaticResource TargettedDiceEffect}" />
                            <Setter TargetName="LineEffect" Property="Tag" Value="IsDieRollBonus" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=Source.DataContext.IsAdvantage,RelativeSource={RelativeSource Mode=Self}}" Value="True">
                <Setter Property="Visibility" Value="Hidden"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Source.DataContext.IsDisabled,RelativeSource={RelativeSource Mode=Self}}" Value="True">
                <Setter Property="Visibility" Value="Hidden"/>
            </DataTrigger>
        </Style.Triggers>

    </Style>

    <Style TargetType="ls:OverlayConnector">
        <Setter Property="SourceOffset" Value="0,54"/>
        <Setter Property="TargetOffset" Value="0,0"/>
        <Setter Property="Target" Value="{Binding ElementName=AnimTargetPlaceHolder }"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <Grid/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="ResultCountTemplate" TargetType="ContentControl">
        <ControlTemplate.Resources>

            <Storyboard x:Key="TagSettingStoryboard" >
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Tag">
                    <DiscreteObjectKeyFrame KeyTime="0" Value="AnimPlaying"/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:1.0" Value="AnimDone"/>
                </ObjectAnimationUsingKeyFrames>
            </Storyboard>
        </ControlTemplate.Resources>
        <Grid x:Name="ResultHolder" IsHitTestVisible="False">

            <Canvas x:Name="DieShadow" >
                <Canvas.RenderTransform>
                    <TranslateTransform X="136" Y="138"/>
                </Canvas.RenderTransform>
                <Path Style="{StaticResource DieShadowStyle}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
            </Canvas>

            <ContentPresenter x:Name="AnimTargetPlaceHolderInt" HorizontalAlignment="Center" VerticalAlignment="Center"/>
            <Border RenderTransformOrigin="0.5,0.5">
                <Border.RenderTransform>
                    <TransformGroup>
                        <RotateTransform x:Name="DieBaseRot" Angle="{Binding Path=Content.Tag,ElementName=AnimTargetPlaceHolderInt,Converter={StaticResource MultiplierConverter},ConverterParameter=1}"/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Border.RenderTransform>

                <Border x:Name="DiceWRotationFrame" RenderTransformOrigin="0.5,0.5">
                    <Border.RenderTransform>
                        <TransformGroup>
                            <RotateTransform x:Name="DieBaseCounterRot" Angle="{Binding Path=Content.Tag,ElementName=AnimTargetPlaceHolderInt,Converter={StaticResource MultiplierConverter},ConverterParameter=-1}"/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </Border.RenderTransform>

                    <ContentControl x:Name="Dice" RenderTransformOrigin="0.5,0.5" Template="{StaticResource DiceTemplate}" Content="{Binding ResultNumber }" Tag="{Binding FinalResult}" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,0,0,4">
                        <ContentControl.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform/>
                                <RotateTransform CenterX="222" CenterY="235"/>
                                <TranslateTransform />
                            </TransformGroup>
                        </ContentControl.RenderTransform>
                    </ContentControl>
                </Border>
            </Border>


            <ls:AnimatedImage x:Name="Shine" Style="{StaticResource ShineStyle}" VerticalAlignment="Center" HorizontalAlignment="Center" Visibility="Hidden"  Margin="0,0,0,4"/>


            <Grid x:Name="TargetOverlay" HorizontalAlignment="Center" VerticalAlignment="Center" >
                <Grid.Resources>
                    <KeyTime x:Key="vfxD20Time_1A">0:0:0.20</KeyTime>
                    <KeyTime x:Key="vfxD20Time_1B">0:0:1.39</KeyTime>

                    <KeyTime x:Key="vfxD20ExpTimeA">0:0:0.07</KeyTime>
                    <KeyTime x:Key="vfxD20ExpTimeB">0:0:0.6</KeyTime>
                </Grid.Resources>
                <b:Interaction.Triggers>
                    <b:PropertyChangedTrigger Binding="{Binding Path=Content.Tag,ElementName=AnimTargetPlaceHolderInt}">
                        <b:Interaction.Behaviors>
                            <b:ConditionBehavior>
                                <b:ConditionalExpression>
                                    <b:ComparisonCondition LeftOperand="{Binding ElementName=AnimationOverlayHolder,Path=Tag}" Operator="NotEqual" RightOperand="Init"/>
                                    <b:ComparisonCondition LeftOperand="{Binding RollState}" Operator="NotEqual" RightOperand="ResultReady"/>
                                </b:ConditionalExpression>
                            </b:ConditionBehavior>
                        </b:Interaction.Behaviors>
                        <b:ControlStoryboardAction ControlStoryboardOption="Play">
                            <b:ControlStoryboardAction.Storyboard>
                                <Storyboard FillBehavior="Stop">
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="d20Explosion">
                                        <DiscreteObjectKeyFrame KeyTime="{StaticResource vfxD20ExpTimeA}" Value="{x:Static Visibility.Visible}"/>
                                        <DiscreteObjectKeyFrame KeyTime="{StaticResource vfxD20ExpTimeB}" Value="{x:Static Visibility.Hidden}"/>
                                    </ObjectAnimationUsingKeyFrames>


                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].ScaleX" Storyboard.TargetName="Dice">
                                        <DiscreteDoubleKeyFrame KeyTime="{StaticResource vfxAnimKeyTime1}" Value="1"/>
                                        <LinearDoubleKeyFrame KeyTime="{StaticResource vfxD20ExpTimeA}" Value="1.05"/>
                                        <LinearDoubleKeyFrame KeyTime="{StaticResource vfxD20ExpTimeB}" Value="1"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].ScaleY" Storyboard.TargetName="Dice">
                                        <DiscreteDoubleKeyFrame KeyTime="{StaticResource vfxAnimKeyTime1}" Value="1"/>
                                        <LinearDoubleKeyFrame KeyTime="{StaticResource vfxD20ExpTimeA}" Value="1.05"/>
                                        <LinearDoubleKeyFrame KeyTime="{StaticResource vfxD20ExpTimeB}" Value="1"/>
                                    </DoubleAnimationUsingKeyFrames>

                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[1].(TranslateTransform.Y)" Storyboard.TargetName="DiceWRotationFrame">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                        <LinearDoubleKeyFrame KeyTime="{StaticResource vfxD20ExpTimeA}" Value="-40"/>
                                        <LinearDoubleKeyFrame KeyTime="{StaticResource vfxD20ExpTimeB}" Value="0"/>
                                    </DoubleAnimationUsingKeyFrames>

                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Tag" Storyboard.TargetName="d20Boom1">
                                        <DiscreteObjectKeyFrame KeyTime="0" Value=""/>
                                        <DiscreteObjectKeyFrame KeyTime="{StaticResource vfxD20Time_1A}" Value="PlayAnim"/>
                                        <DiscreteObjectKeyFrame KeyTime="{StaticResource vfxD20Time_1B}" Value=""/>
                                    </ObjectAnimationUsingKeyFrames>


                                </Storyboard>
                            </b:ControlStoryboardAction.Storyboard>
                        </b:ControlStoryboardAction>
                    </b:PropertyChangedTrigger>

                    <b:DataTrigger Binding="{Binding ElementName=d20Boom1, Path=Tag}" Value="PlayAnim">
                        <b:ControlStoryboardAction ControlStoryboardOption="Play">
                            <b:ControlStoryboardAction.Storyboard>
                                <Storyboard FillBehavior="Stop">
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="d20Boom1">
                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
                                        <DiscreteObjectKeyFrame KeyTime="{StaticResource vfxD20Time_1B}" Value="{x:Static Visibility.Hidden}"/>
                                    </ObjectAnimationUsingKeyFrames>

                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="d20Boom2">
                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
                                        <DiscreteObjectKeyFrame KeyTime="{StaticResource vfxD20Time_1B}" Value="{x:Static Visibility.Hidden}"/>
                                    </ObjectAnimationUsingKeyFrames>

                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="d20Boom3">
                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
                                        <DiscreteObjectKeyFrame KeyTime="{StaticResource vfxD20Time_1B}" Value="{x:Static Visibility.Hidden}"/>
                                    </ObjectAnimationUsingKeyFrames>

                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="d20Boom4">
                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
                                        <DiscreteObjectKeyFrame KeyTime="{StaticResource vfxD20Time_1B}" Value="{x:Static Visibility.Hidden}"/>
                                    </ObjectAnimationUsingKeyFrames>

                                </Storyboard>
                            </b:ControlStoryboardAction.Storyboard>
                        </b:ControlStoryboardAction>
                    </b:DataTrigger>
                </b:Interaction.Triggers>

                <StackPanel>

                    <StackPanel Orientation="Horizontal">
                        <ls:AnimatedImage Style="{StaticResource d20ExplosionVfx}" x:Name="d20Boom1">
                            <ls:AnimatedImage.RenderTransform>
                                <RotateTransform Angle="0" CenterX="89" CenterY="92"/>
                            </ls:AnimatedImage.RenderTransform>
                        </ls:AnimatedImage>
                        <ls:AnimatedImage Style="{StaticResource d20ExplosionVfx}" x:Name="d20Boom2">
                            <ls:AnimatedImage.RenderTransform>
                                <RotateTransform Angle="90" CenterX="89" CenterY="92"/>
                            </ls:AnimatedImage.RenderTransform>
                        </ls:AnimatedImage>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <ls:AnimatedImage Style="{StaticResource d20ExplosionVfx}" x:Name="d20Boom3">
                            <ls:AnimatedImage.RenderTransform>
                                <RotateTransform Angle="270"  CenterX="89" CenterY="92"/>
                            </ls:AnimatedImage.RenderTransform>
                        </ls:AnimatedImage>
                        <ls:AnimatedImage Style="{StaticResource d20ExplosionVfx}" x:Name="d20Boom4">
                            <ls:AnimatedImage.RenderTransform>
                                <RotateTransform Angle="180"  CenterX="89" CenterY="92"/>
                            </ls:AnimatedImage.RenderTransform>
                        </ls:AnimatedImage>
                    </StackPanel>
                </StackPanel>
                <ls:AnimatedImage Style="{StaticResource popExplosionVfx}" x:Name="d20Explosion" Margin="0,0,0,0"/>
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=Tag,RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Value="RevealResultAnimation">
                <Setter Property="Visibility" Value="Visible" />
                <DataTrigger.EnterActions>
                    <BeginStoryboard x:Name="RollDieAnimationBS2" Storyboard="{StaticResource TagSettingStoryboard}"/>
                </DataTrigger.EnterActions>
            </DataTrigger>
            <EventTrigger RoutedEvent="FrameworkElement.Unloaded">
                <StopStoryboard BeginStoryboardName="RollDieAnimationBS2"/>
            </EventTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="LockTemplate">
        <Grid x:Name="Lock" Visibility="Collapsed">
            <b:Interaction.Triggers>

                <b:DataTrigger Binding="{Binding RollState}" Value="ResultReady" >
                    <b:Interaction.Behaviors>
                        <b:ConditionBehavior>
                            <b:ConditionalExpression>
                                <b:ComparisonCondition LeftOperand="{Binding Success}" Operator="Equal" RightOperand="True"/>
                                <b:ComparisonCondition LeftOperand="{Binding RollContext}" Operator="Equal" RightOperand="LockPick"/>
                            </b:ConditionalExpression>
                        </b:ConditionBehavior>
                    </b:Interaction.Behaviors>
                    <b:ControlStoryboardAction ControlStoryboardOption="Play">
                        <b:ControlStoryboardAction.Storyboard>
                            <Storyboard RepeatBehavior="1x" Duration="0:0:2" BeginTime="0:0:0.6">
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="LockBoom1">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.05" Value="{x:Static Visibility.Visible}"/>
                                    <DiscreteObjectKeyFrame KeyTime="0:0:1.12" Value="{x:Static Visibility.Hidden}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="LockBoom2">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.05" Value="{x:Static Visibility.Visible}"/>
                                    <DiscreteObjectKeyFrame KeyTime="0:0:1.12" Value="{x:Static Visibility.Hidden}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="LockPopExplosion1">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Visible}"/>
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.73" Value="{x:Static Visibility.Hidden}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="LockPopExplosion2">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.53" Value="{x:Static Visibility.Hidden}"/>
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </b:ControlStoryboardAction.Storyboard>
                    </b:ControlStoryboardAction>
                </b:DataTrigger>
            </b:Interaction.Triggers>

            <ls:AnimatedImage x:Name="LockBoom1" Style="{StaticResource d20ExplosionVfx}" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="-40,20,0,0">
                <ls:AnimatedImage.RenderTransform>
                    <TransformGroup>
                        <RotateTransform Angle="-43.16" CenterX="89" CenterY="92"/>
                    </TransformGroup>
                </ls:AnimatedImage.RenderTransform>
            </ls:AnimatedImage>

            <ls:AnimatedImage x:Name="LockBoom2" Style="{StaticResource d20ExplosionVfx}" VerticalAlignment="Top" HorizontalAlignment="Right" Margin="0,20,-40,0">
                <ls:AnimatedImage.RenderTransform>
                    <TransformGroup>
                        <RotateTransform Angle="132.88" CenterX="89" CenterY="92"/>
                    </TransformGroup>
                </ls:AnimatedImage.RenderTransform>
            </ls:AnimatedImage>

            <ls:AnimatedImage x:Name="LockPopExplosion1" Style="{StaticResource popExplosionVfx}" VerticalAlignment="Top" Margin="0,-30,0,0"/>

            <Image Source="/GustavNoesisGUI;component/Assets/ActiveRoll/lockBG.png" Stretch="None"/>

            <ls:AnimatedImage x:Name="LockPopExplosion2" Style="{StaticResource popExplosionVfx}" VerticalAlignment="Top" Margin="0,-30,0,0">
                <ls:AnimatedImage.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform ScaleX="-1" CenterX="108" CenterY="120"/>
                    </TransformGroup>
                </ls:AnimatedImage.RenderTransform>
            </ls:AnimatedImage>
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding RollContext}" Value="LockPick">
                <Setter TargetName="Lock" Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ParallelTimeline x:Key="SlideInModAnim">
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)">
            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>

            <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="1">
                <EasingDoubleKeyFrame.EasingFunction>
                    <ExponentialEase EasingMode="EaseOut"/>
                </EasingDoubleKeyFrame.EasingFunction>
            </EasingDoubleKeyFrame>
        </DoubleAnimationUsingKeyFrames>

        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
            <EasingDoubleKeyFrame KeyTime="0" Value="46"/>
            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="36">
                <EasingDoubleKeyFrame.EasingFunction>
                    <ExponentialEase EasingMode="EaseOut"/>
                </EasingDoubleKeyFrame.EasingFunction>
            </EasingDoubleKeyFrame>
            <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0">
                <EasingDoubleKeyFrame.EasingFunction>
                    <ExponentialEase EasingMode="EaseOut"/>
                </EasingDoubleKeyFrame.EasingFunction>
            </EasingDoubleKeyFrame>
        </DoubleAnimationUsingKeyFrames>
    </ParallelTimeline>

    <ControlTemplate x:Key="MinMaxText"  TargetType="Control">
        <TextBlock x:Name="textBlockMinMaxNumber" >
            <TextBlock.Tag>
                <MultiBinding Converter="{StaticResource EqualConverter}">
                    <Binding Path="MinBonusValue"/>
                    <Binding Path="MaxBonusValue"/>
                </MultiBinding>
            </TextBlock.Tag>
            <TextBlock.Text>
                <MultiBinding StringFormat="{}{0}~{1}">
                    <Binding Path="MinBonusValue" StringFormat="{}{0:+#;-#;+0}"/>
                    <Binding Path="MaxBonusValue"/>
                </MultiBinding>
            </TextBlock.Text>
        </TextBlock>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding ElementName=textBlockMinMaxNumber, Path=Tag }" Value="True">
                <Setter TargetName="textBlockMinMaxNumber" Property="Text" Value="{Binding MinBonusValue, StringFormat='{}{0:+#;-#;+0}'}" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="DieAnimation" TargetType="Control">
        <ControlTemplate.Resources>
            <Storyboard x:Key="RollDieAnimation" Duration="0:0:3.38" RepeatBehavior="1x" FillBehavior="Stop">
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="AnimHolder">
                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
                </ObjectAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.X" Storyboard.TargetName="DieHolder">
                    <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0"/>
                    <LinearDoubleKeyFrame KeyTime="0:0:0.07" Value="-256"/>
                    <LinearDoubleKeyFrame KeyTime="0:0:0.15" Value="-200"/>
                    <LinearDoubleKeyFrame KeyTime="0:0:0.6" Value="220"/>
                    <LinearDoubleKeyFrame KeyTime="0:0:1.08" Value="-54"/>
                    <LinearDoubleKeyFrame KeyTime="0:0:1.52" Value="-144"/>
                    <LinearDoubleKeyFrame KeyTime="0:0:1.98" Value="0"/>
                    <LinearDoubleKeyFrame KeyTime="0:0:2.43" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.Y" Storyboard.TargetName="DieHolder">
                    <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="-73"/>
                    <LinearDoubleKeyFrame KeyTime="0:0:0.07" Value="175"/>
                    <LinearDoubleKeyFrame KeyTime="0:0:0.15" Value="355"/>
                    <LinearDoubleKeyFrame KeyTime="0:0:0.6" Value="-83"/>
                    <LinearDoubleKeyFrame KeyTime="0:0:1.08" Value="-489"/>
                    <LinearDoubleKeyFrame KeyTime="0:0:1.52" Value="-299"/>
                    <LinearDoubleKeyFrame KeyTime="0:0:1.98" Value="-72"/>
                    <LinearDoubleKeyFrame KeyTime="0:0:2.43" Value="-72"/>
                </DoubleAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DieShadow">
                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:1.9" Value="{x:Static Visibility.Hidden}"/>
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DiceRollEnd">
                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Hidden}"/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:2.0" Value="{x:Static Visibility.Visible}"/>
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DiceRollStart">
                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:2" Value="{x:Static Visibility.Hidden}"/>
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DiceBumpEffect1">
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.07" Value="{x:Static Visibility.Visible}"/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:1.23" Value="{x:Static Visibility.Hidden}"/>
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DiceBumpEffect2">
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.15" Value="{x:Static Visibility.Visible}"/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:1.32" Value="{x:Static Visibility.Hidden}"/>
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DiceBumpEffect3">
                    <DiscreteObjectKeyFrame KeyTime="0:0:1.03" Value="{x:Static Visibility.Visible}"/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:2.2" Value="{x:Static Visibility.Hidden}"/>
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DiceBumpEffect4">
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.53" Value="{x:Static Visibility.Visible}"/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:1.7" Value="{x:Static Visibility.Hidden}"/>
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PopExplosion">
                    <DiscreteObjectKeyFrame KeyTime="0:0:1.92" Value="{x:Static Visibility.Visible}"/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:2.45" Value="{x:Static Visibility.Hidden}"/>
                </ObjectAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="TagSettingStoryboard">
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Tag">
                    <DiscreteObjectKeyFrame KeyTime="0" Value="AnimPlaying"/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:1.6" Value="PlaySoundRoll_End"/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:1.9" Value="AnimDone"/>
                </ObjectAnimationUsingKeyFrames>
            </Storyboard>

        </ControlTemplate.Resources>

        <Canvas HorizontalAlignment="Center" x:Name="AnimHolder" Visibility="Hidden" IsHitTestVisible="False" Width="3840" Height="2160">

            <Canvas x:Name="DieHolder">
                <Canvas.RenderTransform>
                    <TranslateTransform Y="-73"/>
                </Canvas.RenderTransform>

                <Canvas x:Name="DieShadow" >
                    <Canvas.RenderTransform>
                        <TranslateTransform X="1922.22" Y="965.56"/>
                    </Canvas.RenderTransform>
                    <Path Style="{StaticResource DieShadowStyle}"/>
                </Canvas>
                <Canvas x:Name="RollEndHolder">
                    <Canvas.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform />
                            <RotateTransform CenterX="222" CenterY="234.5"/>
                            <TranslateTransform X="1790" Y="840"/>
                        </TransformGroup>
                    </Canvas.RenderTransform>
                    <ls:AnimatedImage x:Name="DiceRollStart" Style="{StaticResource d20StartRoll}">
                        <ls:AnimatedImage.Source>
                            <MultiBinding Converter="{StaticResource DiceImageSourceConverter}">
                                <Binding Path="DataContext.CurrentDiceStyle" RelativeSource="{RelativeSource AncestorType={x:Type ls:UIWidget}}"/>
                                <Binding Source="/single_roll"/>
                            </MultiBinding>
                        </ls:AnimatedImage.Source>
                    </ls:AnimatedImage>
                    <Grid x:Name="DiceRollEnd" RenderTransformOrigin="0.5,0.5">
                        <Grid.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform/>
                                <RotateTransform CenterX="0" CenterY="0"/>
                                <TranslateTransform />
                            </TransformGroup>
                        </Grid.RenderTransform>
                        <ls:AnimatedImage x:Name="DiceEndAnim" Style="{StaticResource d20EndRoll}" Visibility="Visible"  />
                        <ls:AnimatedImage x:Name="Shine" Style="{StaticResource ShineStyle}" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="Hidden"/>
                    </Grid>

                </Canvas>
            </Canvas>


            <ls:AnimatedImage Style="{StaticResource d20ExplosionVfx}" x:Name="DiceBumpEffect1">
                <ls:AnimatedImage.RenderTransform>
                    <TransformGroup>
                        <RotateTransform Angle="-55.17" CenterX="89" CenterY="92"/>
                        <TranslateTransform X="1511" Y="1160"/>
                    </TransformGroup>
                </ls:AnimatedImage.RenderTransform>
            </ls:AnimatedImage>
            <ls:AnimatedImage Style="{StaticResource d20ExplosionVfx}" x:Name="DiceBumpEffect2">
                <ls:AnimatedImage.RenderTransform>
                    <TransformGroup>
                        <RotateTransform Angle="-135.37" CenterX="89" CenterY="92"/>
                        <TranslateTransform X="1667" Y="1306"/>
                    </TransformGroup>
                </ls:AnimatedImage.RenderTransform>
            </ls:AnimatedImage>
            <ls:AnimatedImage Style="{StaticResource d20ExplosionVfx}" x:Name="DiceBumpEffect3">
                <ls:AnimatedImage.RenderTransform>
                    <TransformGroup>
                        <RotateTransform Angle="-322.2" CenterX="89" CenterY="92"/>
                        <TranslateTransform X="1771" Y="348"/>
                    </TransformGroup>
                </ls:AnimatedImage.RenderTransform>
            </ls:AnimatedImage>
            <ls:AnimatedImage Style="{StaticResource d20ExplosionVfx}" x:Name="DiceBumpEffect4">
                <ls:AnimatedImage.RenderTransform>
                    <TransformGroup>
                        <RotateTransform Angle="-234.08" CenterX="89" CenterY="92"/>
                        <TranslateTransform X="2111" Y="758"/>
                    </TransformGroup>
                </ls:AnimatedImage.RenderTransform>
            </ls:AnimatedImage>
            <ls:AnimatedImage Style="{StaticResource popExplosionVfx}" x:Name="PopExplosion" >
                <ls:AnimatedImage.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform ScaleX="1.58" ScaleY="1.58" CenterX="108" CenterY="120"/>
                        <RotateTransform Angle="-39.04" CenterX="108" CenterY="120"/>
                        <TranslateTransform X="1770" Y="738"/>
                    </TransformGroup>
                </ls:AnimatedImage.RenderTransform>
            </ls:AnimatedImage>

            <b:Interaction.Triggers>
                <b:DataTrigger Binding="{Binding Tag,RelativeSource={RelativeSource AncestorType=Control}}" Value="PlaySoundRoll_End">
                    <ls:LSPlaySound Sound="UI_HUD_DiceRoll_End"/>
                </b:DataTrigger>
                <b:DataTrigger Binding="{Binding Tag,RelativeSource={RelativeSource AncestorType=Control}}" Value="AnimDone">
                    <b:Interaction.Behaviors>
                        <b:ConditionBehavior>
                            <b:ConditionalExpression>
                                <b:ComparisonCondition LeftOperand="{Binding RollContext}" Operator="NotEqual" RightOperand="LockPick"/>
                            </b:ConditionalExpression>
                        </b:ConditionBehavior>
                    </b:Interaction.Behaviors>
                    <ls:LSPlaySound Sound="UI_HUD_DiceRoll_End_Lockpick"/>
                </b:DataTrigger>

                <b:DataTrigger Binding="{Binding ElementName=DiceBumpEffect1,Path=IsVisible}" Value="True">
                    <ls:LSPlaySound  Sound="UI_HUD_DiceRoll_Dice_Collide"/>
                </b:DataTrigger>

                <b:DataTrigger Binding="{Binding ElementName=DiceBumpEffect2,Path=IsVisible}" Value="True">
                    <ls:LSPlaySound  Sound="UI_HUD_DiceRoll_Dice_Collide"/>
                </b:DataTrigger>
                <b:DataTrigger Binding="{Binding ElementName=DiceBumpEffect3,Path=IsVisible}" Value="True">
                    <ls:LSPlaySound  Sound="UI_HUD_DiceRoll_Dice_Collide"/>
                </b:DataTrigger>
                <b:DataTrigger Binding="{Binding ElementName=DiceBumpEffect4,Path=IsVisible}" Value="True">
                    <ls:LSPlaySound  Sound="UI_HUD_DiceRoll_Dice_Collide"/>
                </b:DataTrigger>

            </b:Interaction.Triggers>

        </Canvas>



        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding FinalResult,Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True" >
                <Setter TargetName="DiceEndAnim" Property="Tag" Value="{Binding FinalResult,Converter={StaticResource ToStringConverter}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding RollState}" Value="StartRoll" >
                <Setter Property="Visibility" Value="Visible" />
                <DataTrigger.EnterActions>
                    <StopStoryboard BeginStoryboardName="RollDieAnimationBS2"/>
                    <StopStoryboard BeginStoryboardName="RollDieAnimationBS"/>
                    <BeginStoryboard x:Name="RollDieAnimationBS" Storyboard="{StaticResource RollDieAnimation}"/>
                    <BeginStoryboard x:Name="RollDieAnimationBS2" Storyboard="{StaticResource TagSettingStoryboard}"/>
                </DataTrigger.EnterActions>
            </DataTrigger>
            <EventTrigger RoutedEvent="FrameworkElement.Unloaded">
                <StopStoryboard BeginStoryboardName="RollDieAnimationBS2"/>
                <StopStoryboard BeginStoryboardName="RollDieAnimationBS"/>
            </EventTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <ControlTemplate x:Key="DoubleDieAnimation" TargetType="Control">
        <ControlTemplate.Resources>
            <ParallelTimeline x:Key="SuccessDieTC">

                <Int32AnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.ZIndex)">
                    <SplineInt32KeyFrame KeyTime="00:00:00.00" Value="3"/>
                </Int32AnimationUsingKeyFrames>

                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.Children[0].ScaleX" >
                    <DiscreteDoubleKeyFrame KeyTime="0:0:0.25" Value="1"/>
                    <SplineDoubleKeyFrame KeySpline="0.053,0.454 0.491,0.926" KeyTime="0:0:0.52" Value="1.25"/>
                    <SplineDoubleKeyFrame KeySpline="0.391,2.313 0.85,-0.852" KeyTime="0:0:0.95" Value="1.25"/>
                    <SplineDoubleKeyFrame KeySpline="0.296,0 0.813,1" KeyTime="0:0:1.43" Value="1.25"/>
                    <SplineDoubleKeyFrame KeySpline="0.303,0 0.394,1.415" KeyTime="0:0:1.63" Value="1.45"/>
                    <SplineDoubleKeyFrame KeySpline="0.404,-1.467 0.183,1" KeyTime="0:0:1.9" Value="1.5"/>
                    <SplineDoubleKeyFrame KeySpline="0.404,0 0.826,0.97" KeyTime="0:0:2.02" Value="1"/>
                    <LinearDoubleKeyFrame KeyTime="0:0:2.12" Value="1.08"/>
                    <LinearDoubleKeyFrame KeyTime="0:0:2.23" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.Children[0].ScaleY" >
                    <DiscreteDoubleKeyFrame KeyTime="0:0:0.25" Value="1"/>
                    <SplineDoubleKeyFrame KeySpline="0.053,0.454 0.491,0.926" KeyTime="0:0:0.52" Value="1.25"/>
                    <SplineDoubleKeyFrame KeySpline="0.391,2.313 0.85,-0.852" KeyTime="0:0:0.95" Value="1.25"/>
                    <SplineDoubleKeyFrame KeySpline="0.296,0 0.813,1" KeyTime="0:0:1.43" Value="1.25"/>
                    <SplineDoubleKeyFrame KeySpline="0.303,0 0.394,1.415" KeyTime="0:0:1.63" Value="1.45"/>
                    <SplineDoubleKeyFrame KeySpline="0.404,-1.467 0.183,1" KeyTime="0:0:1.9" Value="1.5"/>
                    <SplineDoubleKeyFrame KeySpline="0.404,0 0.826,0.97" KeyTime="0:0:2.02" Value="1"/>
                    <LinearDoubleKeyFrame KeyTime="0:0:2.12" Value="1.08"/>
                    <LinearDoubleKeyFrame KeyTime="0:0:2.23" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.Children[2].Angle" >
                    <DiscreteDoubleKeyFrame KeyTime="0:0:0.4" Value="0"/>
                    <SplineDoubleKeyFrame KeySpline="0.333,0 0.667,1" KeyTime="0:0:0.52" Value="-3"/>
                    <SplineDoubleKeyFrame KeySpline="0.333,0 0.667,1" KeyTime="0:0:0.7" Value="5"/>
                    <SplineDoubleKeyFrame KeySpline="0.333,0 0.667,1" KeyTime="0:0:0.8" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="0:0:1.43" Storyboard.TargetProperty="RenderTransform.Children[1].X" >
                    <SplineDoubleKeyFrame KeySpline="0.333,0 0.569,0.975" KeyTime="0:0:0.2" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="0:0:1.63" Storyboard.TargetProperty="RenderTransform.Children[1].Y">
                    <SplineDoubleKeyFrame KeySpline="0.329,0.957 0.656,0" KeyTime="0:0:0.44" Value="-75"/>
                </DoubleAnimationUsingKeyFrames>
            </ParallelTimeline>

            <ParallelTimeline x:Key="FailDieTC">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" >
                    <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="1"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:1.6" Value="1"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:2.2" Value="0"/>
                </DoubleAnimationUsingKeyFrames>

                <DoubleAnimationUsingKeyFrames BeginTime="0:0:1.35" Storyboard.TargetProperty="RenderTransform.Children[1].X" >
                    <SplineDoubleKeyFrame KeySpline="0.333,0 0.569,0.975" KeyTime="0:0:0.2" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
            </ParallelTimeline>
            <Storyboard x:Key="RollDieAnimation" >
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="DieHolder2">
                    <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="1"/>
                    <LinearDoubleKeyFrame KeyTime="0:0:0.03" Value="1.17"/>
                    <LinearDoubleKeyFrame KeyTime="0:0:0.07" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="DieHolder2">
                    <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="1"/>
                    <LinearDoubleKeyFrame KeyTime="0:0:0.03" Value="1.17"/>
                    <LinearDoubleKeyFrame KeyTime="0:0:0.07" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[1].(TranslateTransform.X)" Storyboard.TargetName="DieHolder2">
                    <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="121"/>
                    <LinearDoubleKeyFrame KeyTime="0:0:0.07" Value="-150"/>
                    <LinearDoubleKeyFrame KeyTime="0:0:0.13" Value="-266"/>
                    <LinearDoubleKeyFrame KeyTime="0:0:0.42" Value="116"/>
                    <LinearDoubleKeyFrame KeyTime="0:0:0.67" Value="120"/>
                    <LinearDoubleKeyFrame KeyTime="0:0:0.68" Value="149.26"/>
                    <LinearDoubleKeyFrame KeyTime="0:0:0.77" Value="150.84"/>
                    <LinearDoubleKeyFrame KeyTime="0:0:0.87" Value="120"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[1].(TranslateTransform.Y)" Storyboard.TargetName="DieHolder2">
                    <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="-73.5"/>
                    <LinearDoubleKeyFrame KeyTime="0:0:0.07" Value="426"/>
                    <LinearDoubleKeyFrame KeyTime="0:0:0.13" Value="246"/>
                    <LinearDoubleKeyFrame KeyTime="0:0:0.42" Value="-308"/>
                    <LinearDoubleKeyFrame KeyTime="0:0:0.67" Value="-194"/>
                    <LinearDoubleKeyFrame KeyTime="0:0:0.68" Value="-176.76"/>
                    <LinearDoubleKeyFrame KeyTime="0:0:0.77" Value="-93.07"/>
                    <LinearDoubleKeyFrame KeyTime="0:0:0.87" Value="-68"/>
                </DoubleAnimationUsingKeyFrames>

                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="RollEndDie2">
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.0" Value="{x:Static Visibility.Hidden}"/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.87" Value="{x:Static Visibility.Visible}"/>
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="RollAnimDie2">
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.0" Value="{x:Static Visibility.Visible}"/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.87" Value="{x:Static Visibility.Hidden}"/>
                </ObjectAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[1].(TranslateTransform.X)" Storyboard.TargetName="DieHolder1">
                    <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="-119.74"/>
                    <LinearDoubleKeyFrame KeyTime="0:0:0.1" Value="156.76"/>
                    <LinearDoubleKeyFrame KeyTime="0:0:0.22" Value="-13.24"/>
                    <LinearDoubleKeyFrame KeyTime="0:0:0.42" Value="-273.24"/>
                    <LinearDoubleKeyFrame KeyTime="0:0:0.67" Value="-29.24"/>
                    <LinearDoubleKeyFrame KeyTime="0:0:0.77" Value="-120"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[1].(TranslateTransform.Y)" Storyboard.TargetName="DieHolder1">
                    <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="-69.65"/>
                    <LinearDoubleKeyFrame KeyTime="0:0:0.1" Value="248.85"/>
                    <LinearDoubleKeyFrame KeyTime="0:0:0.22" Value="420.85"/>
                    <LinearDoubleKeyFrame KeyTime="0:0:0.42" Value="172.85"/>
                    <LinearDoubleKeyFrame KeyTime="0:0:0.67" Value="-37.15"/>
                    <LinearDoubleKeyFrame KeyTime="0:0:0.77" Value="-68"/>
                </DoubleAnimationUsingKeyFrames>

                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="RollAnimDie1">
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.0" Value="{x:Static Visibility.Visible}"/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.9" Value="{x:Static Visibility.Hidden}"/>
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="RollEndDie1">
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.0" Value="{x:Static Visibility.Hidden}"/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.9" Value="{x:Static Visibility.Visible}"/>
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DiceBumpEffect1">
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.47" Value="{x:Static Visibility.Visible}"/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:1.63" Value="{x:Static Visibility.Hidden}"/>
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DiceBumpEffect2">
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.15" Value="{x:Static Visibility.Visible}"/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:1.32" Value="{x:Static Visibility.Hidden}"/>
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DiceBumpEffect3">
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.13" Value="{x:Static Visibility.Visible}"/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:1.3" Value="{x:Static Visibility.Hidden}"/>
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DiceBumpEffect4">
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.07" Value="{x:Static Visibility.Visible}"/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:1.23" Value="{x:Static Visibility.Hidden}"/>
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PopR">
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.75" Value="{x:Static Visibility.Visible}"/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:1.28" Value="{x:Static Visibility.Hidden}"/>
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PopL">
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.57" Value="{x:Static Visibility.Visible}"/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:1.1" Value="{x:Static Visibility.Hidden}"/>
                </ObjectAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="TagSettingStoryboard" >
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="AnimHolder">
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.0" Value="{x:Static Visibility.Visible}"/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:5.0" Value="{x:Static Visibility.Hidden}"/>
                </ObjectAnimationUsingKeyFrames>

                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Tag">
                    <DiscreteObjectKeyFrame KeyTime="0" Value="AnimPlaying"/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:1.4" Value="JoinAnimPlaying"/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:3.22" Value="AnimDone"/>
                </ObjectAnimationUsingKeyFrames>
            </Storyboard>

            <Storyboard x:Key="JoiningVfsAnim" FillBehavior="Stop" BeginTime="0:0:0.3" >
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="JoinPopExplHolder">
                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
                </ObjectAnimationUsingKeyFrames>

                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="popExpl1">
                    <DiscreteObjectKeyFrame KeyTime="0:0:1.78" Value="{x:Static Visibility.Visible}"/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:2.32" Value="{x:Static Visibility.Hidden}"/>
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="popExpl2">
                    <DiscreteObjectKeyFrame KeyTime="0:0:1.82" Value="{x:Static Visibility.Visible}"/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:2.35" Value="{x:Static Visibility.Hidden}"/>
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="popExpl3">
                    <DiscreteObjectKeyFrame KeyTime="0:0:1.73" Value="{x:Static Visibility.Visible}"/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:2.27" Value="{x:Static Visibility.Hidden}"/>
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="JoinD20ExplHolder">
                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="d20Expl1">
                    <DiscreteObjectKeyFrame KeyTime="0:0:1.7" Value="{x:Static Visibility.Visible}"/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:2.87" Value="{x:Static Visibility.Hidden}"/>
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="d20Expl2">
                    <DiscreteObjectKeyFrame KeyTime="0:0:1.7" Value="{x:Static Visibility.Visible}"/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:2.87" Value="{x:Static Visibility.Hidden}"/>
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="d20Expl3">
                    <DiscreteObjectKeyFrame KeyTime="0:0:1.7" Value="{x:Static Visibility.Visible}"/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:2.87" Value="{x:Static Visibility.Hidden}"/>
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="d20Expl4">
                    <DiscreteObjectKeyFrame KeyTime="0:0:1.7" Value="{x:Static Visibility.Visible}"/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:2.87" Value="{x:Static Visibility.Hidden}"/>
                </ObjectAnimationUsingKeyFrames>

                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Shine">
                    <DiscreteObjectKeyFrame KeyTime="0:0:1.7" Value="{x:Static Visibility.Visible}"/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:2.6" Value="{x:Static Visibility.Hidden}"/>
                </ObjectAnimationUsingKeyFrames>
            </Storyboard>
        </ControlTemplate.Resources>

        <Canvas  HorizontalAlignment="Center" Tag="0" x:Name="AnimHolder" Visibility="Hidden" IsHitTestVisible="False"  Width="3840" Height="2160" >
            <b:Interaction.Triggers>

                <b:DataTrigger Binding="{Binding Path=Tag, RelativeSource={RelativeSource AncestorType=Control}}" Value="JoinAnimPlaying" >
                    <b:ControlStoryboardAction ControlStoryboardOption="Play" Storyboard="{StaticResource JoiningVfsAnim}"/>
                </b:DataTrigger>

                <b:DataTrigger Binding="{Binding Path=Tag, RelativeSource={RelativeSource AncestorType=Control}}" Value="JoinAnimPlaying" >
                    <b:Interaction.Behaviors>
                        <b:ConditionBehavior>
                            <b:ConditionalExpression>
                                <b:ComparisonCondition LeftOperand="{Binding Roll.RollAdvantageType}" Operator="Equal" RightOperand="Advantage" />
                            </b:ConditionalExpression>
                        </b:ConditionBehavior>
                    </b:Interaction.Behaviors>
                    <ls:LSPlaySound Sound="UI_HUD_DiceRoll_End_Advantage"/>
                </b:DataTrigger>

                <b:DataTrigger Binding="{Binding Path=Tag, RelativeSource={RelativeSource AncestorType=Control}}" Value="JoinAnimPlaying" >
                    <b:Interaction.Behaviors>
                        <b:ConditionBehavior>
                            <b:ConditionalExpression>
                                <b:ComparisonCondition LeftOperand="{Binding Roll.RollAdvantageType}" Operator="Equal" RightOperand="Disadvantage" />
                            </b:ConditionalExpression>
                        </b:ConditionBehavior>
                    </b:Interaction.Behaviors>
                    <ls:LSPlaySound Sound="UI_HUD_DiceRoll_End_Disadvantage"/>
                </b:DataTrigger>

                <b:DataTrigger Binding="{Binding Path=Tag, RelativeSource={RelativeSource AncestorType=Control}}" Value="JoinAnimPlaying" >
                    <b:Interaction.Behaviors>
                        <b:ConditionBehavior>
                            <b:ConditionalExpression>
                                <b:ComparisonCondition LeftOperand="{Binding Tag, ElementName=RollEndDie1}" Operator="Equal" RightOperand="{Binding FinalResult, Converter={StaticResource ToStringConverter}}" />
                            </b:ConditionalExpression>
                        </b:ConditionBehavior>
                    </b:Interaction.Behaviors>
                    <b:ControlStoryboardAction ControlStoryboardOption="Play">
                        <b:ControlStoryboardAction.Storyboard>
                            <Storyboard Storyboard.TargetName="DieHolder1" Children="{StaticResource SuccessDieTC}" />
                        </b:ControlStoryboardAction.Storyboard>
                    </b:ControlStoryboardAction>
                    <b:ControlStoryboardAction ControlStoryboardOption="Play">
                        <b:ControlStoryboardAction.Storyboard>
                            <Storyboard Storyboard.TargetName="DieHolder2" Children="{StaticResource FailDieTC}" />
                        </b:ControlStoryboardAction.Storyboard>
                    </b:ControlStoryboardAction>
                </b:DataTrigger>
                <b:DataTrigger Binding="{Binding Path=Tag, RelativeSource={RelativeSource AncestorType=Control}}" Value="JoinAnimPlaying" >
                    <b:Interaction.Behaviors>
                        <b:ConditionBehavior>
                            <b:ConditionalExpression>
                                <b:ComparisonCondition LeftOperand="{Binding Tag, ElementName=RollEndDie1}" Operator="NotEqual" RightOperand="{Binding FinalResult, Converter={StaticResource ToStringConverter}}" />
                            </b:ConditionalExpression>
                        </b:ConditionBehavior>
                    </b:Interaction.Behaviors>
                    <b:ControlStoryboardAction ControlStoryboardOption="Play">
                        <b:ControlStoryboardAction.Storyboard>
                            <Storyboard Storyboard.TargetName="DieHolder2" Children="{StaticResource SuccessDieTC}" />
                        </b:ControlStoryboardAction.Storyboard>
                    </b:ControlStoryboardAction>
                    <b:ControlStoryboardAction ControlStoryboardOption="Play">
                        <b:ControlStoryboardAction.Storyboard>
                            <Storyboard Storyboard.TargetName="DieHolder1" Children="{StaticResource FailDieTC}" />
                        </b:ControlStoryboardAction.Storyboard>
                    </b:ControlStoryboardAction>
                </b:DataTrigger>

                <b:DataTrigger Binding="{Binding Tag,RelativeSource={RelativeSource AncestorType=Control}}" Value="PlaySoundRoll_End">
                    <ls:LSPlaySound Sound="UI_HUD_DiceRoll_End"/>
                </b:DataTrigger>

                <b:DataTrigger Binding="{Binding Tag,RelativeSource={RelativeSource AncestorType=Control}}" Value="AnimDone">
                    <b:Interaction.Behaviors>
                        <b:ConditionBehavior>
                            <b:ConditionalExpression>
                                <b:ComparisonCondition LeftOperand="{Binding RollContext}" Operator="NotEqual" RightOperand="LockPick"/>
                            </b:ConditionalExpression>
                        </b:ConditionBehavior>
                    </b:Interaction.Behaviors>
                    <ls:LSPlaySound Sound="UI_HUD_DiceRoll_End_Lockpick"/>
                </b:DataTrigger>

                <b:DataTrigger Binding="{Binding ElementName=DiceBumpEffect1,Path=IsVisible}" Value="True">
                    <ls:LSPlaySound  Sound="UI_HUD_DiceRoll_Dice_Collide"/>
                </b:DataTrigger>

                <b:DataTrigger Binding="{Binding ElementName=DiceBumpEffect2,Path=IsVisible}" Value="True">
                    <ls:LSPlaySound  Sound="UI_HUD_DiceRoll_Dice_Collide"/>
                </b:DataTrigger>
                <b:DataTrigger Binding="{Binding ElementName=DiceBumpEffect3,Path=IsVisible}" Value="True">
                    <ls:LSPlaySound  Sound="UI_HUD_DiceRoll_Dice_Collide"/>
                </b:DataTrigger>
                <b:DataTrigger Binding="{Binding ElementName=DiceBumpEffect4,Path=IsVisible}" Value="True">
                    <ls:LSPlaySound  Sound="UI_HUD_DiceRoll_Dice_Collide"/>
                </b:DataTrigger>
            </b:Interaction.Triggers>

            <Canvas x:Name="JoinPopExplHolder" Visibility="Hidden">
                <ls:AnimatedImage x:Name="popExpl1" Style="{StaticResource popExplosionVfx}">
                    <ls:AnimatedImage.RenderTransform>
                        <TransformGroup>
                            <RotateTransform Angle="108.22" CenterX="108" CenterY="120"/>
                            <TranslateTransform X="1904" Y="784"/>
                        </TransformGroup>
                    </ls:AnimatedImage.RenderTransform>
                </ls:AnimatedImage>
                <ls:AnimatedImage x:Name="popExpl2" Style="{StaticResource popExplosionVfx}">
                    <ls:AnimatedImage.RenderTransform>
                        <TransformGroup>
                            <RotateTransform Angle="206.25" CenterX="108" CenterY="120"/>
                            <TranslateTransform X="1786" Y="998"/>
                        </TransformGroup>
                    </ls:AnimatedImage.RenderTransform>
                </ls:AnimatedImage>
                <ls:AnimatedImage x:Name="popExpl3" Style="{StaticResource popExplosionVfx}">
                    <ls:AnimatedImage.RenderTransform>
                        <TranslateTransform X="1724" Y="752"/>
                    </ls:AnimatedImage.RenderTransform>
                </ls:AnimatedImage>
            </Canvas>
            <Canvas x:Name="JoinD20ExplHolder" Visibility="Hidden">
                <Canvas.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform ScaleX="1" ScaleY="1" CenterX="1920" CenterY="965"/>
                        <TranslateTransform X="20" Y="-42"/>
                    </TransformGroup>
                </Canvas.RenderTransform>
                <ls:AnimatedImage x:Name="d20Expl1" Style="{StaticResource d20ExplosionVfx}">
                    <ls:AnimatedImage.RenderTransform>
                        <TranslateTransform X="1759" Y="794"/>
                    </ls:AnimatedImage.RenderTransform>
                </ls:AnimatedImage>
                <ls:AnimatedImage x:Name="d20Expl2" Style="{StaticResource d20ExplosionVfx}">
                    <ls:AnimatedImage.RenderTransform>
                        <TransformGroup>
                            <RotateTransform Angle="90" CenterX="89" CenterY="92"/>
                            <TranslateTransform X="1905" Y="800"/>
                        </TransformGroup>
                    </ls:AnimatedImage.RenderTransform>
                </ls:AnimatedImage>
                <ls:AnimatedImage x:Name="d20Expl3" Style="{StaticResource d20ExplosionVfx}">
                    <ls:AnimatedImage.RenderTransform>
                        <TransformGroup>
                            <RotateTransform Angle="180" CenterX="89" CenterY="92"/>
                            <TranslateTransform X="1905" Y="944"/>
                        </TransformGroup>
                    </ls:AnimatedImage.RenderTransform>
                </ls:AnimatedImage>
                <ls:AnimatedImage x:Name="d20Expl4" Style="{StaticResource d20ExplosionVfx}">
                    <ls:AnimatedImage.RenderTransform>
                        <TransformGroup>
                            <RotateTransform Angle="270" CenterX="89" CenterY="92"/>
                            <TranslateTransform X="1759" Y="940"/>
                        </TransformGroup>
                    </ls:AnimatedImage.RenderTransform>
                </ls:AnimatedImage>
            </Canvas>
            <!--Canvas to contain the zindex swapping-->
            <Canvas>
                <Canvas x:Name="DieHolder1" Panel.ZIndex="1">
                    <Canvas.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform CenterX="1920" CenterY="1080"/>
                            <TranslateTransform X="-120" Y="-68"/>
                            <RotateTransform CenterX="1793" CenterY="840"/>
                        </TransformGroup>
                    </Canvas.RenderTransform>
                    <Canvas x:Name="Shadow1" Visibility="Visible">
                        <Canvas.RenderTransform>
                            <TranslateTransform X="1922" Y="966"/>
                        </Canvas.RenderTransform>
                        <Path Style="{StaticResource DieShadowStyle}"/>
                    </Canvas>

                    <ls:AnimatedImage x:Name="RollAnimDie1" Style="{StaticResource d20StartRoll}">
                        <ls:AnimatedImage.Source>
                            <MultiBinding Converter="{StaticResource DiceImageSourceConverter}">
                                <Binding Path="DataContext.CurrentDiceStyle" RelativeSource="{RelativeSource AncestorType={x:Type ls:UIWidget}}"/>
                                <Binding Source="/double_roll_1"/>
                            </MultiBinding>
                        </ls:AnimatedImage.Source>
                        <ls:AnimatedImage.RenderTransform>
                            <TranslateTransform X="1790" Y="840"/>
                        </ls:AnimatedImage.RenderTransform>
                    </ls:AnimatedImage>

                    <ls:AnimatedImage x:Name="RollEndDie1" Style="{StaticResource d20EndRoll}" Tag="{Binding RolledNumber1,Converter={StaticResource ToStringConverter}}">
                        <ls:AnimatedImage.RenderTransform>
                            <TranslateTransform X="1790" Y="843"/>
                        </ls:AnimatedImage.RenderTransform>
                    </ls:AnimatedImage>

                </Canvas>
                <Canvas x:Name="DieHolder2" Panel.ZIndex="2">
                    <Canvas.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform CenterX="1920" CenterY="1080"/>
                            <TranslateTransform X="120" Y="-68"/>
                            <RotateTransform CenterX="2046" CenterY="840"/>
                        </TransformGroup>

                    </Canvas.RenderTransform>

                    <Canvas x:Name="Shadow2" Visibility="Visible">
                        <Canvas.RenderTransform>
                            <TranslateTransform X="1922" Y="966"/>
                        </Canvas.RenderTransform>
                        <Path Style="{StaticResource DieShadowStyle}"/>
                    </Canvas>

                    <ls:AnimatedImage x:Name="RollAnimDie2" Style="{StaticResource d20StartRoll}">
                        <ls:AnimatedImage.Source>
                            <MultiBinding Converter="{StaticResource DiceImageSourceConverter}">
                                <Binding Path="DataContext.CurrentDiceStyle" RelativeSource="{RelativeSource AncestorType={x:Type ls:UIWidget}}"/>
                                <Binding Source="/double_roll_2"/>
                            </MultiBinding>
                        </ls:AnimatedImage.Source>
                        <ls:AnimatedImage.RenderTransform>
                            <TranslateTransform X="1790" Y="840"/>
                        </ls:AnimatedImage.RenderTransform>
                    </ls:AnimatedImage>

                    <ls:AnimatedImage x:Name="RollEndDie2" Style="{StaticResource d20EndRoll}" Tag="{Binding RolledNumber2,Converter={StaticResource ToStringConverter}}">
                        <ls:AnimatedImage.RenderTransform>
                            <TranslateTransform X="1790" Y="843"/>
                        </ls:AnimatedImage.RenderTransform>
                    </ls:AnimatedImage>

                </Canvas>
            </Canvas>
            <Canvas>
                <Canvas.RenderTransform>
                    <TranslateTransform X="1790" Y="770"/>
                </Canvas.RenderTransform>
                <ls:AnimatedImage x:Name="Shine" Style="{StaticResource ShineStyle}" VerticalAlignment="Center" HorizontalAlignment="Center" Visibility="Hidden" />
            </Canvas>

            <ls:AnimatedImage Style="{StaticResource d20ExplosionVfx}" x:Name="DiceBumpEffect1">
                <ls:AnimatedImage.RenderTransform>
                    <TransformGroup>
                        <RotateTransform Angle="-284.24" CenterX="89" CenterY="92"/>
                        <TranslateTransform X="1997" Y="520"/>
                    </TransformGroup>
                </ls:AnimatedImage.RenderTransform>
            </ls:AnimatedImage>

            <ls:AnimatedImage Style="{StaticResource d20ExplosionVfx}" x:Name="DiceBumpEffect2">
                <ls:AnimatedImage.RenderTransform>
                    <TransformGroup>
                        <RotateTransform Angle="-397.25" CenterX="89" CenterY="92"/>
                        <TranslateTransform X="1485" Y="1116"/>
                    </TransformGroup>
                </ls:AnimatedImage.RenderTransform>
            </ls:AnimatedImage>

            <ls:AnimatedImage Style="{StaticResource d20ExplosionVfx}" x:Name="DiceBumpEffect3">
                <ls:AnimatedImage.RenderTransform>
                    <TransformGroup>
                        <RotateTransform Angle="-542.31" CenterX="89" CenterY="92"/>
                        <TranslateTransform X="2041" Y="1256"/>
                    </TransformGroup>
                </ls:AnimatedImage.RenderTransform>
            </ls:AnimatedImage>

            <ls:AnimatedImage Style="{StaticResource d20ExplosionVfx}" x:Name="DiceBumpEffect4">
                <ls:AnimatedImage.RenderTransform>
                    <TransformGroup>
                        <RotateTransform Angle="-451.5" CenterX="89" CenterY="92"/>
                        <TranslateTransform X="1629" Y="1364"/>
                    </TransformGroup>
                </ls:AnimatedImage.RenderTransform>
            </ls:AnimatedImage>

            <ls:AnimatedImage Style="{StaticResource popExplosionVfx}" x:Name="PopR" >
                <ls:AnimatedImage.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform ScaleX="1.58" ScaleY="1.58" CenterX="108" CenterY="120"/>
                        <TranslateTransform X="1952" Y="740"/>
                    </TransformGroup>
                </ls:AnimatedImage.RenderTransform>
            </ls:AnimatedImage>

            <ls:AnimatedImage Style="{StaticResource popExplosionVfx}" x:Name="PopL" >
                <ls:AnimatedImage.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform ScaleX="1.58" ScaleY="1.58" CenterX="108" CenterY="120"/>
                        <TranslateTransform X="1692" Y="716"/>
                    </TransformGroup>
                </ls:AnimatedImage.RenderTransform>
            </ls:AnimatedImage>

        </Canvas>
        <ControlTemplate.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding FinalResult}" Value="1"/>
                    <Condition Binding="{Binding DataContext.CurrentDiceStyle.Flip1,RelativeSource={RelativeSource AncestorType=ls:UIWidget}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="Shine" Property="RenderTransform" >
                    <Setter.Value>
                        <TransformGroup>
                            <RotateTransform Angle="180"/>
                        </TransformGroup>
                    </Setter.Value>
                </Setter>
                <Setter TargetName="Shine" Property="InvertAnimation" Value="True" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding FinalResult}" Value="20"/>
                    <Condition Binding="{Binding DataContext.CurrentDiceStyle.Flip20,RelativeSource={RelativeSource AncestorType=ls:UIWidget}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="Shine" Property="RenderTransform" >
                    <Setter.Value>
                        <TransformGroup>
                            <RotateTransform Angle="180"/>
                        </TransformGroup>
                    </Setter.Value>
                </Setter>
                <Setter TargetName="Shine" Property="InvertAnimation" Value="True" />
            </MultiDataTrigger>
            <DataTrigger Binding="{Binding RollState}" Value="StartRoll" >
                <DataTrigger.EnterActions>
                    <BeginStoryboard x:Name="RollDieAnimationBS" Storyboard="{StaticResource RollDieAnimation}"/>
                    <BeginStoryboard x:Name="RollDieAnimationBS2" Storyboard="{StaticResource TagSettingStoryboard}"/>
                </DataTrigger.EnterActions>
            </DataTrigger>

            <DataTrigger Binding="{Binding RollState}" Value="ResultReady" >
                <DataTrigger.EnterActions>
                    <StopStoryboard BeginStoryboardName="RollDieAnimationBS"/>
                    <StopStoryboard BeginStoryboardName="RollDieAnimationBS2"/>
                </DataTrigger.EnterActions>
            </DataTrigger>
            <EventTrigger RoutedEvent="FrameworkElement.Unloaded">
                <StopStoryboard BeginStoryboardName="RollDieAnimationBS"/>
                <StopStoryboard BeginStoryboardName="RollDieAnimationBS2"/>
            </EventTrigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>


    <Style x:Key="DieRollStyle" TargetType="Control">
        <Setter Property="Visibility" Value="Hidden"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding RollState}" Value="StartRoll" >
                <Setter Property="Visibility" Value="Visible" />
            </DataTrigger>

            <DataTrigger Binding="{Binding Roll.RollAdvantageType}" Value="None" >
                <Setter Property="Template" Value="{StaticResource DieAnimation}"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding Roll.RollAdvantageType}" Value="Advantage" >
                <Setter Property="Template" Value="{StaticResource DoubleDieAnimation}"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding Roll.RollAdvantageType}" Value="Disadvantage" >
                <Setter Property="Template" Value="{StaticResource DoubleDieAnimation}"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding RollState}" Value="ResultReady">
                <Setter Property="Template" Value="{x:Null}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding RollState}" Value="IntroductionAnimation">
                <Setter Property="Template" Value="{x:Null}"/>
            </DataTrigger>

        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="SuccessResultTemplate" TargetType="Control">
        <ControlTemplate.Resources>
            <Storyboard x:Key="ResultSuccessAnimation" Duration="0:0:2.13" >

                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="D20ExplHolder">
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Visible}"/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:1.63" Value="{x:Static Visibility.Hidden}"/>
                </ObjectAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.Children[0].ScaleX" Storyboard.TargetName="D20ExplHolder">
                    <DiscreteDoubleKeyFrame KeyTime="0:0:0.48" Value="1"/>
                    <SplineDoubleKeyFrame KeySpline="0.167,-0.325 0.833,0.833" KeyTime="0:0:1.57" Value="1.7"/>
                    <DiscreteDoubleKeyFrame KeyTime="0:0:1.63" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.Children[0].ScaleY" Storyboard.TargetName="D20ExplHolder">
                    <DiscreteDoubleKeyFrame KeyTime="0:0:0.48" Value="1"/>
                    <SplineDoubleKeyFrame KeySpline="0.167,-0.325 0.833,0.833" KeyTime="0:0:1.57" Value="1.7"/>
                    <DiscreteDoubleKeyFrame KeyTime="0:0:1.63" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="d20Expl5">
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Visible}"/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:1.37" Value="{x:Static Visibility.Hidden}"/>
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="d20Expl6">
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.23" Value="{x:Static Visibility.Visible}"/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:1.4" Value="{x:Static Visibility.Hidden}"/>
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="d20Expl7">
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.27" Value="{x:Static Visibility.Visible}"/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:1.43" Value="{x:Static Visibility.Hidden}"/>
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="d20Expl8">
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Visible}"/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:1.47" Value="{x:Static Visibility.Hidden}"/>
                </ObjectAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.Children[0].ScaleX" Storyboard.TargetName="DiceHolder">
                    <DiscreteDoubleKeyFrame KeyTime="0:0:0.18" Value="1"/>
                    <LinearDoubleKeyFrame KeyTime="0:0:0.28" Value="1.3"/>
                    <LinearDoubleKeyFrame KeyTime="0:0:0.32" Value="1.3"/>
                    <LinearDoubleKeyFrame KeyTime="0:0:0.33" Value="1.8"/>
                    <SplineDoubleKeyFrame KeySpline="0.333,0 0.833,0.833" KeyTime="0:0:0.63" Value="1.6"/>
                    <SplineDoubleKeyFrame KeySpline="0.333,0 0.667,1" KeyTime="0:0:0.85" Value="1"/>
                    <SplineDoubleKeyFrame KeySpline="0.333,0 0.667,1" KeyTime="0:0:0.92" Value="1.1"/>
                    <SplineDoubleKeyFrame KeySpline="0.333,0 0.667,1" KeyTime="0:0:0.98" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.Children[0].ScaleY" Storyboard.TargetName="DiceHolder">
                    <DiscreteDoubleKeyFrame KeyTime="0:0:0.18" Value="1"/>
                    <LinearDoubleKeyFrame KeyTime="0:0:0.28" Value="1.3"/>
                    <LinearDoubleKeyFrame KeyTime="0:0:0.32" Value="1.3"/>
                    <LinearDoubleKeyFrame KeyTime="0:0:0.33" Value="1.8"/>
                    <SplineDoubleKeyFrame KeySpline="0.333,0 0.833,0.833" KeyTime="0:0:0.63" Value="1.6"/>
                    <SplineDoubleKeyFrame KeySpline="0.333,0 0.667,1" KeyTime="0:0:0.85" Value="1"/>
                    <SplineDoubleKeyFrame KeySpline="0.333,0 0.667,1" KeyTime="0:0:0.92" Value="1.1"/>
                    <SplineDoubleKeyFrame KeySpline="0.333,0 0.667,1" KeyTime="0:0:0.98" Value="1"/>
                </DoubleAnimationUsingKeyFrames>

                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Tag" Storyboard.TargetName="Dice">
                    <DiscreteObjectKeyFrame KeyTime="0" Value=""/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.25" Value="GlowResult"/>
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Shine">
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.12" Value="{x:Static Visibility.Visible}"/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:1.32" Value="{x:Static Visibility.Hidden}"/>
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="d20Expl1">
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.92" Value="{x:Static Visibility.Visible}"/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:2.08" Value="{x:Static Visibility.Hidden}"/>
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="d20Expl2">
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.9" Value="{x:Static Visibility.Visible}"/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:2.07" Value="{x:Static Visibility.Hidden}"/>
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="d20Expl3">
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.25" Value="{x:Static Visibility.Visible}"/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:1.42" Value="{x:Static Visibility.Hidden}"/>
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="d20Expl4">
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.35" Value="{x:Static Visibility.Visible}"/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:1.52" Value="{x:Static Visibility.Hidden}"/>
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="TrailVfx1">
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.92" Value="{x:Static Visibility.Visible}"/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:1.92" Value="{x:Static Visibility.Hidden}"/>
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="TrailVfx2">
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.92" Value="{x:Static Visibility.Visible}"/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:1.92" Value="{x:Static Visibility.Hidden}"/>
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="TrailVfx3">
                    <DiscreteObjectKeyFrame KeyTime="0:0:1.12" Value="{x:Static Visibility.Visible}"/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:2.12" Value="{x:Static Visibility.Hidden}"/>
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="TrailVfx4">
                    <DiscreteObjectKeyFrame KeyTime="0:0:1.12" Value="{x:Static Visibility.Visible}"/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:2.12" Value="{x:Static Visibility.Hidden}"/>
                </ObjectAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="textBlockResult">
                    <DiscreteDoubleKeyFrame KeyTime="0:0:1.07" Value="0"/>
                    <LinearDoubleKeyFrame KeyTime="0:0:1.75" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="textBlockResult">
                    <DiscreteObjectKeyFrame KeyTime="0:0:1.07" Value="{x:Static Visibility.Visible}"/>
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PopExplVfx1">
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.92" Value="{x:Static Visibility.Visible}"/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:1.45" Value="{x:Static Visibility.Hidden}"/>
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PopExplVfx2">
                    <DiscreteObjectKeyFrame KeyTime="0:0:1.07" Value="{x:Static Visibility.Visible}"/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:1.6" Value="{x:Static Visibility.Hidden}"/>
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PopExplVfx3">
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.85" Value="{x:Static Visibility.Visible}"/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:1.38" Value="{x:Static Visibility.Hidden}"/>
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PopExplVfx4">
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.25" Value="{x:Static Visibility.Visible}"/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.78" Value="{x:Static Visibility.Hidden}"/>
                </ObjectAnimationUsingKeyFrames>
            </Storyboard>

            <Storyboard x:Key="ResultLockpickSuccessAnimation" Duration="0:0:2.13">
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="D20ExplHolder">
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Visible}"/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:1.63" Value="{x:Static Visibility.Hidden}"/>
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="TrailVfx1">
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.92" Value="{x:Static Visibility.Visible}"/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:1.92" Value="{x:Static Visibility.Hidden}"/>
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="TrailVfx2">
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.92" Value="{x:Static Visibility.Visible}"/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:1.92" Value="{x:Static Visibility.Hidden}"/>
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="TrailVfx3">
                    <DiscreteObjectKeyFrame KeyTime="0:0:1.12" Value="{x:Static Visibility.Visible}"/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:2.12" Value="{x:Static Visibility.Hidden}"/>
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="TrailVfx4">
                    <DiscreteObjectKeyFrame KeyTime="0:0:1.12" Value="{x:Static Visibility.Visible}"/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:2.12" Value="{x:Static Visibility.Hidden}"/>
                </ObjectAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="textBlockResult">
                    <DiscreteDoubleKeyFrame KeyTime="0:0:1.07" Value="0"/>
                    <LinearDoubleKeyFrame KeyTime="0:0:1.75" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="textBlockResult">
                    <DiscreteObjectKeyFrame KeyTime="0:0:1.07" Value="{x:Static Visibility.Visible}"/>
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PopExplVfx1">
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.92" Value="{x:Static Visibility.Visible}"/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:1.45" Value="{x:Static Visibility.Hidden}"/>
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PopExplVfx2">
                    <DiscreteObjectKeyFrame KeyTime="0:0:1.07" Value="{x:Static Visibility.Visible}"/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:1.6" Value="{x:Static Visibility.Hidden}"/>
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PopExplVfx3">
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.85" Value="{x:Static Visibility.Visible}"/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:1.38" Value="{x:Static Visibility.Hidden}"/>
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PopExplVfx4">
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.25" Value="{x:Static Visibility.Visible}"/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.78" Value="{x:Static Visibility.Hidden}"/>
                </ObjectAnimationUsingKeyFrames>
            </Storyboard>


            <Storyboard x:Key="SuccessLoopAnimation" Duration="0:0:3" RepeatBehavior="Forever" BeginTime="0:0:2.13">

                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="D20ExplHolder">
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.17" Value="{x:Static Visibility.Visible}"/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:1.6" Value="{x:Static Visibility.Hidden}"/>
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="d20Expl5">
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Visible}"/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:1.37" Value="{x:Static Visibility.Hidden}"/>
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="d20Expl6">
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.23" Value="{x:Static Visibility.Visible}"/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:1.4" Value="{x:Static Visibility.Hidden}"/>
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="d20Expl7">
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.27" Value="{x:Static Visibility.Visible}"/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:1.43" Value="{x:Static Visibility.Hidden}"/>
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="d20Expl8">
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Visible}"/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:1.47" Value="{x:Static Visibility.Hidden}"/>
                </ObjectAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.Children[0].ScaleX" Storyboard.TargetName="DiceHolder">
                    <DiscreteDoubleKeyFrame KeyTime="0:0:0.27" Value="1"/>
                    <LinearDoubleKeyFrame KeyTime="0:0:0.38" Value="1.25"/>
                    <SplineDoubleKeyFrame KeySpline="0.333,0 0.833,1" KeyTime="0:0:0.5" Value="1.25"/>
                    <SplineDoubleKeyFrame KeySpline="0.333,0 0.667,1" KeyTime="0:0:0.7" Value="1"/>
                    <SplineDoubleKeyFrame KeySpline="0.333,0 0.667,1" KeyTime="0:0:0.77" Value="1.05"/>
                    <SplineDoubleKeyFrame KeySpline="0.333,0 0.667,1" KeyTime="0:0:0.83" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.Children[0].ScaleY" Storyboard.TargetName="DiceHolder">
                    <DiscreteDoubleKeyFrame KeyTime="0:0:0.27" Value="1"/>
                    <LinearDoubleKeyFrame KeyTime="0:0:0.38" Value="1.25"/>
                    <SplineDoubleKeyFrame KeySpline="0.333,0 0.833,1" KeyTime="0:0:0.5" Value="1.25"/>
                    <SplineDoubleKeyFrame KeySpline="0.333,0 0.667,1" KeyTime="0:0:0.7" Value="1"/>
                    <SplineDoubleKeyFrame KeySpline="0.333,0 0.667,1" KeyTime="0:0:0.77" Value="1.05"/>
                    <SplineDoubleKeyFrame KeySpline="0.333,0 0.667,1" KeyTime="0:0:0.83" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Shine">
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.18" Value="{x:Static Visibility.Visible}"/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:1.38" Value="{x:Static Visibility.Hidden}"/>
                </ObjectAnimationUsingKeyFrames>
            </Storyboard>
        </ControlTemplate.Resources>
        <Canvas x:Name="HolderCanvas" Width="3840" Height="2160" HorizontalAlignment="Center" >
            <Canvas.RenderTransform>
                <!--HACK for incorrect export-->
                <TranslateTransform Y="-80"/>
            </Canvas.RenderTransform>

            <b:Interaction.Triggers>
                <b:EventTrigger EventName="Loaded">
                    <b:Interaction.Behaviors>
                        <b:ConditionBehavior>
                            <b:ConditionalExpression>
                                <b:ComparisonCondition LeftOperand="{Binding RollContext}" Operator="NotEqual" RightOperand="LockPick"/>
                            </b:ConditionalExpression>
                        </b:ConditionBehavior>
                    </b:Interaction.Behaviors>
                    <b:ControlStoryboardAction ControlStoryboardOption="Play" Storyboard="{StaticResource ResultSuccessAnimation}"/>
                    <!---->
                </b:EventTrigger>

                <b:EventTrigger EventName="Unloaded">
                    <b:Interaction.Behaviors>
                        <b:ConditionBehavior>
                            <b:ConditionalExpression>
                                <b:ComparisonCondition LeftOperand="{Binding RollContext}" Operator="NotEqual" RightOperand="LockPick"/>
                            </b:ConditionalExpression>
                        </b:ConditionBehavior>
                    </b:Interaction.Behaviors>
                    <b:ControlStoryboardAction ControlStoryboardOption="Stop" Storyboard="{StaticResource ResultSuccessAnimation}"/>
                    <b:ControlStoryboardAction ControlStoryboardOption="Stop" Storyboard="{StaticResource SuccessLoopAnimation}"/>
                </b:EventTrigger>
                <b:StoryboardCompletedTrigger Storyboard="{StaticResource ResultSuccessAnimation}">
                    <b:ControlStoryboardAction ControlStoryboardOption="Play" Storyboard="{StaticResource SuccessLoopAnimation}"/>
                </b:StoryboardCompletedTrigger>

                <!-- LockPick case: fade d20 -->
                <b:DataTrigger Binding="{Binding RollState}" Value="ResultReady">
                    <b:Interaction.Behaviors>
                        <b:ConditionBehavior>
                            <b:ConditionalExpression>
                                <b:ComparisonCondition LeftOperand="{Binding Success}" Operator="Equal" RightOperand="True"/>
                                <b:ComparisonCondition LeftOperand="{Binding RollContext}" Operator="Equal" RightOperand="LockPick"/>
                            </b:ConditionalExpression>
                        </b:ConditionBehavior>
                    </b:Interaction.Behaviors>
                    <b:ControlStoryboardAction ControlStoryboardOption="Play" Storyboard="{StaticResource successFadeD20}"/>

                    <ls:LSPlaySound Sound="UI_HUD_DiceRoll_Result_Success_Unlock"/>

                </b:DataTrigger>
            </b:Interaction.Triggers>

            <Canvas x:Name="DieShadowHolder">
                <Canvas.RenderTransform>
                    <TranslateTransform X="1910.72" Y="980.06"/>
                </Canvas.RenderTransform>
                <Canvas>
                    <Canvas.RenderTransform>
                        <TranslateTransform X="7.5" Y="-4.5"/>
                    </Canvas.RenderTransform>
                    <Path Style="{StaticResource DieShadowStyle}"/>
                </Canvas>
            </Canvas>
            <Canvas x:Name="D20ExplHolder" RenderTransformOrigin="0.5,0.5" Visibility="Hidden">
                <Canvas.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform CenterX="1920" CenterY="800"/>
                        <TranslateTransform X="16" Y="125"/>
                    </TransformGroup>
                </Canvas.RenderTransform>

                <ls:AnimatedImage x:Name="d20Expl5" Style="{StaticResource d20ExplosionVfx}">
                    <ls:AnimatedImage.RenderTransform>
                        <TranslateTransform X="1759" Y="704"/>
                    </ls:AnimatedImage.RenderTransform>
                </ls:AnimatedImage>
                <ls:AnimatedImage x:Name="d20Expl6" Style="{StaticResource d20ExplosionVfx}">
                    <ls:AnimatedImage.RenderTransform>
                        <TransformGroup>
                            <RotateTransform Angle="90" CenterX="89" CenterY="92"/>
                            <TranslateTransform X="1905" Y="704"/>
                        </TransformGroup>
                    </ls:AnimatedImage.RenderTransform>
                </ls:AnimatedImage>
                <ls:AnimatedImage x:Name="d20Expl7" Style="{StaticResource d20ExplosionVfx}">
                    <ls:AnimatedImage.RenderTransform>
                        <TransformGroup>
                            <RotateTransform Angle="180" CenterX="89" CenterY="92"/>
                            <TranslateTransform X="1905" Y="850"/>
                        </TransformGroup>
                    </ls:AnimatedImage.RenderTransform>
                </ls:AnimatedImage>
                <ls:AnimatedImage x:Name="d20Expl8" Style="{StaticResource d20ExplosionVfx}">
                    <ls:AnimatedImage.RenderTransform>
                        <TransformGroup>
                            <RotateTransform Angle="270" CenterX="89" CenterY="92"/>
                            <TranslateTransform X="1759" Y="850"/>
                        </TransformGroup>
                    </ls:AnimatedImage.RenderTransform>
                </ls:AnimatedImage>
            </Canvas>
            <Canvas x:Name="DiceHolder">
                <Canvas.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform CenterX="222" CenterY="222"/>
                        <TranslateTransform X="1696" Y="754"/>
                    </TransformGroup>
                </Canvas.RenderTransform>
                <Canvas x:Name="Shadow" Visibility="Hidden">
                    <Canvas.RenderTransform>
                        <TranslateTransform X="1920" Y="975"/>
                    </Canvas.RenderTransform>

                    <Path Style="{StaticResource DieShadowStyle}"/>
                </Canvas>
                <ContentControl x:Name="Dice" RenderTransformOrigin="0.5,0.5" Template="{StaticResource DiceTemplate}" Content="{Binding ResultNumber}" Tag="{Binding FinalResult}">
                    <ContentControl.RenderTransform>
                        <TransformGroup>
                            <TranslateTransform X="94" Y="94"/>
                            <ScaleTransform/>
                            <RotateTransform/>
                        </TransformGroup>
                    </ContentControl.RenderTransform>
                </ContentControl>

                <ls:AnimatedImage x:Name="Shine" Style="{StaticResource ShineStyle}" Visibility="Hidden">
                    <ls:AnimatedImage.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform ScaleX="1.0" ScaleY="1.0" />
                            <TranslateTransform X="94" Y="94"/>
                        </TransformGroup>
                    </ls:AnimatedImage.RenderTransform>
                </ls:AnimatedImage>
            </Canvas>
            <ls:AnimatedImage x:Name="d20Expl1" Style="{StaticResource d20ExplosionVfx}">
                <ls:AnimatedImage.RenderTransform>
                    <TransformGroup>
                        <RotateTransform Angle="-50.26" CenterX="89" CenterY="92"/>
                        <TranslateTransform X="1811" Y="748"/>
                    </TransformGroup>
                </ls:AnimatedImage.RenderTransform>
            </ls:AnimatedImage>
            <ls:AnimatedImage x:Name="d20Expl2" Style="{StaticResource d20ExplosionVfx}">
                <ls:AnimatedImage.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform ScaleY="-1" CenterX="89" CenterY="92"/>
                        <RotateTransform Angle="219.89" CenterX="89" CenterY="92"/>
                        <TranslateTransform X="1833" Y="768"/>
                    </TransformGroup>
                </ls:AnimatedImage.RenderTransform>
            </ls:AnimatedImage>
            <ls:AnimatedImage x:Name="d20Expl3" Style="{StaticResource d20ExplosionVfx}">
                <ls:AnimatedImage.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform ScaleX="1.2" ScaleY="1.2" CenterX="89" CenterY="92"/>
                        <RotateTransform Angle="22.77" CenterX="89" CenterY="92"/>
                        <TranslateTransform X="1970" Y="838"/>
                    </TransformGroup>
                </ls:AnimatedImage.RenderTransform>
            </ls:AnimatedImage>
            <ls:AnimatedImage x:Name="d20Expl4" Style="{StaticResource d20ExplosionVfx}">
                <ls:AnimatedImage.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform ScaleX="1.4" ScaleY="1.4" CenterX="89" CenterY="92"/>
                        <RotateTransform Angle="-78.48" CenterX="89" CenterY="92"/>
                        <TranslateTransform X="1734" Y="756"/>
                    </TransformGroup>
                </ls:AnimatedImage.RenderTransform>
            </ls:AnimatedImage>
            <ls:AnimatedImage x:Name="TrailVfx1" Style="{StaticResource trailVfx}" Visibility="Hidden">
                <ls:AnimatedImage.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform ScaleX="1.2" ScaleY="-1.2" CenterX="116" CenterY="260"/>
                        <RotateTransform Angle="-90" CenterX="116" CenterY="260"/>
                        <TranslateTransform X="2110" Y="890"/>
                    </TransformGroup>
                </ls:AnimatedImage.RenderTransform>
            </ls:AnimatedImage>
            <ls:AnimatedImage x:Name="TrailVfx2" Style="{StaticResource trailVfx}" Visibility="Hidden">
                <ls:AnimatedImage.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform ScaleX="1.2" ScaleY="1.2" CenterX="116" CenterY="260"/>
                        <RotateTransform Angle="-90" CenterX="116" CenterY="260"/>
                        <TranslateTransform X="1498" Y="890"/>
                    </TransformGroup>
                </ls:AnimatedImage.RenderTransform>
            </ls:AnimatedImage>
            <ls:AnimatedImage x:Name="TrailVfx3" Style="{StaticResource trailVfx}" Visibility="Hidden">
                <ls:AnimatedImage.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform ScaleX="1.2" ScaleY="-1.2" CenterX="116" CenterY="260"/>
                        <RotateTransform Angle="-270" CenterX="116" CenterY="260"/>
                        <TranslateTransform X="1524" Y="910"/>
                    </TransformGroup>
                </ls:AnimatedImage.RenderTransform>
            </ls:AnimatedImage>
            <ls:AnimatedImage x:Name="TrailVfx4" Style="{StaticResource trailVfx}" Visibility="Hidden">
                <ls:AnimatedImage.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform ScaleX="1.2" ScaleY="1.2" CenterX="116" CenterY="260"/>
                        <RotateTransform Angle="-270" CenterX="116" CenterY="260"/>
                        <TranslateTransform X="2078" Y="910"/>
                    </TransformGroup>
                </ls:AnimatedImage.RenderTransform>
            </ls:AnimatedImage>

            <Border x:Name="ResultTextSuccess" Canvas.Top="1104" Width="3840">
                <Viewbox HorizontalAlignment="Center" Width="{DynamicResource ResultTextViewBoxWidth}" Stretch="Uniform" StretchDirection="DownOnly">
                    <TextBlock x:Name="textBlockResult" TextAlignment="Center" HorizontalAlignment="Center" VerticalAlignment="Top" Opacity="0" Padding="0,16"
                               ls:TextBlockFormatter.SourceText="{Binding Source='hc8aa88d2g41f9g49d5ga0fbgfd343e4c5353', ConverterParameter=ToUpper, Converter={StaticResource TranslatedStringConverter}}"
                               FontSize="{StaticResource ScaledHumongousFontSize}" 
                               Foreground="{StaticResource LS_extraspecialTxtColor}" Background="{x:Null}" noesis:Text.Stroke="{StaticResource LS_extraspecialTxtColor}" 
                               noesis:Text.StrokeThickness="1.5" TextWrapping="WrapWithOverflow" LineStackingStrategy="BlockLineHeight" LineHeight="{StaticResource ScaledHumongousFontSize}"  
                               Visibility="Hidden">
                        <TextBlock.Effect>
                            <DropShadowEffect ShadowDepth="0" Color="#df9800" Opacity="1.85" BlurRadius="30"/>
                        </TextBlock.Effect>
                    </TextBlock>
                </Viewbox>
            </Border>

            <ls:AnimatedImage x:Name="PopExplVfx1" Style="{StaticResource popExplosionVfx}">
                <ls:AnimatedImage.RenderTransform>
                    <TranslateTransform X="1804" Y="982"/>
                </ls:AnimatedImage.RenderTransform>
            </ls:AnimatedImage>
            <ls:AnimatedImage x:Name="PopExplVfx2" Style="{StaticResource popExplosionVfx}">
                <ls:AnimatedImage.RenderTransform>
                    <TranslateTransform X="1790" Y="560"/>
                </ls:AnimatedImage.RenderTransform>
            </ls:AnimatedImage>
            <ls:AnimatedImage x:Name="PopExplVfx3" Style="{StaticResource popExplosionVfx}" Visibility="Hidden">
                <ls:AnimatedImage.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform ScaleX="1.5" ScaleY="1.5" CenterX="108" CenterY="120"/>
                        <TranslateTransform X="1790" Y="800"/>
                    </TransformGroup>
                </ls:AnimatedImage.RenderTransform>
            </ls:AnimatedImage>
            <ls:AnimatedImage x:Name="PopExplVfx4" Style="{StaticResource popExplosionVfx}">
                <ls:AnimatedImage.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform ScaleX="1.5" ScaleY="1.5" CenterX="108" CenterY="120"/>
                        <TranslateTransform X="1794" Y="796"/>
                    </TransformGroup>
                </ls:AnimatedImage.RenderTransform>
            </ls:AnimatedImage>

        </Canvas>

        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding FinalResult}" Value="20">
                <Setter TargetName="textBlockResult" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h3230a2beg3e22g4d60g9a96g113e0d103800', ConverterParameter=ToUpper, Converter={StaticResource TranslatedStringConverter}}"/>
                <Setter TargetName="textBlockResult" Property="FontSize" Value="{StaticResource ScaledGiganticFontSize}"/>
                <Setter TargetName="textBlockResult" Property="LineHeight" Value="{StaticResource ScaledGiganticFontSize}"/>
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding FinalResult}" Value="20"/>
                    <Condition Binding="{Binding DataContext.CurrentDiceStyle.Flip20,RelativeSource={RelativeSource AncestorType=ls:UIWidget}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="Shine" Property="RenderTransform" >
                    <Setter.Value>
                        <TransformGroup>
                            <ScaleTransform />
                            <TranslateTransform X="-94" Y="-94"/>
                            <RotateTransform Angle="180"/>
                        </TransformGroup>
                    </Setter.Value>
                </Setter>
                <Setter TargetName="Shine" Property="InvertAnimation" Value="True" />
            </MultiDataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="FailedResultTemplate" TargetType="Control">
        <ControlTemplate.Resources>
            <Storyboard x:Key="ResultFailAnimation" Duration="0:0:4.38">
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="d20ExplHolder">
                    <DiscreteObjectKeyFrame KeyTime="0:0:2.17" Value="{x:Static Visibility.Visible}"/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:3.30" Value="{x:Static Visibility.Hidden}"/>
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="d20Expl_5">
                    <DiscreteObjectKeyFrame KeyTime="0:0:2.17" Value="{x:Static Visibility.Visible}"/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:3.67" Value="{x:Static Visibility.Hidden}"/>
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="d20Expl_4">
                    <DiscreteObjectKeyFrame KeyTime="0:0:2.17" Value="{x:Static Visibility.Visible}"/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:3.67" Value="{x:Static Visibility.Hidden}"/>
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="d20Expl_3">
                    <DiscreteObjectKeyFrame KeyTime="0:0:2.17" Value="{x:Static Visibility.Visible}"/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:3.67" Value="{x:Static Visibility.Hidden}"/>
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="d20Expl_2">
                    <DiscreteObjectKeyFrame KeyTime="0:0:2.17" Value="{x:Static Visibility.Visible}"/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:3.67" Value="{x:Static Visibility.Hidden}"/>
                </ObjectAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.Children[2].Y" Storyboard.TargetName="DiceHolder">
                    <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="754"/>
                    <LinearDoubleKeyFrame KeyTime="0:0:0.78" Value="754"/>
                    <LinearDoubleKeyFrame KeyTime="0:0:1.48" Value="754"/>
                    <DiscreteDoubleKeyFrame KeyTime="0:0:1.97" Value="754"/>
                    <SplineDoubleKeyFrame KeySpline="0.329,0.118 0.701,1" KeyTime="0:0:1.98" Value="754"/>
                    <SplineDoubleKeyFrame KeySpline="0.167,0 0.701,1" KeyTime="0:0:2.12" Value="792"/>
                    <SplineDoubleKeyFrame KeySpline="0.167,0 0.701,1" KeyTime="0:0:2.33" Value="732"/>
                    <SplineDoubleKeyFrame KeySpline="0.176,0 0.561,0.732" KeyTime="0:0:2.4" Value="751.52"/>
                    <SplineDoubleKeyFrame KeySpline="0.327,0.533 0.662,0.893" KeyTime="0:0:2.42" Value="754"/>
                    <SplineDoubleKeyFrame KeySpline="0.167,0.022 0.701,1" KeyTime="0:0:2.45" Value="762"/>
                    <SplineDoubleKeyFrame KeySpline="0.167,0 0.701,1" KeyTime="0:0:2.57" Value="754"/>
                </DoubleAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Shine">
                    <DiscreteObjectKeyFrame KeyTime="0:0:1.58" Value="{x:Static Visibility.Visible}"/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:3.02" Value="{x:Static Visibility.Hidden}"/>
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Tag" Storyboard.TargetName="Dice">
                    <DiscreteObjectKeyFrame KeyTime="0:0:1.12" Value=""/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:1.3" Value="FailResult"/>
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="TrailVfx1">
                    <DiscreteObjectKeyFrame KeyTime="0:0:1.78" Value="{x:Static Visibility.Visible}"/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:2.68" Value="{x:Static Visibility.Hidden}"/>
                </ObjectAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="textBlockResult">
                    <DiscreteDoubleKeyFrame KeyTime="0:0:2.2" Value="0"/>
                    <LinearDoubleKeyFrame KeyTime="0:0:2.88" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="textBlockResult">
                    <DiscreteObjectKeyFrame KeyTime="0:0:2.17" Value="{x:Static Visibility.Visible}"/>
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PopExplVfx1">
                    <DiscreteObjectKeyFrame KeyTime="0:0:2.33" Value="{x:Static Visibility.Visible}"/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:2.87" Value="{x:Static Visibility.Hidden}"/>
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PopExplVfx2">
                    <DiscreteObjectKeyFrame KeyTime="0:0:2.35" Value="{x:Static Visibility.Visible}"/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:2.88" Value="{x:Static Visibility.Hidden}"/>
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PopExplVfx3">
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.33" Value="{x:Static Visibility.Visible}"/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.85" Value="{x:Static Visibility.Hidden}"/>
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PopExplVfx4">
                    <DiscreteObjectKeyFrame KeyTime="0:0:2.17" Value="{x:Static Visibility.Visible}"/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:2.7" Value="{x:Static Visibility.Hidden}"/>
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PopExplVfx5">
                    <DiscreteObjectKeyFrame KeyTime="0:0:2.45" Value="{x:Static Visibility.Visible}"/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:2.98" Value="{x:Static Visibility.Hidden}"/>
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="d20Expl1">
                    <DiscreteObjectKeyFrame KeyTime="0:0:2.05" Value="{x:Static Visibility.Visible}"/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:3.12" Value="{x:Static Visibility.Hidden}"/>
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="d20Expl2">
                    <DiscreteObjectKeyFrame KeyTime="0:0:2.05" Value="{x:Static Visibility.Visible}"/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:3.12" Value="{x:Static Visibility.Hidden}"/>
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Shadow">
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.0" Value="{x:Static Visibility.Visible}"/>
                </ObjectAnimationUsingKeyFrames>

            </Storyboard>

        </ControlTemplate.Resources>
        <Canvas x:Name="HolderCanvas" Width="3840" Height="2160" HorizontalAlignment="Center">
            <Canvas.RenderTransform>
                <!--HACK for incorrect export-->
                <TranslateTransform Y="-80"/>
            </Canvas.RenderTransform>
            <Canvas.Triggers>
                <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                    <BeginStoryboard x:Name="ResultFailAnimBS" Storyboard="{StaticResource ResultFailAnimation}"/>
                </EventTrigger>
                <EventTrigger RoutedEvent="FrameworkElement.Unloaded">
                    <StopStoryboard BeginStoryboardName="ResultFailAnimBS"/>
                </EventTrigger>
            </Canvas.Triggers>

            <Canvas x:Name="d20ExplHolder" Visibility="Hidden">
                <Canvas.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform ScaleX="0.9" ScaleY="0.9" CenterX="1920" CenterY="965"/>
                        <TranslateTransform X="20" Y="30"/>
                    </TransformGroup>
                </Canvas.RenderTransform>
                <ls:AnimatedImage x:Name="d20Expl_5" Style="{StaticResource d20ExplosionVfx}" >
                    <ls:AnimatedImage.RenderTransform>
                        <TranslateTransform X="1759" Y="794"/>
                    </ls:AnimatedImage.RenderTransform>
                </ls:AnimatedImage>
                <ls:AnimatedImage x:Name="d20Expl_4" Style="{StaticResource d20ExplosionVfx}" >
                    <ls:AnimatedImage.RenderTransform>
                        <TransformGroup>
                            <RotateTransform Angle="90" CenterX="89" CenterY="92"/>
                            <TranslateTransform X="1905" Y="800"/>
                        </TransformGroup>
                    </ls:AnimatedImage.RenderTransform>
                </ls:AnimatedImage>
                <ls:AnimatedImage x:Name="d20Expl_3" Style="{StaticResource d20ExplosionVfx}" >
                    <ls:AnimatedImage.RenderTransform>
                        <TransformGroup>
                            <RotateTransform Angle="180" CenterX="89" CenterY="92"/>
                            <TranslateTransform X="1905" Y="944"/>
                        </TransformGroup>
                    </ls:AnimatedImage.RenderTransform>
                </ls:AnimatedImage>
                <ls:AnimatedImage x:Name="d20Expl_2" Style="{StaticResource d20ExplosionVfx}" >
                    <ls:AnimatedImage.RenderTransform>
                        <TransformGroup>
                            <RotateTransform Angle="270" CenterX="89" CenterY="92"/>
                            <TranslateTransform X="1759" Y="940"/>
                        </TransformGroup>
                    </ls:AnimatedImage.RenderTransform>
                </ls:AnimatedImage>
            </Canvas>
            <Canvas x:Name="DiceHolder">
                <Canvas.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform CenterX="222" CenterY="222"/>
                        <RotateTransform CenterX="222" CenterY="222"/>
                        <TranslateTransform X="1696" Y="754"/>
                    </TransformGroup>
                </Canvas.RenderTransform>

                <Canvas x:Name="Shadow" Visibility="Hidden">
                    <Canvas.RenderTransform>
                        <TranslateTransform X="222" Y="222"/>
                    </Canvas.RenderTransform>

                    <Path Style="{StaticResource DieShadowStyle}"/>
                </Canvas>
                <ContentControl x:Name="Dice" RenderTransformOrigin="0.5,0.5" Template="{StaticResource DiceTemplate}" Content="{Binding ResultNumber}" Tag="{Binding FinalResult}">
                    <ContentControl.RenderTransform>
                        <TransformGroup>
                            <TranslateTransform X="94" Y="94"/>
                            <ScaleTransform/>
                            <RotateTransform/>
                        </TransformGroup>
                    </ContentControl.RenderTransform>
                </ContentControl>

                <ls:AnimatedImage x:Name="Shine" Style="{StaticResource ShineStyle}" Visibility="Hidden">
                    <ls:AnimatedImage.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform />
                            <TranslateTransform X="94" Y="94"/>
                            <RotateTransform Angle="0"/>
                        </TransformGroup>
                    </ls:AnimatedImage.RenderTransform>
                </ls:AnimatedImage>
            </Canvas>
            <ls:AnimatedImage x:Name="TrailVfx1" Style="{StaticResource trailVfx}" Visibility="Hidden">
                <ls:AnimatedImage.RenderTransform>
                    <TransformGroup>
                        <RotateTransform Angle="-180" CenterX="116" CenterY="260"/>
                        <TranslateTransform X="1804" Y="712"/>
                    </TransformGroup>
                </ls:AnimatedImage.RenderTransform>
            </ls:AnimatedImage>

            <Border x:Name="ResultTextFail" Canvas.Top="1104" Width="3840">
                <Viewbox HorizontalAlignment="Center" Width="{DynamicResource ResultTextViewBoxWidth}" Stretch="Uniform" StretchDirection="DownOnly">
                    <TextBlock x:Name="textBlockResult"  TextAlignment="Center" VerticalAlignment="Top" Opacity="0" Padding="0,16"
                               ls:TextBlockFormatter.SourceText="{Binding Source='hd26939aeg1617g490ag8118g82040da0d566', ConverterParameter=ToUpper, Converter={StaticResource TranslatedStringConverter}}"
                               FontSize="{StaticResource ScaledHumongousFontSize}" Foreground="{StaticResource LS_alertTxtColor}" Background="{x:Null}" 
                               noesis:Text.Stroke="{StaticResource LS_tint00}" noesis:Text.StrokeThickness="1.5"  
                               TextWrapping="Wrap" LineStackingStrategy="BlockLineHeight" LineHeight="{StaticResource ScaledHumongousFontSize}" 
                               Visibility="Hidden"/>
                </Viewbox>
            </Border>

            <ls:AnimatedImage x:Name="PopExplVfx1" Style="{StaticResource popExplosionVfx}">
                <ls:AnimatedImage.RenderTransform>
                    <TranslateTransform X="1804" Y="982"/>
                </ls:AnimatedImage.RenderTransform>
            </ls:AnimatedImage>
            <ls:AnimatedImage x:Name="PopExplVfx2" Style="{StaticResource popExplosionVfx}">
                <ls:AnimatedImage.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform ScaleX="1.4" ScaleY="1.4" CenterX="108" CenterY="120"/>
                        <TranslateTransform X="1804" Y="784"/>
                    </TransformGroup>
                </ls:AnimatedImage.RenderTransform>
            </ls:AnimatedImage>
            <Canvas x:Name="ExplosionHolder" Visibility="Visible">
                <Canvas.RenderTransform>
                    <TranslateTransform Y="20"/>
                </Canvas.RenderTransform>

                <ls:AnimatedImage x:Name="PopExplVfx3" Style="{StaticResource popExplosionVfx}">
                    <ls:AnimatedImage.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform ScaleX="1.5" ScaleY="1.5" CenterX="108" CenterY="120"/>
                            <TranslateTransform X="1794" Y="540"/>
                        </TransformGroup>
                    </ls:AnimatedImage.RenderTransform>
                </ls:AnimatedImage>
                <ls:AnimatedImage x:Name="PopExplVfx4" Style="{StaticResource popExplosionVfx}">
                    <ls:AnimatedImage.RenderTransform>
                        <TranslateTransform X="1794" Y="810"/>
                    </ls:AnimatedImage.RenderTransform>
                </ls:AnimatedImage>
                <ls:AnimatedImage x:Name="PopExplVfx5" Style="{StaticResource popExplosionVfx}">
                    <ls:AnimatedImage.RenderTransform>
                        <TranslateTransform X="1814" Y="810"/>
                    </ls:AnimatedImage.RenderTransform>
                </ls:AnimatedImage>
                <ls:AnimatedImage x:Name="d20Expl1" Style="{StaticResource d20ExplosionVfx}" >
                    <ls:AnimatedImage.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform ScaleX="-1" ScaleY="-1" CenterX="89" CenterY="92"/>
                            <RotateTransform Angle="-47.69" CenterX="89" CenterY="92"/>
                            <TranslateTransform X="1820" Y="784"/>
                        </TransformGroup>
                    </ls:AnimatedImage.RenderTransform>
                </ls:AnimatedImage>
                <ls:AnimatedImage x:Name="d20Expl2" Style="{StaticResource d20ExplosionVfx}" >
                    <ls:AnimatedImage.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform ScaleX="-1" CenterX="89" CenterY="92"/>
                            <RotateTransform Angle="213.89" CenterX="89" CenterY="92"/>
                            <TranslateTransform X="1840" Y="714"/>
                        </TransformGroup>
                    </ls:AnimatedImage.RenderTransform>
                </ls:AnimatedImage>


            </Canvas>
        </Canvas>

        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding FinalResult}" Value="1">
                <Setter TargetName="textBlockResult" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h4ecdf9cag5234g45a8g8cafgd2efbee9cb98', ConverterParameter=ToUpper, Converter={StaticResource TranslatedStringConverter}}"/>
                <Setter TargetName="textBlockResult" Property="FontSize" Value="{StaticResource ScaledGiganticFontSize}"/>
                <Setter TargetName="textBlockResult" Property="LineHeight" Value="{StaticResource ScaledGiganticFontSize}"/>
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding FinalResult}" Value="1"/>
                    <Condition Binding="{Binding DataContext.CurrentDiceStyle.Flip1,RelativeSource={RelativeSource AncestorType=ls:UIWidget}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="Shine" Property="RenderTransform" >
                    <Setter.Value>
                        <TransformGroup>
                            <ScaleTransform />
                            <TranslateTransform X="-94" Y="-94"/>
                            <RotateTransform Angle="180"/>
                        </TransformGroup>
                    </Setter.Value>
                </Setter>
                <Setter TargetName="Shine" Property="InvertAnimation" Value="True" />
            </MultiDataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ResultControlStyle" TargetType="Control">
        <Setter Property="Visibility" Value="Hidden"/>

        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RollState}" Value="ResultReady"/>
                    <Condition Binding="{Binding Success}" Value="True"/>

                </MultiDataTrigger.Conditions>
                <Setter Property="Template" Value="{StaticResource SuccessResultTemplate}"/>
                <Setter Property="Visibility" Value="Visible"/>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RollState}" Value="ResultReady"/>
                    <Condition Binding="{Binding Success}" Value="False"/>

                </MultiDataTrigger.Conditions>
                <Setter Property="Template" Value="{StaticResource FailedResultTemplate}"/>
                <Setter Property="Visibility" Value="Visible"/>
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ResultCountTemplateStyle" TargetType="ContentControl">
        <Setter Property="Visibility" Value="Hidden"/>
        <Setter Property="Template" Value="{StaticResource ResultCountTemplate}"/>

        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=Tag,RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Value="RevealResultAnimation">
                <Setter Property="Visibility" Value="Visible" />
            </DataTrigger>

            <DataTrigger Binding="{Binding RollState}" Value="ResultReady">
                <Setter Property="Visibility" Value="Hidden"/>
            </DataTrigger>

        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="DieControlHolderTemplate" TargetType="Control">
        <Grid >
            <b:Interaction.Triggers>
                <!-- Setup context and advantage switches on load -->
                <b:EventTrigger EventName="Loaded">
                    <b:Interaction.Behaviors>
                        <b:ConditionBehavior>
                            <b:ConditionalExpression>
                                <b:ComparisonCondition LeftOperand="{Binding RollContext}" Operator="Equal" RightOperand="LockPick" />
                            </b:ConditionalExpression>
                        </b:ConditionBehavior>
                    </b:Interaction.Behaviors>
                    <b:InvokeCommandAction Command="{Binding Path=DataContext.SoundSetSwitch, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}">
                        <b:InvokeCommandAction.CommandParameter>
                            <MultiBinding Converter="{StaticResource PassThroughConverter}">
                                <Binding Source="UI_HUD_ActiveRoll_Context"/>
                                <Binding Source="LockPick"/>
                            </MultiBinding>
                        </b:InvokeCommandAction.CommandParameter>
                    </b:InvokeCommandAction>
                </b:EventTrigger>

                <b:EventTrigger EventName="Loaded">
                    <b:Interaction.Behaviors>
                        <b:ConditionBehavior>
                            <b:ConditionalExpression>
                                <b:ComparisonCondition LeftOperand="{Binding RollContext}" Operator="NotEqual" RightOperand="LockPick" />
                            </b:ConditionalExpression>
                        </b:ConditionBehavior>
                    </b:Interaction.Behaviors>
                    <b:InvokeCommandAction Command="{Binding Path=DataContext.SoundSetSwitch, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}">
                        <b:InvokeCommandAction.CommandParameter>
                            <MultiBinding Converter="{StaticResource PassThroughConverter}">
                                <Binding Source="UI_HUD_ActiveRoll_Context"/>
                                <Binding Source="Normal"/>
                            </MultiBinding>
                        </b:InvokeCommandAction.CommandParameter>
                    </b:InvokeCommandAction>
                </b:EventTrigger>

                <b:EventTrigger EventName="Loaded">
                    <b:Interaction.Behaviors>
                        <b:ConditionBehavior>
                            <b:ConditionalExpression>
                                <b:ComparisonCondition LeftOperand="{Binding Path=DataContext.Roll.RollAdvantageType, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Operator="Equal" RightOperand="Advantage" />
                            </b:ConditionalExpression>
                        </b:ConditionBehavior>
                    </b:Interaction.Behaviors>
                    <b:InvokeCommandAction Command="{Binding Path=DataContext.SoundSetSwitch, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}">
                        <b:InvokeCommandAction.CommandParameter>
                            <MultiBinding Converter="{StaticResource PassThroughConverter}">
                                <Binding Source="UI_HUD_ActiveRoll_AdvantageType"/>
                                <Binding Source="Advantage"/>
                            </MultiBinding>
                        </b:InvokeCommandAction.CommandParameter>
                    </b:InvokeCommandAction>
                </b:EventTrigger>

                <b:EventTrigger EventName="Loaded">
                    <b:Interaction.Behaviors>
                        <b:ConditionBehavior>
                            <b:ConditionalExpression>
                                <b:ComparisonCondition LeftOperand="{Binding Path=DataContext.Roll.RollAdvantageType, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Operator="Equal" RightOperand="Disadvantage" />
                            </b:ConditionalExpression>
                        </b:ConditionBehavior>
                    </b:Interaction.Behaviors>
                    <b:InvokeCommandAction Command="{Binding Path=DataContext.SoundSetSwitch, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}">
                        <b:InvokeCommandAction.CommandParameter>
                            <MultiBinding Converter="{StaticResource PassThroughConverter}">
                                <Binding Source="UI_HUD_ActiveRoll_AdvantageType"/>
                                <Binding Source="Disadvantage"/>
                            </MultiBinding>
                        </b:InvokeCommandAction.CommandParameter>
                    </b:InvokeCommandAction>
                </b:EventTrigger>

                <b:EventTrigger EventName="Loaded">
                    <b:Interaction.Behaviors>
                        <b:ConditionBehavior>
                            <b:ConditionalExpression>
                                <b:ComparisonCondition LeftOperand="{Binding Path=DataContext.Roll.RollAdvantageType, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Operator="Equal" RightOperand="None" />
                            </b:ConditionalExpression>
                        </b:ConditionBehavior>
                    </b:Interaction.Behaviors>
                    <b:InvokeCommandAction Command="{Binding Path=DataContext.SoundSetSwitch, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}">
                        <b:InvokeCommandAction.CommandParameter>
                            <MultiBinding Converter="{StaticResource PassThroughConverter}">
                                <Binding Source="UI_HUD_ActiveRoll_AdvantageType"/>
                                <Binding Source="Normal"/>
                            </MultiBinding>
                        </b:InvokeCommandAction.CommandParameter>
                    </b:InvokeCommandAction>
                </b:EventTrigger>

                <b:PropertyChangedTrigger Binding="{Binding Path=DataContext.Roll.RollAdvantageType, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}">
                    <b:Interaction.Behaviors>
                        <b:ConditionBehavior>
                            <b:ConditionalExpression>
                                <b:ComparisonCondition LeftOperand="{Binding Path=DataContext.Roll.RollAdvantageType, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Operator="Equal" RightOperand="None" />
                            </b:ConditionalExpression>
                        </b:ConditionBehavior>
                    </b:Interaction.Behaviors>
                    <ls:LSPlaySound Sound="UI_HUD_DiceRoll_Bonus_Advantage_Removed" />
                    <b:InvokeCommandAction Command="{Binding Path=DataContext.SoundSetSwitch, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}">
                        <b:InvokeCommandAction.CommandParameter>
                            <MultiBinding Converter="{StaticResource PassThroughConverter}">
                                <Binding Source="UI_HUD_ActiveRoll_AdvantageType"/>
                                <Binding Source="Normal"/>
                            </MultiBinding>
                        </b:InvokeCommandAction.CommandParameter>
                    </b:InvokeCommandAction>
                </b:PropertyChangedTrigger>

                <b:PropertyChangedTrigger Binding="{Binding Path=DataContext.Roll.RollAdvantageType, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}">
                    <b:Interaction.Behaviors>
                        <b:ConditionBehavior>
                            <b:ConditionalExpression>
                                <b:ComparisonCondition LeftOperand="{Binding Path=DataContext.Roll.RollAdvantageType, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Operator="Equal" RightOperand="Advantage" />
                            </b:ConditionalExpression>
                        </b:ConditionBehavior>
                    </b:Interaction.Behaviors>
                    <b:InvokeCommandAction Command="{Binding Path=DataContext.SoundSetSwitch, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}">
                        <b:InvokeCommandAction.CommandParameter>
                            <MultiBinding Converter="{StaticResource PassThroughConverter}">
                                <Binding Source="UI_HUD_ActiveRoll_AdvantageType"/>
                                <Binding Source="Advantage"/>
                            </MultiBinding>
                        </b:InvokeCommandAction.CommandParameter>
                    </b:InvokeCommandAction>
                </b:PropertyChangedTrigger>

                <b:PropertyChangedTrigger Binding="{Binding Path=DataContext.Roll.RollAdvantageType, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}">
                    <b:Interaction.Behaviors>
                        <b:ConditionBehavior>
                            <b:ConditionalExpression>
                                <b:ComparisonCondition LeftOperand="{Binding Path=DataContext.Roll.RollAdvantageType, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Operator="Equal" RightOperand="Disadvantage" />
                            </b:ConditionalExpression>
                        </b:ConditionBehavior>
                    </b:Interaction.Behaviors>
                    <b:InvokeCommandAction Command="{Binding Path=DataContext.SoundSetSwitch, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}">
                        <b:InvokeCommandAction.CommandParameter>
                            <MultiBinding Converter="{StaticResource PassThroughConverter}">
                                <Binding Source="UI_HUD_ActiveRoll_AdvantageType"/>
                                <Binding Source="Disadvantage"/>
                            </MultiBinding>
                        </b:InvokeCommandAction.CommandParameter>
                    </b:InvokeCommandAction>
                </b:PropertyChangedTrigger>

                <b:DataTrigger Binding="{Binding RollState}" Value="ResultReady" >
                    <b:Interaction.Behaviors>
                        <b:ConditionBehavior>
                            <b:ConditionalExpression>
                                <b:ComparisonCondition LeftOperand="{Binding Success}" Operator="Equal" RightOperand="False"/>
                            </b:ConditionalExpression>
                        </b:ConditionBehavior>
                    </b:Interaction.Behaviors>
                    <b:ControlStoryboardAction ControlStoryboardOption="Play" Storyboard="{StaticResource FailDCAnim}" />
                </b:DataTrigger>

                <b:EventTrigger EventName="Loaded">
                    <b:Interaction.Behaviors>
                        <b:ConditionBehavior>
                            <b:ConditionalExpression>
                                <b:ComparisonCondition LeftOperand="{Binding RollState}" Operator="Equal" RightOperand="IntroductionAnimation" />
                            </b:ConditionalExpression>
                        </b:ConditionBehavior>
                    </b:Interaction.Behaviors>
                    <b:ControlStoryboardAction Storyboard="{StaticResource MainStoryBoardIntro}" ControlStoryboardOption="Play"/>
                </b:EventTrigger>
                <b:EventTrigger EventName="Loaded">
                    <b:Interaction.Behaviors>
                        <b:ConditionBehavior>
                            <b:ConditionalExpression>
                                <b:ComparisonCondition LeftOperand="{Binding RollState}" Operator="Equal" RightOperand="IntroductionAnimation" />
                                <b:ComparisonCondition LeftOperand="{Binding Path=DataContext.Roll.RollAdvantageType, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Operator="Equal" RightOperand="None" />
                            </b:ConditionalExpression>
                        </b:ConditionBehavior>
                    </b:Interaction.Behaviors>
                    <ls:LSPlaySound Sound="UI_HUD_DiceRoll_Appear"/>
                </b:EventTrigger>
                <b:EventTrigger EventName="Loaded">
                    <b:Interaction.Behaviors>
                        <b:ConditionBehavior>
                            <b:ConditionalExpression>
                                <b:ComparisonCondition LeftOperand="{Binding RollState}" Operator="Equal" RightOperand="IntroductionAnimation" />
                                <b:ComparisonCondition LeftOperand="{Binding Path=DataContext.Roll.RollAdvantageType, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Operator="Equal" RightOperand="Advantage" />
                            </b:ConditionalExpression>
                        </b:ConditionBehavior>
                    </b:Interaction.Behaviors>
                    <ls:LSPlaySound Sound="UI_HUD_DiceRoll_Appear_Advantage"/>
                </b:EventTrigger>
                <b:EventTrigger EventName="Loaded">
                    <b:Interaction.Behaviors>
                        <b:ConditionBehavior>
                            <b:ConditionalExpression>
                                <b:ComparisonCondition LeftOperand="{Binding RollState}" Operator="Equal" RightOperand="IntroductionAnimation" />
                                <b:ComparisonCondition LeftOperand="{Binding Path=DataContext.Roll.RollAdvantageType, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Operator="Equal" RightOperand="Disadvantage" />
                            </b:ConditionalExpression>
                        </b:ConditionBehavior>
                    </b:Interaction.Behaviors>
                    <ls:LSPlaySound Sound="UI_HUD_DiceRoll_Appear_Disadvantage"/>
                </b:EventTrigger>
                <b:EventTrigger EventName="Loaded">
                    <b:Interaction.Behaviors>
                        <b:ConditionBehavior>
                            <b:ConditionalExpression>
                                <b:ComparisonCondition LeftOperand="{Binding RollState}" Operator="Equal" RightOperand="IntroductionAnimation" />
                                <b:ComparisonCondition LeftOperand="{Binding Path=DataContext.Roll.Modifiers.Count, Converter={StaticResource CountToVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Operator="Equal" RightOperand="Visible" />
                            </b:ConditionalExpression>
                        </b:ConditionBehavior>
                    </b:Interaction.Behaviors>
                    <ls:LSPlaySound Sound="UI_HUD_DiceRoll_Appear_Bonus"/>
                </b:EventTrigger>

                <b:EventTrigger EventName="Unloaded">
                    <ls:LSPlaySound Sound="UI_HUD_DiceRoll_Disappear"/>
                </b:EventTrigger>

                <b:DataTrigger Binding="{Binding RollState}" Value="IntroductionAnimation">
                    <b:ControlStoryboardAction ControlStoryboardOption="Stop" Storyboard="{StaticResource FailDCAnim}" />
                    <b:ControlStoryboardAction Storyboard="{StaticResource MainStoryBoardIntro}" ControlStoryboardOption="Play"/>
                </b:DataTrigger>

                <b:StoryboardCompletedTrigger Storyboard="{StaticResource MainStoryBoardIntro}">
                    <b:InvokeCommandAction Command="{Binding TriggerNextPhaseCommand}"/>
                </b:StoryboardCompletedTrigger>



                <b:DataTrigger Binding="{Binding RollState}" Value="IntroductionAnimation">
                    <ls:LSControlStoryboard >
                        <ls:LSControlStoryboard.Storyboard>

                            <Storyboard >
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="RollBonusTexts">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:1.2" Value="0">
                                        <EasingDoubleKeyFrame.EasingFunction>
                                            <ExponentialEase EasingMode="EaseOut"/>
                                        </EasingDoubleKeyFrame.EasingFunction>
                                    </EasingDoubleKeyFrame>
                                    <EasingDoubleKeyFrame KeyTime="0:0:1.6" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>

                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="textBlockTarget">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="-50"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="-50">
                                        <EasingDoubleKeyFrame.EasingFunction>
                                            <ExponentialEase EasingMode="EaseOut"/>
                                        </EasingDoubleKeyFrame.EasingFunction>
                                    </EasingDoubleKeyFrame>
                                    <EasingDoubleKeyFrame KeyTime="0:0:1.25" Value="0">
                                        <EasingDoubleKeyFrame.EasingFunction>
                                            <ExponentialEase EasingMode="EaseOut"/>
                                        </EasingDoubleKeyFrame.EasingFunction>
                                    </EasingDoubleKeyFrame>
                                </DoubleAnimationUsingKeyFrames>


                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="textBlockTarget">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="0">
                                        <EasingDoubleKeyFrame.EasingFunction>
                                            <ExponentialEase EasingMode="EaseOut"/>
                                        </EasingDoubleKeyFrame.EasingFunction>
                                    </EasingDoubleKeyFrame>
                                    <EasingDoubleKeyFrame KeyTime="0:0:1.25" Value="1">
                                        <EasingDoubleKeyFrame.EasingFunction>
                                            <ExponentialEase EasingMode="EaseOut"/>
                                        </EasingDoubleKeyFrame.EasingFunction>
                                    </EasingDoubleKeyFrame>
                                </DoubleAnimationUsingKeyFrames>


                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="textBlockTargetNumber">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="0">
                                        <EasingDoubleKeyFrame.EasingFunction>
                                            <ExponentialEase EasingMode="EaseOut"/>
                                        </EasingDoubleKeyFrame.EasingFunction>
                                    </EasingDoubleKeyFrame>
                                    <EasingDoubleKeyFrame KeyTime="0:0:1.25" Value="1">
                                        <EasingDoubleKeyFrame.EasingFunction>
                                            <ExponentialEase EasingMode="EaseOut"/>
                                        </EasingDoubleKeyFrame.EasingFunction>
                                    </EasingDoubleKeyFrame>
                                </DoubleAnimationUsingKeyFrames>

                            </Storyboard>
                        </ls:LSControlStoryboard.Storyboard>
                    </ls:LSControlStoryboard>
                </b:DataTrigger>

                <b:DataTrigger Binding="{Binding RollState}" Value="StartRoll">
                    <ls:LSControlStoryboard >
                        <ls:LSControlStoryboard.Storyboard>

                            <Storyboard Duration="0:0:6" >
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="RollBonusTexts">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1">
                                        <EasingDoubleKeyFrame.EasingFunction>
                                            <CircleEase EasingMode="EaseIn"/>
                                        </EasingDoubleKeyFrame.EasingFunction>
                                    </EasingDoubleKeyFrame>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                                        <EasingDoubleKeyFrame.EasingFunction>
                                            <CircleEase EasingMode="EaseOut"/>
                                        </EasingDoubleKeyFrame.EasingFunction>
                                    </EasingDoubleKeyFrame>
                                </DoubleAnimationUsingKeyFrames>


                            </Storyboard>
                        </ls:LSControlStoryboard.Storyboard>
                    </ls:LSControlStoryboard>
                    <ls:LSPlaySound Sound="UI_HUD_DiceRoll_RollStart"/>
                </b:DataTrigger>
            </b:Interaction.Triggers>

            <Grid x:Name="textElements" RenderTransformOrigin="0.5,0.5" Style="{DynamicResource TextElementHolderStyle}" VerticalAlignment="Top"  >
                <Grid.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform X="0" Y="20"/>
                    </TransformGroup>
                </Grid.RenderTransform>


                <Control HorizontalAlignment="Center" x:Name="RollBonusTexts" Style="{DynamicResource RollBonusStyle}" Visibility="Visible" VerticalAlignment="Bottom" >
                    <Control.Template>
                        <ControlTemplate>
                            <StackPanel >
                                <Image x:Name="advImg" Stretch="None" Visibility="Collapsed" />
                                <TextBlock x:Name="AdvantageText" Style="{DynamicResource ActiveRollTextBlock}"  Text="" TextAlignment="Center" FontSize="{StaticResource MediumFontSize}"/>
                            </StackPanel>

                            <ControlTemplate.Triggers>
                                <DataTrigger Binding="{Binding Roll.RollAdvantageType}" Value="Advantage">
                                    <Setter TargetName="advImg" Property="Visibility" Value="Visible" />
                                    <Setter TargetName="AdvantageText" Property="Text" Value="{Binding Source='hfc9b8156g8e4fg4086g9c6cg26dbb03aa466', Converter={StaticResource TranslatedStringConverter}}"/>
                                    <Setter TargetName="AdvantageText" Property="Foreground" Value="{StaticResource LS_bonusTxtColor}"/>
                                    <Setter TargetName="advImg" Property="Source" Value="{StaticResource IconAdvantage}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Roll.RollAdvantageType}" Value="Disadvantage">
                                    <Setter TargetName="advImg" Property="Visibility" Value="Visible" />
                                    <Setter TargetName="AdvantageText" Property="Text" Value="{Binding Source='h34944186g018cg474dg96d8gd56417c3e086', Converter={StaticResource TranslatedStringConverter}}"/>
                                    <Setter TargetName="advImg" Property="Source" Value="{StaticResource IconDisadvantage}" />
                                    <Setter TargetName="AdvantageText" Property="Foreground" Value="{StaticResource LS_alertTxtColor}"/>
                                </DataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Control.Template>
                </Control>

                <StackPanel HorizontalAlignment="Center" VerticalAlignment="Top" Style="{DynamicResource TargetTextHolderStyle}" Visibility="{Binding Roll.ShowDC, Converter={StaticResource BoolToVisibleConverter}}">
                    <TextBlock x:Name="textBlockTarget" MaxWidth="300" Style="{DynamicResource textBlockTargetStyle}" 
                               ls:TextBlockFormatter.SourceText="{Binding Source=h9836d2b4g137eg4cc9g8d76g1ec4121376bf,ConverterParameter=ToUpper, Converter={StaticResource TranslatedStringConverter}}"/>
                    <Grid x:Name="targetScoreAnimation" Style="{DynamicResource targetScoreAnimationStyle}" HorizontalAlignment="Center" RenderTransformOrigin="0.5,0.5">
                        <Grid.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform/>
                                <SkewTransform/>
                                <RotateTransform/>
                                <TranslateTransform />
                            </TransformGroup>
                        </Grid.RenderTransform>
                        <TextBlock x:Name="textBlockTargetNumber" Text="{Binding Roll.DifficultyCheck}" Style="{DynamicResource DCTextStyle}" VerticalAlignment="Center" FontSize="{StaticResource HumongousFontSize}" />
                    </Grid>
                </StackPanel>

                <Grid x:Name="TargetScore" Style="{DynamicResource TargetScoreGridStyle}"  HorizontalAlignment="Center" VerticalAlignment="Top"  Visibility="{Binding Roll.ShowDC, Converter={StaticResource BoolToVisibleConverter}}">
                    <Grid.ToolTip>
                        <ls:LSTooltip Content="{Binding .}">
                            <ls:LSTooltip.ContentTemplate>
                                <DataTemplate>
                                    <StackPanel MaxWidth="{DynamicResource MaxTooltipContentWidth}">
                                        <TextBlock Text="{Binding Source=hdcf47f9ag2bbfg4ce6gba35g33f0a1dd77b4, Converter={StaticResource TranslatedStringConverter}}" Style="{DynamicResource TooltipTitleStyle}"/>
                                        <TextBlock ls:TextBlockFormatter.SourceText="{Binding Source=ha80d9b90g21bcg44a2gbedfgc4672da63a81, Converter={StaticResource TranslatedStringConverter}}" Style="{DynamicResource TooltipBodyStyle}"/>
                                    </StackPanel>
                                </DataTemplate>
                            </ls:LSTooltip.ContentTemplate>
                        </ls:LSTooltip>
                    </Grid.ToolTip>
                </Grid>


            </Grid>
            <Grid x:Name="DieHolder" Style="{DynamicResource DieHolderStyle}" HorizontalAlignment="Center" Width="700" IsHitTestVisible="False" Tag="AllowMoveSound">
                <Grid.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Grid.RenderTransform>
                <Grid.Resources>

                    <ControlTemplate x:Key="DieTemplate" TargetType="Control">
                        <Grid x:Name="d20Holder" RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Center" VerticalAlignment="Center" Width="312" Height="312" >
                            <Grid.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Grid.RenderTransform>
                            <Canvas x:Name="Shadow">
                                <Canvas.RenderTransform>
                                    <TranslateTransform X="155" Y="155"/>
                                </Canvas.RenderTransform>
                                <Path Style="{StaticResource DieShadowStyle}"/>
                            </Canvas>
                            <ContentControl x:Name="d20Die" Content="20" Template="{StaticResource DiceTemplate}"/>
                            <ls:AnimatedImage x:Name="Shine" Style="{StaticResource ShineStyle}" Visibility="Hidden">
                                <ls:AnimatedImage.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1.0" ScaleY="1.0" />
                                        <TranslateTransform X="0" Y="0"/>
                                        <RotateTransform Angle="0"/>
                                    </TransformGroup>
                                </ls:AnimatedImage.RenderTransform>
                            </ls:AnimatedImage>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding DataContext.CurrentDiceStyle.Flip20,RelativeSource={RelativeSource AncestorType=ls:UIWidget}}" Value="True">
                                <Setter TargetName="Shine" Property="RenderTransform" >
                                    <Setter.Value>
                                        <TransformGroup>
                                            <ScaleTransform ScaleX="1.0" ScaleY="1.0" />
                                            <TranslateTransform X="0" Y="0"/>
                                            <RotateTransform Angle="180"/>
                                        </TransformGroup>
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="Shine" Property="InvertAnimation" Value="True" />
                            </DataTrigger>
                            <Trigger Property="IsVisible" Value="True">
                                <Trigger.EnterActions>
                                    <StopStoryboard BeginStoryboardName="bgStartPhaseAnim3"/>
                                    <BeginStoryboard x:Name="bgStartPhaseAnim3">
                                        <BeginStoryboard.Storyboard>
                                            <Storyboard Children="{StaticResource WaitingDieJump}" FillBehavior="Stop"/>
                                        </BeginStoryboard.Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <StopStoryboard BeginStoryboardName="bgStartPhaseAnim3" />
                                </Trigger.ExitActions>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                    <Style x:Key="DieControlStyle" TargetType="Control">
                        <Setter Property="RenderTransform">
                            <Setter.Value>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
                        <Setter Property="Template" Value="{StaticResource DieTemplate}" />

                    </Style>
                </Grid.Resources>
                <b:Interaction.Triggers>
                    <b:EventTrigger EventName="MouseLeftButtonDown" >
                        <b:InvokeCommandAction Command="{Binding UserTriggeredNextPhaseCommand}" CommandParameter="True"/>
                    </b:EventTrigger>
                </b:Interaction.Triggers>
                <Control Style="{StaticResource DieControlStyle}" x:Name="d20" HorizontalAlignment="Center" Tag="Left" Margin="0,0,0,0" />
                <Control Style="{StaticResource DieControlStyle}" x:Name="d20B" HorizontalAlignment="Center" Tag="Right" Visibility="Visible" Margin="0,0,0,0"/>
            </Grid>

        </Grid>
        <ControlTemplate.Triggers>

            <DataTrigger Binding="{Binding Roll.RollAdvantageType}" Value="None">
                <Setter TargetName="d20B" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="d20" Property="Margin" Value="0" />
            </DataTrigger>

            <DataTrigger Binding="{Binding Roll.RollAdvantageType}" Value="Advantage">
                <DataTrigger.EnterActions>
                    <BeginStoryboard x:Name="DiceAdvIntro" Storyboard="{StaticResource DiceAdvantageIntro}"/>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <StopStoryboard BeginStoryboardName="DiceAdvIntro"/>
                </DataTrigger.ExitActions>
            </DataTrigger>
            <DataTrigger Binding="{Binding Roll.RollAdvantageType}" Value="Disadvantage">
                <DataTrigger.EnterActions>
                    <BeginStoryboard x:Name="DicedisAdvIntro" Storyboard="{StaticResource DiceAdvantageIntro}"/>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <StopStoryboard BeginStoryboardName="DicedisAdvIntro"/>
                </DataTrigger.ExitActions>
            </DataTrigger>

            <EventTrigger RoutedEvent="FrameworkElement.Unloaded">
                <StopStoryboard BeginStoryboardName="DiceAdvIntro"/>
                <StopStoryboard BeginStoryboardName="DicedisAdvIntro"/>
            </EventTrigger>

            <DataTrigger Binding="{Binding RollState}" Value="WaitForStart">
                <Setter TargetName="DieHolder" Property="IsHitTestVisible" Value="True"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding RollState}" Value="WaitForReRoll">
                <Setter TargetName="DieHolder" Property="IsHitTestVisible" Value="True"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding RollState}" Value="ResultReady">
                <Setter TargetName="RollBonusTexts" Property="Visibility" Value="Hidden" />
            </DataTrigger>

            <DataTrigger Binding="{Binding RollState}" Value="StartRoll">
                <Setter TargetName="d20"  Property="Visibility" Value="Hidden" />
                <Setter TargetName="d20B"  Property="Visibility" Value="Hidden" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

</ResourceDictionary>